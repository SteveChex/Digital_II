

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 06 17:45:18 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383                           
   384                           	psect	idataBANK0
   385  0548                     __pidataBANK0:
   386                           
   387                           ;initializer for _TX_data
   388  0548  3405               	retlw	5
   389                           
   390                           	psect	strings
   391  017B                     __pstrings:
   392  017B                     stringtab:
   393  017B                     __stringtab:
   394                           
   395                           ;	String table - string pointers are 1 byte each
   396  017B  1BFF               	btfsc	btemp+1,7
   397  017C  2985               	ljmp	stringcode
   398  017D  1383               	bcf	3,7
   399  017E  187F               	btfsc	btemp+1,0
   400  017F  1783               	bsf	3,7
   401  0180  0800               	movf	0,w
   402  0181  0A84               	incf	4,f
   403  0182  1903               	skipnz
   404  0183  0AFF               	incf	btemp+1,f
   405  0184  0008               	return
   406  0185                     stringcode:
   407  0185                     stringdir:
   408  0185  3001               	movlw	high stringdir
   409  0186  008A               	movwf	10
   410  0187  0804               	movf	4,w
   411  0188  0A84               	incf	4,f
   412  0189  0782               	addwf	2,f
   413  018A                     __stringbase:
   414  018A  3400               	retlw	0
   415  018B                     __end_of__stringtab:
   416  018B                     _dpowers:
   417  018B  3401               	retlw	1
   418  018C  3400               	retlw	0
   419  018D  340A               	retlw	10
   420  018E  3400               	retlw	0
   421  018F  3464               	retlw	100
   422  0190  3400               	retlw	0
   423  0191  34E8               	retlw	232
   424  0192  3403               	retlw	3
   425  0193  3410               	retlw	16
   426  0194  3427               	retlw	39
   427  0195                     __end_of_dpowers:
   428  001A                     _RCREG	set	26
   429  000C                     _PIR1bits	set	12
   430  0019                     _TXREG	set	25
   431  0018                     _RCSTA	set	24
   432  001E                     _ADRESH	set	30
   433  000B                     _INTCON	set	11
   434  001F                     _ADCON0bits	set	31
   435  001F                     _ADCON0	set	31
   436  0008                     _PORTD	set	8
   437  0006                     _PORTB	set	6
   438  0033                     _RB3	set	51
   439  0032                     _RB2	set	50
   440  0047                     _RD7	set	71
   441  0046                     _RD6	set	70
   442  0045                     _RD5	set	69
   443  0044                     _RD4	set	68
   444  0043                     _RD3	set	67
   445  0042                     _RD2	set	66
   446  0041                     _RD1	set	65
   447  0040                     _RD0	set	64
   448  0065                     _RCIF	set	101
   449  0066                     _ADIF	set	102
   450  0098                     _TXSTA	set	152
   451  009A                     _SPBRGH	set	154
   452  0099                     _SPBRG	set	153
   453  008C                     _PIE1	set	140
   454  009F                     _ADCON1	set	159
   455  0086                     _TRISB	set	134
   456  0088                     _TRISD	set	136
   457  0098                     _TXSTAbits	set	152
   458  0465                     _RCIE	set	1125
   459  0466                     _ADIE	set	1126
   460  0187                     _BAUDCTL	set	391
   461  0189                     _ANSELH	set	393
   462  0195                     STR_7:
   463  0195  3477               	retlw	119	;'w'
   464  0196  3477               	retlw	119	;'w'
   465  0197  3477               	retlw	119	;'w'
   466  0198  342E               	retlw	46	;'.'
   467  0199  3465               	retlw	101	;'e'
   468  019A  346C               	retlw	108	;'l'
   469  019B  3465               	retlw	101	;'e'
   470  019C  3463               	retlw	99	;'c'
   471  019D  3474               	retlw	116	;'t'
   472  019E  3472               	retlw	114	;'r'
   473  019F  346F               	retlw	111	;'o'
   474  01A0  3453               	retlw	83	;'S'
   475  01A1  346F               	retlw	111	;'o'
   476  01A2  346D               	retlw	109	;'m'
   477  01A3  3465               	retlw	101	;'e'
   478  01A4  342E               	retlw	46	;'.'
   479  01A5  3463               	retlw	99	;'c'
   480  01A6  346F               	retlw	111	;'o'
   481  01A7  346D               	retlw	109	;'m'
   482  01A8  3400               	retlw	0
   483  01A9                     STR_2:
   484  01A9  3420               	retlw	32	;' '
   485  01AA  3425               	retlw	37	;'%'
   486  01AB  3433               	retlw	51	;'3'
   487  01AC  3475               	retlw	117	;'u'
   488  01AD  3420               	retlw	32	;' '
   489  01AE  3420               	retlw	32	;' '
   490  01AF  3425               	retlw	37	;'%'
   491  01B0  3433               	retlw	51	;'3'
   492  01B1  3475               	retlw	117	;'u'
   493  01B2  3420               	retlw	32	;' '
   494  01B3  3420               	retlw	32	;' '
   495  01B4  3425               	retlw	37	;'%'
   496  01B5  3433               	retlw	51	;'3'
   497  01B6  3475               	retlw	117	;'u'
   498  01B7  3420               	retlw	32	;' '
   499  01B8  3420               	retlw	32	;' '
   500  01B9  3400               	retlw	0
   501  01BA                     STR_1:
   502  01BA  3420               	retlw	32	;' '
   503  01BB  3450               	retlw	80	;'P'
   504  01BC  344F               	retlw	79	;'O'
   505  01BD  3454               	retlw	84	;'T'
   506  01BE  3431               	retlw	49	;'1'
   507  01BF  3420               	retlw	32	;' '
   508  01C0  3450               	retlw	80	;'P'
   509  01C1  344F               	retlw	79	;'O'
   510  01C2  3454               	retlw	84	;'T'
   511  01C3  3432               	retlw	50	;'2'
   512  01C4  3420               	retlw	32	;' '
   513  01C5  3443               	retlw	67	;'C'
   514  01C6  344F               	retlw	79	;'O'
   515  01C7  344E               	retlw	78	;'N'
   516  01C8  3454               	retlw	84	;'T'
   517  01C9  3420               	retlw	32	;' '
   518  01CA  3400               	retlw	0
   519  01CB                     STR_3:
   520  01CB  344C               	retlw	76	;'L'
   521  01CC  3443               	retlw	67	;'C'
   522  01CD  3444               	retlw	68	;'D'
   523  01CE  3420               	retlw	32	;' '
   524  01CF  344C               	retlw	76	;'L'
   525  01D0  3469               	retlw	105	;'i'
   526  01D1  3462               	retlw	98	;'b'
   527  01D2  3472               	retlw	114	;'r'
   528  01D3  3461               	retlw	97	;'a'
   529  01D4  3472               	retlw	114	;'r'
   530  01D5  3479               	retlw	121	;'y'
   531  01D6  3420               	retlw	32	;' '
   532  01D7  3466               	retlw	102	;'f'
   533  01D8  346F               	retlw	111	;'o'
   534  01D9  3472               	retlw	114	;'r'
   535  01DA  3400               	retlw	0
   536  01DB                     STR_5:
   537  01DB  3444               	retlw	68	;'D'
   538  01DC  3465               	retlw	101	;'e'
   539  01DD  3476               	retlw	118	;'v'
   540  01DE  3465               	retlw	101	;'e'
   541  01DF  346C               	retlw	108	;'l'
   542  01E0  346F               	retlw	111	;'o'
   543  01E1  3470               	retlw	112	;'p'
   544  01E2  3465               	retlw	101	;'e'
   545  01E3  3464               	retlw	100	;'d'
   546  01E4  3420               	retlw	32	;' '
   547  01E5  3442               	retlw	66	;'B'
   548  01E6  3479               	retlw	121	;'y'
   549  01E7  3400               	retlw	0
   550  01E8                     STR_6:
   551  01E8  3465               	retlw	101	;'e'
   552  01E9  346C               	retlw	108	;'l'
   553  01EA  3465               	retlw	101	;'e'
   554  01EB  3463               	retlw	99	;'c'
   555  01EC  3474               	retlw	116	;'t'
   556  01ED  3472               	retlw	114	;'r'
   557  01EE  346F               	retlw	111	;'o'
   558  01EF  3453               	retlw	83	;'S'
   559  01F0  346F               	retlw	111	;'o'
   560  01F1  346D               	retlw	109	;'m'
   561  01F2  3465               	retlw	101	;'e'
   562  01F3  3400               	retlw	0
   563  01F4                     STR_4:
   564  01F4  344D               	retlw	77	;'M'
   565  01F5  3450               	retlw	80	;'P'
   566  01F6  344C               	retlw	76	;'L'
   567  01F7  3441               	retlw	65	;'A'
   568  01F8  3442               	retlw	66	;'B'
   569  01F9  3420               	retlw	32	;' '
   570  01FA  3458               	retlw	88	;'X'
   571  01FB  3443               	retlw	67	;'C'
   572  01FC  3438               	retlw	56	;'8'
   573  01FD  3400               	retlw	0
   574                           
   575                           	psect	cinit
   576  0011                     start_initialization:	
   577                           ; #config settings
   578                           
   579  0011                     __initialization:
   580                           
   581                           ; Initialize objects allocated to BANK0
   582  0011  120A  118A  2548  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   583  0016  00CE               	movwf	__pdataBANK0& (0+127)
   584                           
   585                           ; Clear objects allocated to BANK0
   586  0017  01CA               	clrf	__pbssBANK0& (0+127)
   587  0018  01CB               	clrf	(__pbssBANK0+1)& (0+127)
   588  0019  01CC               	clrf	(__pbssBANK0+2)& (0+127)
   589  001A  01CD               	clrf	(__pbssBANK0+3)& (0+127)
   590                           
   591                           ; Clear objects allocated to COMMON
   592  001B  01F7               	clrf	__pbssCOMMON& (0+127)
   593  001C                     end_of_initialization:	
   594                           ;End of C runtime variable initialization code
   595                           
   596  001C                     __end_of__initialization:
   597  001C  0183               	clrf	3
   598  001D  120A  118A  2B76   	ljmp	_main	;jump to C main() function
   599                           
   600                           	psect	bssCOMMON
   601  0077                     __pbssCOMMON:
   602  0077                     _RC_data:
   603  0077                     	ds	1
   604                           
   605                           	psect	bssBANK0
   606  004A                     __pbssBANK0:
   607  004A                     _cont:
   608  004A                     	ds	1
   609  004B                     _pot2:
   610  004B                     	ds	1
   611  004C                     _pot1:
   612  004C                     	ds	1
   613  004D                     _allData_t:
   614  004D                     	ds	1
   615                           
   616                           	psect	dataBANK0
   617  004E                     __pdataBANK0:
   618  004E                     _TX_data:
   619  004E                     	ds	1
   620                           
   621                           	psect	cstackCOMMON
   622  0070                     __pcstackCOMMON:
   623  0070                     ?_isdigit:
   624  0070                     ?_setup:	
   625                           ; 1 bit 
   626                           
   627  0070                     ?_Lcd_Init:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_adc_start:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_mostrar_datos:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_usart_T_virt:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_usart_T_nl:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_usart_T_erase:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_usart_conf:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_usart_R:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ??_usart_R:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_main:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_isr:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_Lcd_Port:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_Lcd_Cmd:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_Lcd_Write_Char:	
   667                           ; 1 bytes @ 0x0
   668                           
   669                           
   670                           ; 1 bytes @ 0x0
   671  0070                     	ds	1
   672  0071                     usart_R@r_data:
   673                           
   674                           ; 1 bytes @ 0x1
   675  0071                     	ds	1
   676  0072                     ??_isr:
   677                           
   678                           ; 1 bytes @ 0x2
   679  0072                     	ds	4
   680  0076                     ??_setup:
   681  0076                     ??_usart_T_virt:	
   682                           ; 1 bytes @ 0x6
   683                           
   684  0076                     ??_usart_T_nl:	
   685                           ; 1 bytes @ 0x6
   686                           
   687  0076                     ??_usart_T_erase:	
   688                           ; 1 bytes @ 0x6
   689                           
   690  0076                     ??_usart_conf:	
   691                           ; 1 bytes @ 0x6
   692                           
   693  0076                     ??_isdigit:	
   694                           ; 1 bytes @ 0x6
   695                           
   696  0076                     ??_Lcd_Port:	
   697                           ; 1 bytes @ 0x6
   698                           
   699  0076                     ??___wmul:	
   700                           ; 1 bytes @ 0x6
   701                           
   702  0076                     ??___lwdiv:	
   703                           ; 1 bytes @ 0x6
   704                           
   705  0076                     Lcd_Port@a:	
   706                           ; 1 bytes @ 0x6
   707                           
   708  0076                     usart_T_virt@t_data:	
   709                           ; 1 bytes @ 0x6
   710                           
   711                           
   712                           ; 1 bytes @ 0x6
   713  0076                     	ds	1
   714                           
   715                           	psect	cstackBANK0
   716  0020                     __pcstackBANK0:
   717  0020                     ??_adc_start:
   718  0020                     ??_Lcd_Cmd:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0020                     ??_Lcd_Write_Char:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0020                     ?___wmul:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0020                     ?___lwdiv:	
   728                           ; 2 bytes @ 0x0
   729                           
   730  0020                     _isdigit$801:	
   731                           ; 2 bytes @ 0x0
   732                           
   733  0020                     ___wmul@multiplier:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0020                     ___lwdiv@divisor:	
   737                           ; 2 bytes @ 0x0
   738                           
   739                           
   740                           ; 2 bytes @ 0x0
   741  0020                     	ds	1
   742  0021                     Lcd_Write_Char@a:
   743  0021                     isdigit@c:	
   744                           ; 1 bytes @ 0x1
   745                           
   746                           
   747                           ; 1 bytes @ 0x1
   748  0021                     	ds	1
   749  0022                     ?_Lcd_Write_String:
   750  0022                     Lcd_Cmd@a:	
   751                           ; 1 bytes @ 0x2
   752                           
   753  0022                     Lcd_Write_String@a:	
   754                           ; 1 bytes @ 0x2
   755                           
   756  0022                     ___wmul@multiplicand:	
   757                           ; 2 bytes @ 0x2
   758                           
   759  0022                     ___lwdiv@dividend:	
   760                           ; 2 bytes @ 0x2
   761                           
   762                           
   763                           ; 2 bytes @ 0x2
   764  0022                     	ds	1
   765  0023                     ??_Lcd_Init:
   766  0023                     ?_Lcd_Set_Cursor:	
   767                           ; 1 bytes @ 0x3
   768                           
   769  0023                     Lcd_Set_Cursor@b:	
   770                           ; 1 bytes @ 0x3
   771                           
   772                           
   773                           ; 1 bytes @ 0x3
   774  0023                     	ds	1
   775  0024                     ??_Lcd_Set_Cursor:
   776  0024                     ??_Lcd_Write_String:	
   777                           ; 1 bytes @ 0x4
   778                           
   779  0024                     ___wmul@product:	
   780                           ; 1 bytes @ 0x4
   781                           
   782  0024                     ___lwdiv@quotient:	
   783                           ; 2 bytes @ 0x4
   784                           
   785                           
   786                           ; 2 bytes @ 0x4
   787  0024                     	ds	1
   788  0025                     Lcd_Set_Cursor@a:
   789                           
   790                           ; 1 bytes @ 0x5
   791  0025                     	ds	1
   792  0026                     Lcd_Set_Cursor@temp:
   793  0026                     ___lwdiv@counter:	
   794                           ; 1 bytes @ 0x6
   795                           
   796                           
   797                           ; 1 bytes @ 0x6
   798  0026                     	ds	1
   799  0027                     ?___lwmod:
   800  0027                     Lcd_Write_String@i:	
   801                           ; 2 bytes @ 0x7
   802                           
   803  0027                     ___lwmod@divisor:	
   804                           ; 2 bytes @ 0x7
   805                           
   806                           
   807                           ; 2 bytes @ 0x7
   808  0027                     	ds	2
   809  0029                     ___lwmod@dividend:
   810                           
   811                           ; 2 bytes @ 0x9
   812  0029                     	ds	2
   813  002B                     ??___lwmod:
   814                           
   815                           ; 1 bytes @ 0xB
   816  002B                     	ds	1
   817  002C                     ___lwmod@counter:
   818                           
   819                           ; 1 bytes @ 0xC
   820  002C                     	ds	1
   821  002D                     ?_sprintf:
   822  002D                     sprintf@f:	
   823                           ; 2 bytes @ 0xD
   824                           
   825                           
   826                           ; 1 bytes @ 0xD
   827  002D                     	ds	7
   828  0034                     ??_sprintf:
   829                           
   830                           ; 1 bytes @ 0x14
   831  0034                     	ds	3
   832  0037                     sprintf@flag:
   833                           
   834                           ; 1 bytes @ 0x17
   835  0037                     	ds	1
   836  0038                     sprintf@ap:
   837                           
   838                           ; 1 bytes @ 0x18
   839  0038                     	ds	1
   840  0039                     sprintf@val:
   841                           
   842                           ; 2 bytes @ 0x19
   843  0039                     	ds	2
   844  003B                     sprintf@prec:
   845                           
   846                           ; 1 bytes @ 0x1B
   847  003B                     	ds	1
   848  003C                     sprintf@sp:
   849                           
   850                           ; 1 bytes @ 0x1C
   851  003C                     	ds	1
   852  003D                     sprintf@width:
   853                           
   854                           ; 2 bytes @ 0x1D
   855  003D                     	ds	2
   856  003F                     sprintf@c:
   857                           
   858                           ; 1 bytes @ 0x1F
   859  003F                     	ds	1
   860  0040                     ??_mostrar_datos:
   861                           
   862                           ; 1 bytes @ 0x20
   863  0040                     	ds	7
   864  0047                     ??_main:
   865                           
   866                           ; 1 bytes @ 0x27
   867  0047                     	ds	3
   868                           
   869                           	psect	maintext
   870  0376                     __pmaintext:	
   871 ;;
   872 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   873 ;;
   874 ;; *************** function _main *****************
   875 ;; Defined at:
   876 ;;		line 58 in file "lab3.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : B00/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   890 ;;      Params:         0       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0
   892 ;;      Temps:          0       3       0       0       0
   893 ;;      Totals:         0       3       0       0       0
   894 ;;Total ram usage:        3 bytes
   895 ;; Hardware stack levels required when called:    6
   896 ;; This function calls:
   897 ;;		_Lcd_Init
   898 ;;		_adc_start
   899 ;;		_mostrar_datos
   900 ;;		_setup
   901 ;;		_usart_T_erase
   902 ;;		_usart_T_nl
   903 ;;		_usart_T_virt
   904 ;; This function is called by:
   905 ;;		Startup code after reset
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _main
   911  0376                     _main:
   912  0376                     l1858:	
   913                           ;incstack = 0
   914                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   915                           
   916                           
   917                           ;lab3.c: 59:     setup();
   918  0376  120A  118A  2433  120A  118A  	fcall	_setup
   919                           
   920                           ;lab3.c: 60:     Lcd_Init();
   921  037B  120A  118A  22A0  120A  118A  	fcall	_Lcd_Init
   922  0380                     l75:	
   923                           ;lab3.c: 62:     while (1) {
   924                           
   925                           
   926                           ;lab3.c: 63:         adc_start();
   927  0380  120A  118A  24F1  120A  118A  	fcall	_adc_start
   928  0385                     l1860:
   929                           
   930                           ;lab3.c: 64:         mostrar_datos();
   931  0385  120A  118A  2254  120A  118A  	fcall	_mostrar_datos
   932  038A                     l1862:
   933                           
   934                           ;lab3.c: 65:         usart_T_virt(&TX_data);
   935  038A  304E               	movlw	(low (_TX_data| 0))& (0+255)
   936  038B  120A  118A  2515  120A  118A  	fcall	_usart_T_virt
   937  0390                     l76:	
   938                           ;lab3.c: 68:         }
   939                           
   940                           
   941                           ;lab3.c: 66:         while(1 != TXSTAbits.TRMT){
   942  0390  1683               	bsf	3,5	;RP0=1, select bank1
   943  0391  1303               	bcf	3,6	;RP1=0, select bank1
   944  0392  1C98               	btfss	24,1	;volatile
   945  0393  2B95               	goto	u1551
   946  0394  2B96               	goto	u1550
   947  0395                     u1551:
   948  0395  2B90               	goto	l76
   949  0396                     u1550:
   950  0396                     l1864:
   951                           
   952                           ;lab3.c: 69:         usart_T_nl();
   953  0396  120A  118A  2532  120A  118A  	fcall	_usart_T_nl
   954  039B                     l1866:
   955                           
   956                           ;lab3.c: 70:         _delay((unsigned long)((200)*(4000000/4000.0)));
   957  039B  3002               	movlw	2
   958  039C  1283               	bcf	3,5	;RP0=0, select bank0
   959  039D  1303               	bcf	3,6	;RP1=0, select bank0
   960  039E  00C9               	movwf	??_main+2
   961  039F  3004               	movlw	4
   962  03A0  00C8               	movwf	??_main+1
   963  03A1  30B9               	movlw	185
   964  03A2  00C7               	movwf	??_main
   965  03A3                     u1597:
   966  03A3  0BC7               	decfsz	??_main,f
   967  03A4  2BA3               	goto	u1597
   968  03A5  0BC8               	decfsz	??_main+1,f
   969  03A6  2BA3               	goto	u1597
   970  03A7  0BC9               	decfsz	??_main+2,f
   971  03A8  2BA3               	goto	u1597
   972  03A9  2BAA               	nop2
   973  03AA                     l79:	
   974                           ;lab3.c: 73:         }
   975                           
   976                           
   977                           ;lab3.c: 71:         while(1 != TXSTAbits.TRMT){
   978  03AA  1683               	bsf	3,5	;RP0=1, select bank1
   979  03AB  1303               	bcf	3,6	;RP1=0, select bank1
   980  03AC  1C98               	btfss	24,1	;volatile
   981  03AD  2BAF               	goto	u1561
   982  03AE  2BB0               	goto	u1560
   983  03AF                     u1561:
   984  03AF  2BAA               	goto	l79
   985  03B0                     u1560:
   986  03B0                     l1868:
   987                           
   988                           ;lab3.c: 74:         usart_T_erase();
   989  03B0  120A  118A  253D  120A  118A  	fcall	_usart_T_erase
   990  03B5  2B80               	goto	l75
   991  03B6  120A  118A  280E   	ljmp	start
   992  03B9                     __end_of_main:
   993                           
   994                           	psect	text1
   995  0515                     __ptext1:	
   996 ;; *************** function _usart_T_virt *****************
   997 ;; Defined at:
   998 ;;		line 49 in file "USART.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;  t_data          1    wreg     PTR unsigned char 
  1001 ;;		 -> TX_data(1), 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  t_data          1    6[COMMON] PTR unsigned char 
  1004 ;;		 -> TX_data(1), 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, fsr0l, fsr0h
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1014 ;;      Params:         0       0       0       0       0
  1015 ;;      Locals:         1       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0
  1017 ;;      Totals:         1       0       0       0       0
  1018 ;;Total ram usage:        1 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    2
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function _usart_T_virt
  1030  0515                     _usart_T_virt:
  1031                           
  1032                           ;incstack = 0
  1033                           ; Regs used in _usart_T_virt: [wregfsr0]
  1034                           ;usart_T_virt@t_data stored from wreg
  1035  0515  00F6               	movwf	usart_T_virt@t_data
  1036  0516                     l1506:
  1037                           
  1038                           ;USART.c: 50:     if(1 == TXSTAbits.TRMT){
  1039  0516  1683               	bsf	3,5	;RP0=1, select bank1
  1040  0517  1303               	bcf	3,6	;RP1=0, select bank1
  1041  0518  1C98               	btfss	24,1	;volatile
  1042  0519  2D1B               	goto	u1031
  1043  051A  2D1C               	goto	u1030
  1044  051B                     u1031:
  1045  051B  2D23               	goto	l210
  1046  051C                     u1030:
  1047  051C                     l1508:
  1048                           
  1049                           ;USART.c: 51:         TXREG = *t_data;
  1050  051C  0876               	movf	usart_T_virt@t_data,w
  1051  051D  0084               	movwf	4
  1052  051E  1383               	bcf	3,7	;select IRP bank0
  1053  051F  0800               	movf	0,w
  1054  0520  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0521  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0522  0099               	movwf	25	;volatile
  1057  0523                     l210:
  1058  0523  0008               	return
  1059  0524                     __end_of_usart_T_virt:
  1060                           
  1061                           	psect	text2
  1062  0532                     __ptext2:	
  1063 ;; *************** function _usart_T_nl *****************
  1064 ;; Defined at:
  1065 ;;		line 54 in file "USART.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1079 ;;      Params:         0       0       0       0       0
  1080 ;;      Locals:         0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0
  1082 ;;      Totals:         0       0       0       0       0
  1083 ;;Total ram usage:        0 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    2
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_main
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           
  1094                           ;psect for function _usart_T_nl
  1095  0532                     _usart_T_nl:
  1096  0532                     l1510:	
  1097                           ;incstack = 0
  1098                           ; Regs used in _usart_T_nl: [wreg]
  1099                           
  1100                           
  1101                           ;USART.c: 55:     if(1 == TXSTAbits.TRMT){
  1102  0532  1683               	bsf	3,5	;RP0=1, select bank1
  1103  0533  1303               	bcf	3,6	;RP1=0, select bank1
  1104  0534  1C98               	btfss	24,1	;volatile
  1105  0535  2D37               	goto	u1041
  1106  0536  2D38               	goto	u1040
  1107  0537                     u1041:
  1108  0537  2D3C               	goto	l214
  1109  0538                     u1040:
  1110  0538                     l1512:
  1111                           
  1112                           ;USART.c: 56:         TXREG = 13;
  1113  0538  300D               	movlw	13
  1114  0539  1283               	bcf	3,5	;RP0=0, select bank0
  1115  053A  1303               	bcf	3,6	;RP1=0, select bank0
  1116  053B  0099               	movwf	25	;volatile
  1117  053C                     l214:
  1118  053C  0008               	return
  1119  053D                     __end_of_usart_T_nl:
  1120                           
  1121                           	psect	text3
  1122  053D                     __ptext3:	
  1123 ;; *************** function _usart_T_erase *****************
  1124 ;; Defined at:
  1125 ;;		line 59 in file "USART.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0
  1142 ;;      Totals:         0       0       0       0       0
  1143 ;;Total ram usage:        0 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    2
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _usart_T_erase
  1155  053D                     _usart_T_erase:
  1156  053D                     l1514:	
  1157                           ;incstack = 0
  1158                           ; Regs used in _usart_T_erase: [wreg]
  1159                           
  1160                           
  1161                           ;USART.c: 60:     if(1 == TXSTAbits.TRMT){
  1162  053D  1683               	bsf	3,5	;RP0=1, select bank1
  1163  053E  1303               	bcf	3,6	;RP1=0, select bank1
  1164  053F  1C98               	btfss	24,1	;volatile
  1165  0540  2D42               	goto	u1051
  1166  0541  2D43               	goto	u1050
  1167  0542                     u1051:
  1168  0542  2D47               	goto	l218
  1169  0543                     u1050:
  1170  0543                     l1516:
  1171                           
  1172                           ;USART.c: 61:         TXREG = 12;
  1173  0543  300C               	movlw	12
  1174  0544  1283               	bcf	3,5	;RP0=0, select bank0
  1175  0545  1303               	bcf	3,6	;RP1=0, select bank0
  1176  0546  0099               	movwf	25	;volatile
  1177  0547                     l218:
  1178  0547  0008               	return
  1179  0548                     __end_of_usart_T_erase:
  1180                           
  1181                           	psect	text4
  1182  0433                     __ptext4:	
  1183 ;; *************** function _setup *****************
  1184 ;; Defined at:
  1185 ;;		line 82 in file "lab3.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, status,2, status,0, pclath, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1199 ;;      Params:         0       0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0
  1201 ;;      Temps:          1       0       0       0       0
  1202 ;;      Totals:         1       0       0       0       0
  1203 ;;Total ram usage:        1 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    3
  1206 ;; This function calls:
  1207 ;;		_usart_conf
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           
  1214                           ;psect for function _setup
  1215  0433                     _setup:
  1216  0433                     l1466:	
  1217                           ;incstack = 0
  1218                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1219                           
  1220                           
  1221                           ;lab3.c: 86:     ANSELH &= 0B11111100;
  1222  0433  30FC               	movlw	252
  1223  0434  00F6               	movwf	??_setup
  1224  0435  0876               	movf	??_setup,w
  1225  0436  1683               	bsf	3,5	;RP0=1, select bank3
  1226  0437  1703               	bsf	3,6	;RP1=1, select bank3
  1227  0438  0589               	andwf	9,f	;volatile
  1228  0439                     l1468:
  1229                           
  1230                           ;lab3.c: 87:     TRISD = 0;
  1231  0439  1683               	bsf	3,5	;RP0=1, select bank1
  1232  043A  1303               	bcf	3,6	;RP1=0, select bank1
  1233  043B  0188               	clrf	8	;volatile
  1234  043C                     l1470:
  1235                           
  1236                           ;lab3.c: 88:     TRISB &= 0B11110011;
  1237  043C  30F3               	movlw	243
  1238  043D  00F6               	movwf	??_setup
  1239  043E  0876               	movf	??_setup,w
  1240  043F  0586               	andwf	6,f	;volatile
  1241                           
  1242                           ;lab3.c: 89:     PORTB = 0;
  1243  0440  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0441  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0442  0186               	clrf	6	;volatile
  1246                           
  1247                           ;lab3.c: 90:     PORTD = 0;
  1248  0443  0188               	clrf	8	;volatile
  1249  0444                     l1472:
  1250                           
  1251                           ;lab3.c: 94:     ADCON0 = 0B01110000;
  1252  0444  3070               	movlw	112
  1253  0445  009F               	movwf	31	;volatile
  1254  0446                     l1474:
  1255                           
  1256                           ;lab3.c: 95:     ADCON1 = 0B00000000;
  1257  0446  1683               	bsf	3,5	;RP0=1, select bank1
  1258  0447  1303               	bcf	3,6	;RP1=0, select bank1
  1259  0448  019F               	clrf	31	;volatile
  1260  0449                     l1476:
  1261                           
  1262                           ;lab3.c: 96:     ADCON0bits.ADON = 1;
  1263  0449  1283               	bcf	3,5	;RP0=0, select bank0
  1264  044A  1303               	bcf	3,6	;RP1=0, select bank0
  1265  044B  141F               	bsf	31,0	;volatile
  1266  044C                     l1478:
  1267                           
  1268                           ;lab3.c: 100:     usart_conf();
  1269  044C  120A  118A  2504  120A  118A  	fcall	_usart_conf
  1270  0451                     l1480:
  1271                           
  1272                           ;lab3.c: 104:     PIE1 |= 0B01100000;
  1273  0451  3060               	movlw	96
  1274  0452  00F6               	movwf	??_setup
  1275  0453  0876               	movf	??_setup,w
  1276  0454  1683               	bsf	3,5	;RP0=1, select bank1
  1277  0455  1303               	bcf	3,6	;RP1=0, select bank1
  1278  0456  048C               	iorwf	12,f	;volatile
  1279  0457                     l1482:
  1280                           
  1281                           ;lab3.c: 105:     INTCON |= 0B11000000;
  1282  0457  30C0               	movlw	192
  1283  0458  00F6               	movwf	??_setup
  1284  0459  0876               	movf	??_setup,w
  1285  045A  048B               	iorwf	11,f	;volatile
  1286  045B                     l87:
  1287  045B  0008               	return
  1288  045C                     __end_of_setup:
  1289                           
  1290                           	psect	text5
  1291  0504                     __ptext5:	
  1292 ;; *************** function _usart_conf *****************
  1293 ;; Defined at:
  1294 ;;		line 16 in file "USART.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1308 ;;      Params:         0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0
  1311 ;;      Totals:         0       0       0       0       0
  1312 ;;Total ram usage:        0 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    2
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_setup
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           
  1323                           ;psect for function _usart_conf
  1324  0504                     _usart_conf:
  1325  0504                     l1362:	
  1326                           ;incstack = 0
  1327                           ; Regs used in _usart_conf: [wreg+status,2]
  1328                           
  1329                           
  1330                           ;USART.c: 18:     SPBRG = 25;
  1331  0504  3019               	movlw	25
  1332  0505  1683               	bsf	3,5	;RP0=1, select bank1
  1333  0506  1303               	bcf	3,6	;RP1=0, select bank1
  1334  0507  0099               	movwf	25	;volatile
  1335  0508                     l1364:
  1336                           
  1337                           ;USART.c: 19:     SPBRGH = 0;
  1338  0508  019A               	clrf	26	;volatile
  1339  0509                     l1366:
  1340                           
  1341                           ;USART.c: 20:     BAUDCTL = 0B00000000;
  1342  0509  1683               	bsf	3,5	;RP0=1, select bank3
  1343  050A  1703               	bsf	3,6	;RP1=1, select bank3
  1344  050B  0187               	clrf	7	;volatile
  1345                           
  1346                           ;USART.c: 29:     TXSTA = 0B00100100;
  1347  050C  3024               	movlw	36
  1348  050D  1683               	bsf	3,5	;RP0=1, select bank1
  1349  050E  1303               	bcf	3,6	;RP1=0, select bank1
  1350  050F  0098               	movwf	24	;volatile
  1351                           
  1352                           ;USART.c: 39:     RCSTA = 0B10010000;
  1353  0510  3090               	movlw	144
  1354  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0512  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0513  0098               	movwf	24	;volatile
  1357  0514                     l206:
  1358  0514  0008               	return
  1359  0515                     __end_of_usart_conf:
  1360                           
  1361                           	psect	text6
  1362  0254                     __ptext6:	
  1363 ;; *************** function _mostrar_datos *****************
  1364 ;; Defined at:
  1365 ;;		line 120 in file "lab3.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;		None
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;		None
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1379 ;;      Params:         0       0       0       0       0
  1380 ;;      Locals:         0       0       0       0       0
  1381 ;;      Temps:          0       7       0       0       0
  1382 ;;      Totals:         0       7       0       0       0
  1383 ;;Total ram usage:        7 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; Hardware stack levels required when called:    5
  1386 ;; This function calls:
  1387 ;;		_Lcd_Set_Cursor
  1388 ;;		_Lcd_Write_String
  1389 ;;		_sprintf
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _mostrar_datos
  1397  0254                     _mostrar_datos:
  1398  0254                     l1846:	
  1399                           ;incstack = 0
  1400                           ; Regs used in _mostrar_datos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1401                           
  1402                           
  1403                           ;lab3.c: 123:     Lcd_Set_Cursor(1, 1);
  1404  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1406  0256  01A3               	clrf	Lcd_Set_Cursor@b
  1407  0257  0AA3               	incf	Lcd_Set_Cursor@b,f
  1408  0258  3001               	movlw	1
  1409  0259  120A  118A  2483  120A  118A  	fcall	_Lcd_Set_Cursor
  1410  025E                     l1848:
  1411                           
  1412                           ;lab3.c: 125:     Lcd_Write_String(" POT1 POT2 CONT ");
  1413  025E  3030               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1414  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0261  00A2               	movwf	Lcd_Write_String@a
  1417  0262  3080               	movlw	128
  1418  0263  00A3               	movwf	Lcd_Write_String@a+1
  1419  0264  120A  118A  2330  120A  118A  	fcall	_Lcd_Write_String
  1420  0269                     l1850:
  1421                           
  1422                           ;lab3.c: 126:     Lcd_Set_Cursor(2, 1);
  1423  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1424  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1425  026B  01A3               	clrf	Lcd_Set_Cursor@b
  1426  026C  0AA3               	incf	Lcd_Set_Cursor@b,f
  1427  026D  3002               	movlw	2
  1428  026E  120A  118A  2483  120A  118A  	fcall	_Lcd_Set_Cursor
  1429                           
  1430                           ;lab3.c: 128:     Lcd_Write_String(&allData_t);
  1431  0273  304D               	movlw	(low (_allData_t| 0))& (0+255)
  1432  0274  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0275  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0276  00A2               	movwf	Lcd_Write_String@a
  1435  0277  3000               	movlw	0
  1436  0278  00A3               	movwf	Lcd_Write_String@a+1
  1437  0279  120A  118A  2330  120A  118A  	fcall	_Lcd_Write_String
  1438                           
  1439                           ;lab3.c: 129:     sprintf(&allData_t, " %3u  %3u  %3u  ", pot1, pot2, cont);
  1440  027E  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1441  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0280  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0281  00C0               	movwf	??_mostrar_datos
  1444  0282  0840               	movf	??_mostrar_datos,w
  1445  0283  00AD               	movwf	sprintf@f
  1446  0284  084C               	movf	_pot1,w
  1447  0285  00C1               	movwf	??_mostrar_datos+1
  1448  0286  01C2               	clrf	??_mostrar_datos+2
  1449  0287  0841               	movf	??_mostrar_datos+1,w
  1450  0288  00AE               	movwf	?_sprintf+1
  1451  0289  0842               	movf	??_mostrar_datos+2,w
  1452  028A  00AF               	movwf	?_sprintf+2
  1453  028B  084B               	movf	_pot2,w
  1454  028C  00C3               	movwf	??_mostrar_datos+3
  1455  028D  01C4               	clrf	??_mostrar_datos+4
  1456  028E  0843               	movf	??_mostrar_datos+3,w
  1457  028F  00B0               	movwf	?_sprintf+3
  1458  0290  0844               	movf	??_mostrar_datos+4,w
  1459  0291  00B1               	movwf	?_sprintf+4
  1460  0292  084A               	movf	_cont,w
  1461  0293  00C5               	movwf	??_mostrar_datos+5
  1462  0294  01C6               	clrf	??_mostrar_datos+6
  1463  0295  0845               	movf	??_mostrar_datos+5,w
  1464  0296  00B2               	movwf	?_sprintf+5
  1465  0297  0846               	movf	??_mostrar_datos+6,w
  1466  0298  00B3               	movwf	?_sprintf+6
  1467  0299  304D               	movlw	(low (_allData_t| 0))& (0+255)
  1468  029A  120A  118A  2020  120A  118A  	fcall	_sprintf
  1469  029F                     l94:
  1470  029F  0008               	return
  1471  02A0                     __end_of_mostrar_datos:
  1472                           
  1473                           	psect	text7
  1474  0020                     __ptext7:	
  1475 ;; *************** function _sprintf *****************
  1476 ;; Defined at:
  1477 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  sp              1    wreg     PTR unsigned char 
  1480 ;;		 -> allData_t(1), 
  1481 ;;  f               1   13[BANK0 ] PTR const unsigned char 
  1482 ;;		 -> STR_2(17), 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  sp              1   28[BANK0 ] PTR unsigned char 
  1485 ;;		 -> allData_t(1), 
  1486 ;;  tmpval          4    0        struct .
  1487 ;;  width           2   29[BANK0 ] int 
  1488 ;;  val             2   25[BANK0 ] unsigned int 
  1489 ;;  cp              2    0        PTR const unsigned char 
  1490 ;;  len             2    0        unsigned int 
  1491 ;;  c               1   31[BANK0 ] unsigned char 
  1492 ;;  prec            1   27[BANK0 ] char 
  1493 ;;  ap              1   24[BANK0 ] PTR void [1]
  1494 ;;		 -> ?_sprintf(2), 
  1495 ;;  flag            1   23[BANK0 ] unsigned char 
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  2   13[BANK0 ] int 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1505 ;;      Params:         0       7       0       0       0
  1506 ;;      Locals:         0       9       0       0       0
  1507 ;;      Temps:          0       3       0       0       0
  1508 ;;      Totals:         0      19       0       0       0
  1509 ;;Total ram usage:       19 bytes
  1510 ;; Hardware stack levels used:    1
  1511 ;; Hardware stack levels required when called:    3
  1512 ;; This function calls:
  1513 ;;		___lwdiv
  1514 ;;		___lwmod
  1515 ;;		___wmul
  1516 ;;		_isdigit
  1517 ;; This function is called by:
  1518 ;;		_mostrar_datos
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           
  1523                           ;psect for function _sprintf
  1524  0020                     _sprintf:
  1525                           
  1526                           ;incstack = 0
  1527                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1528                           ;sprintf@sp stored from wreg
  1529  0020  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0021  1303               	bcf	3,6	;RP1=0, select bank0
  1531  0022  00BC               	movwf	sprintf@sp
  1532  0023                     l1752:
  1533                           
  1534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1535  0023  302E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1536  0024  00B4               	movwf	??_sprintf
  1537  0025  0834               	movf	??_sprintf,w
  1538  0026  00B8               	movwf	sprintf@ap
  1539                           
  1540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1541  0027  2964               	goto	l1820
  1542  0028                     l1754:
  1543                           
  1544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1545  0028  3025               	movlw	37
  1546  0029  063F               	xorwf	sprintf@c,w
  1547  002A  1903               	btfsc	3,2
  1548  002B  282D               	goto	u1441
  1549  002C  282E               	goto	u1440
  1550  002D                     u1441:
  1551  002D  283A               	goto	l1760
  1552  002E                     u1440:
  1553  002E                     l1756:
  1554                           
  1555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1556  002E  083F               	movf	sprintf@c,w
  1557  002F  00B4               	movwf	??_sprintf
  1558  0030  083C               	movf	sprintf@sp,w
  1559  0031  0084               	movwf	4
  1560  0032  0834               	movf	??_sprintf,w
  1561  0033  1383               	bcf	3,7	;select IRP bank0
  1562  0034  0080               	movwf	0
  1563  0035                     l1758:
  1564  0035  3001               	movlw	1
  1565  0036  00B4               	movwf	??_sprintf
  1566  0037  0834               	movf	??_sprintf,w
  1567  0038  07BC               	addwf	sprintf@sp,f
  1568                           
  1569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1570  0039  2964               	goto	l1820
  1571  003A                     l1760:
  1572                           
  1573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1574  003A  01BD               	clrf	sprintf@width
  1575  003B  01BE               	clrf	sprintf@width+1
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1578  003C  01B7               	clrf	sprintf@flag
  1579  003D                     l1762:
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1582  003D  082D               	movf	sprintf@f,w
  1583  003E  0084               	movwf	4
  1584  003F  120A  118A  2185  120A  118A  	fcall	stringdir
  1585  0044  120A  118A  24DD  120A  118A  	fcall	_isdigit
  1586  0049  1C03               	btfss	3,0
  1587  004A  284C               	goto	u1451
  1588  004B  284D               	goto	u1450
  1589  004C                     u1451:
  1590  004C  2893               	goto	l1778
  1591  004D                     u1450:
  1592  004D                     l1764:
  1593                           
  1594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1595  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1596  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1597  004F  01BD               	clrf	sprintf@width
  1598  0050  01BE               	clrf	sprintf@width+1
  1599  0051                     l1766:
  1600                           
  1601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1602  0051  300A               	movlw	10
  1603  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1604  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0054  00A0               	movwf	___wmul@multiplier
  1606  0055  3000               	movlw	0
  1607  0056  00A1               	movwf	___wmul@multiplier+1
  1608  0057  083E               	movf	sprintf@width+1,w
  1609  0058  00A3               	movwf	___wmul@multiplicand+1
  1610  0059  083D               	movf	sprintf@width,w
  1611  005A  00A2               	movwf	___wmul@multiplicand
  1612  005B  120A  118A  245C  120A  118A  	fcall	___wmul
  1613  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1615  0062  0821               	movf	?___wmul+1,w
  1616  0063  00BE               	movwf	sprintf@width+1
  1617  0064  0820               	movf	?___wmul,w
  1618  0065  00BD               	movwf	sprintf@width
  1619  0066                     l1768:
  1620                           
  1621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1622  0066  082D               	movf	sprintf@f,w
  1623  0067  0084               	movwf	4
  1624  0068  120A  118A  2185  120A  118A  	fcall	stringdir
  1625  006D  3ED0               	addlw	208
  1626  006E  00B4               	movwf	??_sprintf
  1627  006F  30FF               	movlw	255
  1628  0070  1803               	skipnc
  1629  0071  3000               	movlw	0
  1630  0072  00B5               	movwf	??_sprintf+1
  1631  0073  0834               	movf	??_sprintf,w
  1632  0074  07BD               	addwf	sprintf@width,f
  1633  0075  1803               	skipnc
  1634  0076  0ABE               	incf	sprintf@width+1,f
  1635  0077  0835               	movf	??_sprintf+1,w
  1636  0078  07BE               	addwf	sprintf@width+1,f
  1637  0079                     l1770:
  1638  0079  3001               	movlw	1
  1639  007A  00B4               	movwf	??_sprintf
  1640  007B  0834               	movf	??_sprintf,w
  1641  007C  07AD               	addwf	sprintf@f,f
  1642  007D                     l1772:
  1643                           
  1644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1645  007D  082D               	movf	sprintf@f,w
  1646  007E  0084               	movwf	4
  1647  007F  120A  118A  2185  120A  118A  	fcall	stringdir
  1648  0084  120A  118A  24DD  120A  118A  	fcall	_isdigit
  1649  0089  1803               	btfsc	3,0
  1650  008A  288C               	goto	u1461
  1651  008B  288D               	goto	u1460
  1652  008C                     u1461:
  1653  008C  2851               	goto	l1766
  1654  008D                     u1460:
  1655  008D  2893               	goto	l1778
  1656  008E                     l1774:
  1657                           
  1658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1659  008E  30C0               	movlw	192
  1660  008F  00B4               	movwf	??_sprintf
  1661  0090  0834               	movf	??_sprintf,w
  1662  0091  04B7               	iorwf	sprintf@flag,f
  1663                           
  1664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 845:    break;
  1665  0092  28AF               	goto	l1780
  1666  0093                     l1778:
  1667  0093  3001               	movlw	1
  1668  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1669  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1670  0096  07AD               	addwf	sprintf@f,f
  1671  0097  30FF               	movlw	-1
  1672  0098  072D               	addwf	sprintf@f,w
  1673  0099  0084               	movwf	4
  1674  009A  120A  118A  2185  120A  118A  	fcall	stringdir
  1675  009F  00BF               	movwf	sprintf@c
  1676  00A0  00B4               	movwf	??_sprintf
  1677  00A1  01B5               	clrf	??_sprintf+1
  1678                           
  1679                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1680                           ; Switch size 1, requested type "simple"
  1681                           ; Number of cases is 1, Range of values is 0 to 0
  1682                           ; switch strategies available:
  1683                           ; Name         Instructions Cycles
  1684                           ; simple_byte            4     3 (average)
  1685                           ; direct_byte           11     8 (fixed)
  1686                           ; jumptable            260     6 (fixed)
  1687                           ;	Chosen strategy is simple_byte
  1688  00A2  0835               	movf	??_sprintf+1,w
  1689  00A3  3A00               	xorlw	0	; case 0
  1690  00A4  1903               	skipnz
  1691  00A5  28A7               	goto	l1950
  1692  00A6  2964               	goto	l1820
  1693  00A7                     l1950:
  1694                           
  1695                           ; Switch size 1, requested type "simple"
  1696                           ; Number of cases is 2, Range of values is 0 to 117
  1697                           ; switch strategies available:
  1698                           ; Name         Instructions Cycles
  1699                           ; simple_byte            7     4 (average)
  1700                           ; jumptable            260     6 (fixed)
  1701                           ;	Chosen strategy is simple_byte
  1702  00A7  0834               	movf	??_sprintf,w
  1703  00A8  3A00               	xorlw	0	; case 0
  1704  00A9  1903               	skipnz
  1705  00AA  2976               	goto	l1822
  1706  00AB  3A75               	xorlw	117	; case 117
  1707  00AC  1903               	skipnz
  1708  00AD  288E               	goto	l1774
  1709  00AE  2964               	goto	l1820
  1710  00AF                     l1780:
  1711                           
  1712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1713  00AF  0838               	movf	sprintf@ap,w
  1714  00B0  0084               	movwf	4
  1715  00B1  1383               	bcf	3,7	;select IRP bank0
  1716  00B2  0800               	movf	0,w
  1717  00B3  00B9               	movwf	sprintf@val
  1718  00B4  0A84               	incf	4,f
  1719  00B5  0800               	movf	0,w
  1720  00B6  00BA               	movwf	sprintf@val+1
  1721  00B7                     l1782:
  1722  00B7  3002               	movlw	2
  1723  00B8  00B4               	movwf	??_sprintf
  1724  00B9  0834               	movf	??_sprintf,w
  1725  00BA  07B8               	addwf	sprintf@ap,f
  1726  00BB                     l1784:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1729  00BB  01BF               	clrf	sprintf@c
  1730  00BC  0ABF               	incf	sprintf@c,f
  1731  00BD                     l1790:
  1732                           
  1733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1734  00BD  083F               	movf	sprintf@c,w
  1735  00BE  00B4               	movwf	??_sprintf
  1736  00BF  0734               	addwf	??_sprintf,w
  1737  00C0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1738  00C1  0084               	movwf	4
  1739  00C2  120A  118A  2185  120A  118A  	fcall	stringdir
  1740  00C7  00B5               	movwf	??_sprintf+1
  1741  00C8  120A  118A  2185  120A  118A  	fcall	stringdir
  1742  00CD  00B6               	movwf	??_sprintf+2
  1743  00CE  0836               	movf	??_sprintf+2,w
  1744  00CF  023A               	subwf	sprintf@val+1,w
  1745  00D0  1D03               	skipz
  1746  00D1  28D4               	goto	u1475
  1747  00D2  0835               	movf	??_sprintf+1,w
  1748  00D3  0239               	subwf	sprintf@val,w
  1749  00D4                     u1475:
  1750  00D4  1803               	skipnc
  1751  00D5  28D7               	goto	u1471
  1752  00D6  28D8               	goto	u1470
  1753  00D7                     u1471:
  1754  00D7  28D9               	goto	l1794
  1755  00D8                     u1470:
  1756  00D8  28E3               	goto	l1796
  1757  00D9                     l1794:
  1758  00D9  3001               	movlw	1
  1759  00DA  00B4               	movwf	??_sprintf
  1760  00DB  0834               	movf	??_sprintf,w
  1761  00DC  07BF               	addwf	sprintf@c,f
  1762  00DD  3005               	movlw	5
  1763  00DE  063F               	xorwf	sprintf@c,w
  1764  00DF  1D03               	btfss	3,2
  1765  00E0  28E2               	goto	u1481
  1766  00E1  28E3               	goto	u1480
  1767  00E2                     u1481:
  1768  00E2  28BD               	goto	l1790
  1769  00E3                     u1480:
  1770  00E3                     l1796:
  1771                           
  1772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1773  00E3  083E               	movf	sprintf@width+1,w
  1774  00E4  3A80               	xorlw	128
  1775  00E5  3C80               	sublw	128
  1776  00E6  1D03               	skipz
  1777  00E7  28EA               	goto	u1495
  1778  00E8  083D               	movf	sprintf@width,w
  1779  00E9  023F               	subwf	sprintf@c,w
  1780  00EA                     u1495:
  1781  00EA  1803               	skipnc
  1782  00EB  28ED               	goto	u1491
  1783  00EC  28EE               	goto	u1490
  1784  00ED                     u1491:
  1785  00ED  28FA               	goto	l1800
  1786  00EE                     u1490:
  1787  00EE                     l1798:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1790  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1791  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1792  00F0  083F               	movf	sprintf@c,w
  1793  00F1  00B4               	movwf	??_sprintf
  1794  00F2  01B5               	clrf	??_sprintf+1
  1795  00F3  0834               	movf	??_sprintf,w
  1796  00F4  02BD               	subwf	sprintf@width,f
  1797  00F5  0835               	movf	??_sprintf+1,w
  1798  00F6  1C03               	skipc
  1799  00F7  03BE               	decf	sprintf@width+1,f
  1800  00F8  02BE               	subwf	sprintf@width+1,f
  1801  00F9  28FE               	goto	l1802
  1802  00FA                     l1800:
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1805  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1806  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1807  00FC  01BD               	clrf	sprintf@width
  1808  00FD  01BE               	clrf	sprintf@width+1
  1809  00FE                     l1802:
  1810                           
  1811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1812  00FE  083D               	movf	sprintf@width,w
  1813  00FF  043E               	iorwf	sprintf@width+1,w
  1814  0100  1903               	btfsc	3,2
  1815  0101  2903               	goto	u1501
  1816  0102  2904               	goto	u1500
  1817  0103                     u1501:
  1818  0103  291B               	goto	l1810
  1819  0104                     u1500:
  1820  0104                     l1804:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1823  0104  3020               	movlw	32
  1824  0105  00B4               	movwf	??_sprintf
  1825  0106  083C               	movf	sprintf@sp,w
  1826  0107  0084               	movwf	4
  1827  0108  0834               	movf	??_sprintf,w
  1828  0109  1383               	bcf	3,7	;select IRP bank0
  1829  010A  0080               	movwf	0
  1830  010B                     l1806:
  1831  010B  3001               	movlw	1
  1832  010C  00B4               	movwf	??_sprintf
  1833  010D  0834               	movf	??_sprintf,w
  1834  010E  07BC               	addwf	sprintf@sp,f
  1835  010F                     l1808:
  1836  010F  30FF               	movlw	255
  1837  0110  07BD               	addwf	sprintf@width,f
  1838  0111  1803               	skipnc
  1839  0112  0ABE               	incf	sprintf@width+1,f
  1840  0113  30FF               	movlw	255
  1841  0114  07BE               	addwf	sprintf@width+1,f
  1842  0115  083D               	movf	sprintf@width,w
  1843  0116  043E               	iorwf	sprintf@width+1,w
  1844  0117  1D03               	btfss	3,2
  1845  0118  291A               	goto	u1511
  1846  0119  291B               	goto	u1510
  1847  011A                     u1511:
  1848  011A  2904               	goto	l1804
  1849  011B                     u1510:
  1850  011B                     l1810:
  1851                           
  1852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1853  011B  083F               	movf	sprintf@c,w
  1854  011C  00B4               	movwf	??_sprintf
  1855  011D  0834               	movf	??_sprintf,w
  1856  011E  00BB               	movwf	sprintf@prec
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1859  011F  295B               	goto	l1818
  1860  0120                     l1812:
  1861                           
  1862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1863  0120  300A               	movlw	10
  1864  0121  00A7               	movwf	___lwmod@divisor
  1865  0122  3000               	movlw	0
  1866  0123  00A8               	movwf	___lwmod@divisor+1
  1867  0124  083B               	movf	sprintf@prec,w
  1868  0125  00B4               	movwf	??_sprintf
  1869  0126  0734               	addwf	??_sprintf,w
  1870  0127  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1871  0128  0084               	movwf	4
  1872  0129  120A  118A  2185  120A  118A  	fcall	stringdir
  1873  012E  00A0               	movwf	___lwdiv@divisor
  1874  012F  120A  118A  2185  120A  118A  	fcall	stringdir
  1875  0134  00A1               	movwf	___lwdiv@divisor+1
  1876  0135  083A               	movf	sprintf@val+1,w
  1877  0136  00A3               	movwf	___lwdiv@dividend+1
  1878  0137  0839               	movf	sprintf@val,w
  1879  0138  00A2               	movwf	___lwdiv@dividend
  1880  0139  120A  118A  22EA  120A  118A  	fcall	___lwdiv
  1881  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1882  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0140  0821               	movf	?___lwdiv+1,w
  1884  0141  00AA               	movwf	___lwmod@dividend+1
  1885  0142  0820               	movf	?___lwdiv,w
  1886  0143  00A9               	movwf	___lwmod@dividend
  1887  0144  120A  118A  23F7  120A  118A  	fcall	___lwmod
  1888  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1889  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1890  014B  0827               	movf	?___lwmod,w
  1891  014C  3E30               	addlw	48
  1892  014D  00B5               	movwf	??_sprintf+1
  1893  014E  0835               	movf	??_sprintf+1,w
  1894  014F  00BF               	movwf	sprintf@c
  1895  0150                     l1814:
  1896                           
  1897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1898  0150  083F               	movf	sprintf@c,w
  1899  0151  00B4               	movwf	??_sprintf
  1900  0152  083C               	movf	sprintf@sp,w
  1901  0153  0084               	movwf	4
  1902  0154  0834               	movf	??_sprintf,w
  1903  0155  1383               	bcf	3,7	;select IRP bank0
  1904  0156  0080               	movwf	0
  1905  0157                     l1816:
  1906  0157  3001               	movlw	1
  1907  0158  00B4               	movwf	??_sprintf
  1908  0159  0834               	movf	??_sprintf,w
  1909  015A  07BC               	addwf	sprintf@sp,f
  1910  015B                     l1818:
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1913  015B  30FF               	movlw	255
  1914  015C  00B4               	movwf	??_sprintf
  1915  015D  0834               	movf	??_sprintf,w
  1916  015E  07BB               	addwf	sprintf@prec,f
  1917  015F  0A3B               	incf	sprintf@prec,w
  1918  0160  1D03               	btfss	3,2
  1919  0161  2963               	goto	u1521
  1920  0162  2964               	goto	u1520
  1921  0163                     u1521:
  1922  0163  2920               	goto	l1812
  1923  0164                     u1520:
  1924  0164                     l1820:
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1927  0164  3001               	movlw	1
  1928  0165  07AD               	addwf	sprintf@f,f
  1929  0166  30FF               	movlw	-1
  1930  0167  072D               	addwf	sprintf@f,w
  1931  0168  0084               	movwf	4
  1932  0169  120A  118A  2185  120A  118A  	fcall	stringdir
  1933  016E  00B4               	movwf	??_sprintf
  1934  016F  0834               	movf	??_sprintf,w
  1935  0170  00BF               	movwf	sprintf@c
  1936  0171  083F               	movf	sprintf@c,w
  1937  0172  1D03               	btfss	3,2
  1938  0173  2975               	goto	u1531
  1939  0174  2976               	goto	u1530
  1940  0175                     u1531:
  1941  0175  2828               	goto	l1754
  1942  0176                     u1530:
  1943  0176                     l1822:
  1944                           
  1945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1946  0176  083C               	movf	sprintf@sp,w
  1947  0177  0084               	movwf	4
  1948  0178  1383               	bcf	3,7	;select IRP bank0
  1949  0179  0180               	clrf	0
  1950  017A                     l339:
  1951  017A  0008               	return
  1952  017B                     __end_of_sprintf:
  1953                           
  1954                           	psect	text8
  1955  04DD                     __ptext8:	
  1956 ;; *************** function _isdigit *****************
  1957 ;; Defined at:
  1958 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  c               1    wreg     unsigned char 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  c               1    1[BANK0 ] unsigned char 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;		None               void
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1972 ;;      Params:         0       0       0       0       0
  1973 ;;      Locals:         0       2       0       0       0
  1974 ;;      Temps:          0       0       0       0       0
  1975 ;;      Totals:         0       2       0       0       0
  1976 ;;Total ram usage:        2 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    2
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_sprintf
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           
  1987                           ;psect for function _isdigit
  1988  04DD                     _isdigit:
  1989                           
  1990                           ;incstack = 0
  1991                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1992                           ;isdigit@c stored from wreg
  1993  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  1994  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  1995  04DF  00A1               	movwf	isdigit@c
  1996  04E0                     l1684:
  1997  04E0  01A0               	clrf	_isdigit$801
  1998  04E1                     l1686:
  1999  04E1  303A               	movlw	58
  2000  04E2  0221               	subwf	isdigit@c,w
  2001  04E3  1803               	skipnc
  2002  04E4  2CE6               	goto	u1271
  2003  04E5  2CE7               	goto	u1270
  2004  04E6                     u1271:
  2005  04E6  2CEF               	goto	l1692
  2006  04E7                     u1270:
  2007  04E7                     l1688:
  2008  04E7  3030               	movlw	48
  2009  04E8  0221               	subwf	isdigit@c,w
  2010  04E9  1C03               	skipc
  2011  04EA  2CEC               	goto	u1281
  2012  04EB  2CED               	goto	u1280
  2013  04EC                     u1281:
  2014  04EC  2CEF               	goto	l1692
  2015  04ED                     u1280:
  2016  04ED                     l1690:
  2017  04ED  01A0               	clrf	_isdigit$801
  2018  04EE  0AA0               	incf	_isdigit$801,f
  2019  04EF                     l1692:
  2020  04EF  0C20               	rrf	_isdigit$801,w
  2021  04F0                     l796:
  2022  04F0  0008               	return
  2023  04F1                     __end_of_isdigit:
  2024                           
  2025                           	psect	text9
  2026  045C                     __ptext9:	
  2027 ;; *************** function ___wmul *****************
  2028 ;; Defined at:
  2029 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2032 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  product         2    4[BANK0 ] unsigned int 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  2    0[BANK0 ] unsigned int 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2044 ;;      Params:         0       4       0       0       0
  2045 ;;      Locals:         0       2       0       0       0
  2046 ;;      Temps:          0       0       0       0       0
  2047 ;;      Totals:         0       6       0       0       0
  2048 ;;Total ram usage:        6 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    2
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_sprintf
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           
  2059                           ;psect for function ___wmul
  2060  045C                     ___wmul:
  2061  045C                     l1696:	
  2062                           ;incstack = 0
  2063                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2064                           
  2065  045C  1283               	bcf	3,5	;RP0=0, select bank0
  2066  045D  1303               	bcf	3,6	;RP1=0, select bank0
  2067  045E  01A4               	clrf	___wmul@product
  2068  045F  01A5               	clrf	___wmul@product+1
  2069  0460                     l1698:
  2070  0460  1C20               	btfss	___wmul@multiplier,0
  2071  0461  2C63               	goto	u1291
  2072  0462  2C64               	goto	u1290
  2073  0463                     u1291:
  2074  0463  2C6A               	goto	l343
  2075  0464                     u1290:
  2076  0464                     l1700:
  2077  0464  0822               	movf	___wmul@multiplicand,w
  2078  0465  07A4               	addwf	___wmul@product,f
  2079  0466  1803               	skipnc
  2080  0467  0AA5               	incf	___wmul@product+1,f
  2081  0468  0823               	movf	___wmul@multiplicand+1,w
  2082  0469  07A5               	addwf	___wmul@product+1,f
  2083  046A                     l343:
  2084  046A  3001               	movlw	1
  2085  046B                     u1305:
  2086  046B  1003               	clrc
  2087  046C  0DA2               	rlf	___wmul@multiplicand,f
  2088  046D  0DA3               	rlf	___wmul@multiplicand+1,f
  2089  046E  3EFF               	addlw	-1
  2090  046F  1D03               	skipz
  2091  0470  2C6B               	goto	u1305
  2092  0471                     l1702:
  2093  0471  3001               	movlw	1
  2094  0472                     u1315:
  2095  0472  1003               	clrc
  2096  0473  0CA1               	rrf	___wmul@multiplier+1,f
  2097  0474  0CA0               	rrf	___wmul@multiplier,f
  2098  0475  3EFF               	addlw	-1
  2099  0476  1D03               	skipz
  2100  0477  2C72               	goto	u1315
  2101  0478                     l1704:
  2102  0478  0820               	movf	___wmul@multiplier,w
  2103  0479  0421               	iorwf	___wmul@multiplier+1,w
  2104  047A  1D03               	btfss	3,2
  2105  047B  2C7D               	goto	u1321
  2106  047C  2C7E               	goto	u1320
  2107  047D                     u1321:
  2108  047D  2C60               	goto	l1698
  2109  047E                     u1320:
  2110  047E                     l1706:
  2111  047E  0825               	movf	___wmul@product+1,w
  2112  047F  00A1               	movwf	?___wmul+1
  2113  0480  0824               	movf	___wmul@product,w
  2114  0481  00A0               	movwf	?___wmul
  2115  0482                     l345:
  2116  0482  0008               	return
  2117  0483                     __end_of___wmul:
  2118                           
  2119                           	psect	text10
  2120  03F7                     __ptext10:	
  2121 ;; *************** function ___lwmod *****************
  2122 ;; Defined at:
  2123 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  divisor         2    7[BANK0 ] unsigned int 
  2126 ;;  dividend        2    9[BANK0 ] unsigned int 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  counter         1   12[BANK0 ] unsigned char 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  2    7[BANK0 ] unsigned int 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2138 ;;      Params:         0       4       0       0       0
  2139 ;;      Locals:         0       1       0       0       0
  2140 ;;      Temps:          0       1       0       0       0
  2141 ;;      Totals:         0       6       0       0       0
  2142 ;;Total ram usage:        6 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    2
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_sprintf
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           
  2153                           ;psect for function ___lwmod
  2154  03F7                     ___lwmod:
  2155  03F7                     l1710:	
  2156                           ;incstack = 0
  2157                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2158                           
  2159  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2160  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2161  03F9  0827               	movf	___lwmod@divisor,w
  2162  03FA  0428               	iorwf	___lwmod@divisor+1,w
  2163  03FB  1903               	btfsc	3,2
  2164  03FC  2BFE               	goto	u1331
  2165  03FD  2BFF               	goto	u1330
  2166  03FE                     u1331:
  2167  03FE  2C2E               	goto	l1728
  2168  03FF                     u1330:
  2169  03FF                     l1712:
  2170  03FF  01AC               	clrf	___lwmod@counter
  2171  0400  0AAC               	incf	___lwmod@counter,f
  2172  0401  2C0D               	goto	l1718
  2173  0402                     l1714:
  2174  0402  3001               	movlw	1
  2175  0403                     u1345:
  2176  0403  1003               	clrc
  2177  0404  0DA7               	rlf	___lwmod@divisor,f
  2178  0405  0DA8               	rlf	___lwmod@divisor+1,f
  2179  0406  3EFF               	addlw	-1
  2180  0407  1D03               	skipz
  2181  0408  2C03               	goto	u1345
  2182  0409                     l1716:
  2183  0409  3001               	movlw	1
  2184  040A  00AB               	movwf	??___lwmod
  2185  040B  082B               	movf	??___lwmod,w
  2186  040C  07AC               	addwf	___lwmod@counter,f
  2187  040D                     l1718:
  2188  040D  1FA8               	btfss	___lwmod@divisor+1,7
  2189  040E  2C10               	goto	u1351
  2190  040F  2C11               	goto	u1350
  2191  0410                     u1351:
  2192  0410  2C02               	goto	l1714
  2193  0411                     u1350:
  2194  0411                     l1720:
  2195  0411  0828               	movf	___lwmod@divisor+1,w
  2196  0412  022A               	subwf	___lwmod@dividend+1,w
  2197  0413  1D03               	skipz
  2198  0414  2C17               	goto	u1365
  2199  0415  0827               	movf	___lwmod@divisor,w
  2200  0416  0229               	subwf	___lwmod@dividend,w
  2201  0417                     u1365:
  2202  0417  1C03               	skipc
  2203  0418  2C1A               	goto	u1361
  2204  0419  2C1B               	goto	u1360
  2205  041A                     u1361:
  2206  041A  2C21               	goto	l1724
  2207  041B                     u1360:
  2208  041B                     l1722:
  2209  041B  0827               	movf	___lwmod@divisor,w
  2210  041C  02A9               	subwf	___lwmod@dividend,f
  2211  041D  0828               	movf	___lwmod@divisor+1,w
  2212  041E  1C03               	skipc
  2213  041F  03AA               	decf	___lwmod@dividend+1,f
  2214  0420  02AA               	subwf	___lwmod@dividend+1,f
  2215  0421                     l1724:
  2216  0421  3001               	movlw	1
  2217  0422                     u1375:
  2218  0422  1003               	clrc
  2219  0423  0CA8               	rrf	___lwmod@divisor+1,f
  2220  0424  0CA7               	rrf	___lwmod@divisor,f
  2221  0425  3EFF               	addlw	-1
  2222  0426  1D03               	skipz
  2223  0427  2C22               	goto	u1375
  2224  0428                     l1726:
  2225  0428  3001               	movlw	1
  2226  0429  02AC               	subwf	___lwmod@counter,f
  2227  042A  1D03               	btfss	3,2
  2228  042B  2C2D               	goto	u1381
  2229  042C  2C2E               	goto	u1380
  2230  042D                     u1381:
  2231  042D  2C11               	goto	l1720
  2232  042E                     u1380:
  2233  042E                     l1728:
  2234  042E  082A               	movf	___lwmod@dividend+1,w
  2235  042F  00A8               	movwf	?___lwmod+1
  2236  0430  0829               	movf	___lwmod@dividend,w
  2237  0431  00A7               	movwf	?___lwmod
  2238  0432                     l625:
  2239  0432  0008               	return
  2240  0433                     __end_of___lwmod:
  2241                           
  2242                           	psect	text11
  2243  02EA                     __ptext11:	
  2244 ;; *************** function ___lwdiv *****************
  2245 ;; Defined at:
  2246 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  divisor         2    0[BANK0 ] unsigned int 
  2249 ;;  dividend        2    2[BANK0 ] unsigned int 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  quotient        2    4[BANK0 ] unsigned int 
  2252 ;;  counter         1    6[BANK0 ] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  2    0[BANK0 ] unsigned int 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2262 ;;      Params:         0       4       0       0       0
  2263 ;;      Locals:         0       3       0       0       0
  2264 ;;      Temps:          1       0       0       0       0
  2265 ;;      Totals:         1       7       0       0       0
  2266 ;;Total ram usage:        8 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    2
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_sprintf
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           
  2277                           ;psect for function ___lwdiv
  2278  02EA                     ___lwdiv:
  2279  02EA                     l1314:	
  2280                           ;incstack = 0
  2281                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2282                           
  2283  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2284  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2285  02EC  01A4               	clrf	___lwdiv@quotient
  2286  02ED  01A5               	clrf	___lwdiv@quotient+1
  2287  02EE                     l1316:
  2288  02EE  0820               	movf	___lwdiv@divisor,w
  2289  02EF  0421               	iorwf	___lwdiv@divisor+1,w
  2290  02F0  1903               	btfsc	3,2
  2291  02F1  2AF3               	goto	u741
  2292  02F2  2AF4               	goto	u740
  2293  02F3                     u741:
  2294  02F3  2B2B               	goto	l1336
  2295  02F4                     u740:
  2296  02F4                     l1318:
  2297  02F4  01A6               	clrf	___lwdiv@counter
  2298  02F5  0AA6               	incf	___lwdiv@counter,f
  2299  02F6  2B02               	goto	l1324
  2300  02F7                     l1320:
  2301  02F7  3001               	movlw	1
  2302  02F8                     u755:
  2303  02F8  1003               	clrc
  2304  02F9  0DA0               	rlf	___lwdiv@divisor,f
  2305  02FA  0DA1               	rlf	___lwdiv@divisor+1,f
  2306  02FB  3EFF               	addlw	-1
  2307  02FC  1D03               	skipz
  2308  02FD  2AF8               	goto	u755
  2309  02FE                     l1322:
  2310  02FE  3001               	movlw	1
  2311  02FF  00F6               	movwf	??___lwdiv
  2312  0300  0876               	movf	??___lwdiv,w
  2313  0301  07A6               	addwf	___lwdiv@counter,f
  2314  0302                     l1324:
  2315  0302  1FA1               	btfss	___lwdiv@divisor+1,7
  2316  0303  2B05               	goto	u761
  2317  0304  2B06               	goto	u760
  2318  0305                     u761:
  2319  0305  2AF7               	goto	l1320
  2320  0306                     u760:
  2321  0306                     l1326:
  2322  0306  3001               	movlw	1
  2323  0307                     u775:
  2324  0307  1003               	clrc
  2325  0308  0DA4               	rlf	___lwdiv@quotient,f
  2326  0309  0DA5               	rlf	___lwdiv@quotient+1,f
  2327  030A  3EFF               	addlw	-1
  2328  030B  1D03               	skipz
  2329  030C  2B07               	goto	u775
  2330  030D  0821               	movf	___lwdiv@divisor+1,w
  2331  030E  0223               	subwf	___lwdiv@dividend+1,w
  2332  030F  1D03               	skipz
  2333  0310  2B13               	goto	u785
  2334  0311  0820               	movf	___lwdiv@divisor,w
  2335  0312  0222               	subwf	___lwdiv@dividend,w
  2336  0313                     u785:
  2337  0313  1C03               	skipc
  2338  0314  2B16               	goto	u781
  2339  0315  2B17               	goto	u780
  2340  0316                     u781:
  2341  0316  2B1E               	goto	l1332
  2342  0317                     u780:
  2343  0317                     l1328:
  2344  0317  0820               	movf	___lwdiv@divisor,w
  2345  0318  02A2               	subwf	___lwdiv@dividend,f
  2346  0319  0821               	movf	___lwdiv@divisor+1,w
  2347  031A  1C03               	skipc
  2348  031B  03A3               	decf	___lwdiv@dividend+1,f
  2349  031C  02A3               	subwf	___lwdiv@dividend+1,f
  2350  031D                     l1330:
  2351  031D  1424               	bsf	___lwdiv@quotient,0
  2352  031E                     l1332:
  2353  031E  3001               	movlw	1
  2354  031F                     u795:
  2355  031F  1003               	clrc
  2356  0320  0CA1               	rrf	___lwdiv@divisor+1,f
  2357  0321  0CA0               	rrf	___lwdiv@divisor,f
  2358  0322  3EFF               	addlw	-1
  2359  0323  1D03               	skipz
  2360  0324  2B1F               	goto	u795
  2361  0325                     l1334:
  2362  0325  3001               	movlw	1
  2363  0326  02A6               	subwf	___lwdiv@counter,f
  2364  0327  1D03               	btfss	3,2
  2365  0328  2B2A               	goto	u801
  2366  0329  2B2B               	goto	u800
  2367  032A                     u801:
  2368  032A  2B06               	goto	l1326
  2369  032B                     u800:
  2370  032B                     l1336:
  2371  032B  0825               	movf	___lwdiv@quotient+1,w
  2372  032C  00A1               	movwf	?___lwdiv+1
  2373  032D  0824               	movf	___lwdiv@quotient,w
  2374  032E  00A0               	movwf	?___lwdiv
  2375  032F                     l615:
  2376  032F  0008               	return
  2377  0330                     __end_of___lwdiv:
  2378                           
  2379                           	psect	text12
  2380  0330                     __ptext12:	
  2381 ;; *************** function _Lcd_Write_String *****************
  2382 ;; Defined at:
  2383 ;;		line 132 in file "lcd.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  a               2    2[BANK0 ] PTR unsigned char 
  2386 ;;		 -> STR_7(20), STR_6(12), STR_5(13), STR_4(10), 
  2387 ;;		 -> STR_3(16), allData_t(1), STR_1(17), 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  i               2    7[BANK0 ] int 
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2399 ;;      Params:         0       2       0       0       0
  2400 ;;      Locals:         0       2       0       0       0
  2401 ;;      Temps:          0       3       0       0       0
  2402 ;;      Totals:         0       7       0       0       0
  2403 ;;Total ram usage:        7 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; Hardware stack levels required when called:    4
  2406 ;; This function calls:
  2407 ;;		_Lcd_Write_Char
  2408 ;; This function is called by:
  2409 ;;		_mostrar_datos
  2410 ;;		_Lcd_Credits
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           
  2415                           ;psect for function _Lcd_Write_String
  2416  0330                     _Lcd_Write_String:
  2417  0330                     l1744:	
  2418                           ;incstack = 0
  2419                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2420                           
  2421                           
  2422                           ;lcd.c: 133:     int i;;lcd.c: 133:     int i;;lcd.c: 134:     for (i = 0; a[i] != '\0';
      +                           i++);lcd.c: 134:     for (i = 0; a[i] != '\0'; i++)
  2423  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2424  0331  1303               	bcf	3,6	;RP1=0, select bank0
  2425  0332  01A7               	clrf	Lcd_Write_String@i
  2426  0333  01A8               	clrf	Lcd_Write_String@i+1
  2427  0334  2B59               	goto	l1750
  2428  0335                     l1746:
  2429                           
  2430                           ;lcd.c: 135:         Lcd_Write_Char(a[i]);;lcd.c: 135:         Lcd_Write_Char(a[i]);
  2431  0335  0827               	movf	Lcd_Write_String@i,w
  2432  0336  0722               	addwf	Lcd_Write_String@a,w
  2433  0337  00A5               	movwf	??_Lcd_Write_String+1
  2434  0338  0823               	movf	Lcd_Write_String@a+1,w
  2435  0339  00A4               	movwf	??_Lcd_Write_String
  2436  033A  1803               	skipnc
  2437  033B  0AA4               	incf	??_Lcd_Write_String,f
  2438  033C  1FA7               	btfss	Lcd_Write_String@i,7
  2439  033D  2B3F               	goto	u1410
  2440  033E  03A4               	decf	??_Lcd_Write_String,f
  2441  033F                     u1410:
  2442  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0341  0824               	movf	??_Lcd_Write_String,w
  2445  0342  00A6               	movwf	??_Lcd_Write_String+2
  2446  0343  0826               	movf	??_Lcd_Write_String+2,w
  2447  0344  00FF               	movwf	btemp+1
  2448  0345  0825               	movf	??_Lcd_Write_String+1,w
  2449  0346  0084               	movwf	4
  2450  0347  120A  118A  217B  120A  118A  	fcall	stringtab
  2451  034C  120A  118A  24C5  120A  118A  	fcall	_Lcd_Write_Char
  2452  0351                     l1748:
  2453  0351  3001               	movlw	1
  2454  0352  1283               	bcf	3,5	;RP0=0, select bank0
  2455  0353  1303               	bcf	3,6	;RP1=0, select bank0
  2456  0354  07A7               	addwf	Lcd_Write_String@i,f
  2457  0355  1803               	skipnc
  2458  0356  0AA8               	incf	Lcd_Write_String@i+1,f
  2459  0357  3000               	movlw	0
  2460  0358  07A8               	addwf	Lcd_Write_String@i+1,f
  2461  0359                     l1750:
  2462  0359  0827               	movf	Lcd_Write_String@i,w
  2463  035A  0722               	addwf	Lcd_Write_String@a,w
  2464  035B  00A5               	movwf	??_Lcd_Write_String+1
  2465  035C  0823               	movf	Lcd_Write_String@a+1,w
  2466  035D  00A4               	movwf	??_Lcd_Write_String
  2467  035E  1803               	skipnc
  2468  035F  0AA4               	incf	??_Lcd_Write_String,f
  2469  0360  1FA7               	btfss	Lcd_Write_String@i,7
  2470  0361  2B63               	goto	u1420
  2471  0362  03A4               	decf	??_Lcd_Write_String,f
  2472  0363                     u1420:
  2473  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2474  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2475  0365  0824               	movf	??_Lcd_Write_String,w
  2476  0366  00A6               	movwf	??_Lcd_Write_String+2
  2477  0367  0826               	movf	??_Lcd_Write_String+2,w
  2478  0368  00FF               	movwf	btemp+1
  2479  0369  0825               	movf	??_Lcd_Write_String+1,w
  2480  036A  0084               	movwf	4
  2481  036B  120A  118A  217B  120A  118A  	fcall	stringtab
  2482  0370  3A00               	xorlw	0
  2483  0371  1D03               	skipz
  2484  0372  2B74               	goto	u1431
  2485  0373  2B75               	goto	u1430
  2486  0374                     u1431:
  2487  0374  2B35               	goto	l1746
  2488  0375                     u1430:
  2489  0375                     l172:
  2490  0375  0008               	return
  2491  0376                     __end_of_Lcd_Write_String:
  2492                           
  2493                           	psect	text13
  2494  04C5                     __ptext13:	
  2495 ;; *************** function _Lcd_Write_Char *****************
  2496 ;; Defined at:
  2497 ;;		line 111 in file "lcd.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  a               1    wreg     unsigned char 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  a               1    1[BANK0 ] unsigned char 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, status,2, status,0, pclath, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2511 ;;      Params:         0       0       0       0       0
  2512 ;;      Locals:         0       1       0       0       0
  2513 ;;      Temps:          0       1       0       0       0
  2514 ;;      Totals:         0       2       0       0       0
  2515 ;;Total ram usage:        2 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    3
  2518 ;; This function calls:
  2519 ;;		_Lcd_Port
  2520 ;; This function is called by:
  2521 ;;		_Lcd_Write_String
  2522 ;;		_Lcd_Credits
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _Lcd_Write_Char
  2528  04C5                     _Lcd_Write_Char:
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2532                           ;Lcd_Write_Char@a stored from wreg
  2533  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2534  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2535  04C7  00A1               	movwf	Lcd_Write_Char@a
  2536  04C8                     l1674:
  2537                           
  2538                           ;lcd.c: 125:     RB2 = 1;;lcd.c: 125:     RB2 = 1;
  2539  04C8  1506               	bsf	6,2	;volatile
  2540  04C9                     l1676:
  2541                           
  2542                           ;lcd.c: 126:     Lcd_Port(a);;lcd.c: 126:     Lcd_Port(a);
  2543  04C9  0821               	movf	Lcd_Write_Char@a,w
  2544  04CA  120A  118A  23B9  120A  118A  	fcall	_Lcd_Port
  2545  04CF                     l1678:
  2546                           
  2547                           ;lcd.c: 127:     RB3 = 1;;lcd.c: 127:     RB3 = 1;
  2548  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2549  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2550  04D1  1586               	bsf	6,3	;volatile
  2551  04D2                     l1680:
  2552                           
  2553                           ;lcd.c: 128:     _delay((unsigned long)((40)*(8000000/4000000.0)));;lcd.c: 128:     _del
      +                          ay((unsigned long)((40)*(8000000/4000000.0)));
  2554  04D2  3019               	movlw	25
  2555  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2556  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  2557  04D5  00A0               	movwf	??_Lcd_Write_Char
  2558  04D6                     u1607:
  2559  04D6  0BA0               	decfsz	??_Lcd_Write_Char,f
  2560  04D7  2CD6               	goto	u1607
  2561  04D8  2CD9               	nop2
  2562  04D9                     l1682:
  2563                           
  2564                           ;lcd.c: 129:     RB3 = 0;;lcd.c: 129:     RB3 = 0;
  2565  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2566  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  2567  04DB  1186               	bcf	6,3	;volatile
  2568  04DC                     l166:
  2569  04DC  0008               	return
  2570  04DD                     __end_of_Lcd_Write_Char:
  2571                           
  2572                           	psect	text14
  2573  0483                     __ptext14:	
  2574 ;; *************** function _Lcd_Set_Cursor *****************
  2575 ;; Defined at:
  2576 ;;		line 74 in file "lcd.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  a               1    wreg     unsigned char 
  2579 ;;  b               1    3[BANK0 ] unsigned char 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  a               1    5[BANK0 ] unsigned char 
  2582 ;;  temp            1    6[BANK0 ] unsigned char 
  2583 ;;  y               1    0        unsigned char 
  2584 ;;  z               1    0        unsigned char 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0, pclath, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2594 ;;      Params:         0       1       0       0       0
  2595 ;;      Locals:         0       2       0       0       0
  2596 ;;      Temps:          0       1       0       0       0
  2597 ;;      Totals:         0       4       0       0       0
  2598 ;;Total ram usage:        4 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:    4
  2601 ;; This function calls:
  2602 ;;		_Lcd_Cmd
  2603 ;; This function is called by:
  2604 ;;		_mostrar_datos
  2605 ;;		_Lcd_Credits
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           
  2610                           ;psect for function _Lcd_Set_Cursor
  2611  0483                     _Lcd_Set_Cursor:
  2612                           
  2613                           ;incstack = 0
  2614                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2615                           ;Lcd_Set_Cursor@a stored from wreg
  2616  0483  1283               	bcf	3,5	;RP0=0, select bank0
  2617  0484  1303               	bcf	3,6	;RP1=0, select bank0
  2618  0485  00A5               	movwf	Lcd_Set_Cursor@a
  2619  0486                     l1732:
  2620                           
  2621                           ;lcd.c: 75:     char temp, z, y;;lcd.c: 75:     char temp, z, y;;lcd.c: 76:     if (a ==
      +                           1) {;lcd.c: 76:     if (a == 1) {
  2622  0486  0325               	decf	Lcd_Set_Cursor@a,w
  2623  0487  1D03               	btfss	3,2
  2624  0488  2C8A               	goto	u1391
  2625  0489  2C8B               	goto	u1390
  2626  048A                     u1391:
  2627  048A  2C97               	goto	l1738
  2628  048B                     u1390:
  2629  048B                     l1734:
  2630                           
  2631                           ;lcd.c: 77:         temp = 0x80 + b - 1;;lcd.c: 77:         temp = 0x80 + b - 1;
  2632  048B  0823               	movf	Lcd_Set_Cursor@b,w
  2633  048C  3E7F               	addlw	127
  2634  048D  00A4               	movwf	??_Lcd_Set_Cursor
  2635  048E  0824               	movf	??_Lcd_Set_Cursor,w
  2636  048F  00A6               	movwf	Lcd_Set_Cursor@temp
  2637  0490                     l1736:
  2638                           
  2639                           ;lcd.c: 84:         Lcd_Cmd(temp);;lcd.c: 84:         Lcd_Cmd(temp);
  2640  0490  0826               	movf	Lcd_Set_Cursor@temp,w
  2641  0491  120A  118A  24A9  120A  118A  	fcall	_Lcd_Cmd
  2642                           
  2643                           ;lcd.c: 85:     } else if (a == 2) {;lcd.c: 85:     } else if (a == 2) {
  2644  0496  2CA8               	goto	l160
  2645  0497                     l1738:
  2646  0497  3002               	movlw	2
  2647  0498  0625               	xorwf	Lcd_Set_Cursor@a,w
  2648  0499  1D03               	btfss	3,2
  2649  049A  2C9C               	goto	u1401
  2650  049B  2C9D               	goto	u1400
  2651  049C                     u1401:
  2652  049C  2CA8               	goto	l160
  2653  049D                     u1400:
  2654  049D                     l1740:
  2655                           
  2656                           ;lcd.c: 86:         temp = 0xC0 + b - 1;;lcd.c: 86:         temp = 0xC0 + b - 1;
  2657  049D  0823               	movf	Lcd_Set_Cursor@b,w
  2658  049E  3EBF               	addlw	191
  2659  049F  00A4               	movwf	??_Lcd_Set_Cursor
  2660  04A0  0824               	movf	??_Lcd_Set_Cursor,w
  2661  04A1  00A6               	movwf	Lcd_Set_Cursor@temp
  2662  04A2                     l1742:
  2663                           
  2664                           ;lcd.c: 93:         Lcd_Cmd(temp);;lcd.c: 93:         Lcd_Cmd(temp);
  2665  04A2  0826               	movf	Lcd_Set_Cursor@temp,w
  2666  04A3  120A  118A  24A9  120A  118A  	fcall	_Lcd_Cmd
  2667  04A8                     l160:
  2668  04A8  0008               	return
  2669  04A9                     __end_of_Lcd_Set_Cursor:
  2670                           
  2671                           	psect	text15
  2672  04F1                     __ptext15:	
  2673 ;; *************** function _adc_start *****************
  2674 ;; Defined at:
  2675 ;;		line 113 in file "lab3.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2689 ;;      Params:         0       0       0       0       0
  2690 ;;      Locals:         0       0       0       0       0
  2691 ;;      Temps:          0       2       0       0       0
  2692 ;;      Totals:         0       2       0       0       0
  2693 ;;Total ram usage:        2 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    2
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_main
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function _adc_start
  2705  04F1                     _adc_start:
  2706  04F1                     l1840:	
  2707                           ;incstack = 0
  2708                           ; Regs used in _adc_start: [wreg]
  2709                           
  2710                           
  2711                           ;lab3.c: 114:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2712  04F1  301A               	movlw	26
  2713  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2714  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2715  04F4  00A1               	movwf	??_adc_start+1
  2716  04F5  30F7               	movlw	247
  2717  04F6  00A0               	movwf	??_adc_start
  2718  04F7                     u1617:
  2719  04F7  0BA0               	decfsz	??_adc_start,f
  2720  04F8  2CF7               	goto	u1617
  2721  04F9  0BA1               	decfsz	??_adc_start+1,f
  2722  04FA  2CF7               	goto	u1617
  2723  04FB  2CFC               	nop2
  2724  04FC                     l1842:
  2725                           
  2726                           ;lab3.c: 115:     if (0 == ADCON0bits.GO_nDONE) {
  2727  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2728  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2729  04FE  189F               	btfsc	31,1	;volatile
  2730  04FF  2D01               	goto	u1541
  2731  0500  2D02               	goto	u1540
  2732  0501                     u1541:
  2733  0501  2D03               	goto	l91
  2734  0502                     u1540:
  2735  0502                     l1844:
  2736                           
  2737                           ;lab3.c: 116:         ADCON0bits.GO_nDONE = 1;
  2738  0502  149F               	bsf	31,1	;volatile
  2739  0503                     l91:
  2740  0503  0008               	return
  2741  0504                     __end_of_adc_start:
  2742                           
  2743                           	psect	text16
  2744  02A0                     __ptext16:	
  2745 ;; *************** function _Lcd_Init *****************
  2746 ;; Defined at:
  2747 ;;		line 97 in file "lcd.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, status,2, status,0, pclath, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2761 ;;      Params:         0       0       0       0       0
  2762 ;;      Locals:         0       0       0       0       0
  2763 ;;      Temps:          0       2       0       0       0
  2764 ;;      Totals:         0       2       0       0       0
  2765 ;;Total ram usage:        2 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    4
  2768 ;; This function calls:
  2769 ;;		_Lcd_Cmd
  2770 ;;		_Lcd_Port
  2771 ;; This function is called by:
  2772 ;;		_main
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           
  2777                           ;psect for function _Lcd_Init
  2778  02A0                     _Lcd_Init:
  2779  02A0                     l1830:	
  2780                           ;incstack = 0
  2781                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2782                           
  2783                           
  2784                           ;lcd.c: 98:     Lcd_Port(0x00);;lcd.c: 98:     Lcd_Port(0x00);
  2785  02A0  3000               	movlw	0
  2786  02A1  120A  118A  23B9  120A  118A  	fcall	_Lcd_Port
  2787  02A6                     l1832:
  2788                           
  2789                           ;lcd.c: 99:     _delay((unsigned long)((20)*(8000000/4000.0)));;lcd.c: 99:     _delay((u
      +                          nsigned long)((20)*(8000000/4000.0)));
  2790  02A6  3034               	movlw	52
  2791  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2792  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  2793  02A9  00A4               	movwf	??_Lcd_Init+1
  2794  02AA  30F1               	movlw	241
  2795  02AB  00A3               	movwf	??_Lcd_Init
  2796  02AC                     u1627:
  2797  02AC  0BA3               	decfsz	??_Lcd_Init,f
  2798  02AD  2AAC               	goto	u1627
  2799  02AE  0BA4               	decfsz	??_Lcd_Init+1,f
  2800  02AF  2AAC               	goto	u1627
  2801  02B0                     l1834:
  2802                           
  2803                           ;lcd.c: 100:     Lcd_Cmd(0x30);;lcd.c: 100:     Lcd_Cmd(0x30);
  2804  02B0  3030               	movlw	48
  2805  02B1  120A  118A  24A9  120A  118A  	fcall	_Lcd_Cmd
  2806                           
  2807                           ;lcd.c: 101:     _delay((unsigned long)((5)*(8000000/4000.0)));;lcd.c: 101:     _delay((
      +                          unsigned long)((5)*(8000000/4000.0)));
  2808  02B6  300D               	movlw	13
  2809  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2810  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2811  02B9  00A4               	movwf	??_Lcd_Init+1
  2812  02BA  30FB               	movlw	251
  2813  02BB  00A3               	movwf	??_Lcd_Init
  2814  02BC                     u1637:
  2815  02BC  0BA3               	decfsz	??_Lcd_Init,f
  2816  02BD  2ABC               	goto	u1637
  2817  02BE  0BA4               	decfsz	??_Lcd_Init+1,f
  2818  02BF  2ABC               	goto	u1637
  2819  02C0                     l1836:
  2820                           
  2821                           ;lcd.c: 102:     Lcd_Cmd(0x30);;lcd.c: 102:     Lcd_Cmd(0x30);
  2822  02C0  3030               	movlw	48
  2823  02C1  120A  118A  24A9  120A  118A  	fcall	_Lcd_Cmd
  2824  02C6                     l1838:
  2825                           
  2826                           ;lcd.c: 103:     _delay((unsigned long)((11)*(8000000/4000.0)));;lcd.c: 103:     _delay(
      +                          (unsigned long)((11)*(8000000/4000.0)));
  2827  02C6  301D               	movlw	29
  2828  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2829  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2830  02C9  00A4               	movwf	??_Lcd_Init+1
  2831  02CA  3090               	movlw	144
  2832  02CB  00A3               	movwf	??_Lcd_Init
  2833  02CC                     u1647:
  2834  02CC  0BA3               	decfsz	??_Lcd_Init,f
  2835  02CD  2ACC               	goto	u1647
  2836  02CE  0BA4               	decfsz	??_Lcd_Init+1,f
  2837  02CF  2ACC               	goto	u1647
  2838  02D0  0000               	nop
  2839                           
  2840                           ;lcd.c: 104:     Lcd_Cmd(0x30);;lcd.c: 104:     Lcd_Cmd(0x30);
  2841  02D1  3030               	movlw	48
  2842  02D2  120A  118A  24A9  120A  118A  	fcall	_Lcd_Cmd
  2843                           
  2844                           ;lcd.c: 106:     Lcd_Cmd(0x38);;lcd.c: 106:     Lcd_Cmd(0x38);
  2845  02D7  3038               	movlw	56
  2846  02D8  120A  118A  24A9  120A  118A  	fcall	_Lcd_Cmd
  2847                           
  2848                           ;lcd.c: 107:     Lcd_Cmd(0x0C);;lcd.c: 107:     Lcd_Cmd(0x0C);
  2849  02DD  300C               	movlw	12
  2850  02DE  120A  118A  24A9  120A  118A  	fcall	_Lcd_Cmd
  2851                           
  2852                           ;lcd.c: 108:     Lcd_Cmd(0x06);;lcd.c: 108:     Lcd_Cmd(0x06);
  2853  02E3  3006               	movlw	6
  2854  02E4  120A  118A  24A9  120A  118A  	fcall	_Lcd_Cmd
  2855  02E9                     l163:
  2856  02E9  0008               	return
  2857  02EA                     __end_of_Lcd_Init:
  2858                           
  2859                           	psect	text17
  2860  04A9                     __ptext17:	
  2861 ;; *************** function _Lcd_Cmd *****************
  2862 ;; Defined at:
  2863 ;;		line 62 in file "lcd.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  a               1    wreg     unsigned char 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  a               1    2[BANK0 ] unsigned char 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      void 
  2870 ;; Registers used:
  2871 ;;		wreg, status,2, status,0, pclath, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2877 ;;      Params:         0       0       0       0       0
  2878 ;;      Locals:         0       1       0       0       0
  2879 ;;      Temps:          0       2       0       0       0
  2880 ;;      Totals:         0       3       0       0       0
  2881 ;;Total ram usage:        3 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    3
  2884 ;; This function calls:
  2885 ;;		_Lcd_Port
  2886 ;; This function is called by:
  2887 ;;		_Lcd_Set_Cursor
  2888 ;;		_Lcd_Init
  2889 ;;		_Lcd_Clear
  2890 ;;		_Lcd_Shift_Right
  2891 ;;		_Lcd_Shift_Left
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           
  2896                           ;psect for function _Lcd_Cmd
  2897  04A9                     _Lcd_Cmd:
  2898                           
  2899                           ;incstack = 0
  2900                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2901                           ;Lcd_Cmd@a stored from wreg
  2902  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  2903  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  2904  04AB  00A2               	movwf	Lcd_Cmd@a
  2905  04AC                     l1664:
  2906                           
  2907                           ;lcd.c: 63:     RB2 = 0;;lcd.c: 63:     RB2 = 0;
  2908  04AC  1106               	bcf	6,2	;volatile
  2909  04AD                     l1666:
  2910                           
  2911                           ;lcd.c: 64:     Lcd_Port(a);;lcd.c: 64:     Lcd_Port(a);
  2912  04AD  0822               	movf	Lcd_Cmd@a,w
  2913  04AE  120A  118A  23B9  120A  118A  	fcall	_Lcd_Port
  2914  04B3                     l1668:
  2915                           
  2916                           ;lcd.c: 65:     RB3 = 1;;lcd.c: 65:     RB3 = 1;
  2917  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  2918  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  2919  04B5  1586               	bsf	6,3	;volatile
  2920  04B6                     l1670:
  2921                           
  2922                           ;lcd.c: 66:     _delay((unsigned long)((4)*(8000000/4000.0)));;lcd.c: 66:     _delay((un
      +                          signed long)((4)*(8000000/4000.0)));
  2923  04B6  300B               	movlw	11
  2924  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2925  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2926  04B9  00A1               	movwf	??_Lcd_Cmd+1
  2927  04BA  3061               	movlw	97
  2928  04BB  00A0               	movwf	??_Lcd_Cmd
  2929  04BC                     u1657:
  2930  04BC  0BA0               	decfsz	??_Lcd_Cmd,f
  2931  04BD  2CBC               	goto	u1657
  2932  04BE  0BA1               	decfsz	??_Lcd_Cmd+1,f
  2933  04BF  2CBC               	goto	u1657
  2934  04C0  2CC1               	nop2
  2935  04C1                     l1672:
  2936                           
  2937                           ;lcd.c: 67:     RB3 = 0;;lcd.c: 67:     RB3 = 0;
  2938  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2939  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2940  04C3  1186               	bcf	6,3	;volatile
  2941  04C4                     l151:
  2942  04C4  0008               	return
  2943  04C5                     __end_of_Lcd_Cmd:
  2944                           
  2945                           	psect	text18
  2946  03B9                     __ptext18:	
  2947 ;; *************** function _Lcd_Port *****************
  2948 ;; Defined at:
  2949 ;;		line 27 in file "lcd.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  a               1    wreg     unsigned char 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  a               1    6[COMMON] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       0       0       0       0
  2964 ;;      Locals:         1       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0
  2966 ;;      Totals:         1       0       0       0       0
  2967 ;;Total ram usage:        1 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    2
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_Lcd_Cmd
  2974 ;;		_Lcd_Init
  2975 ;;		_Lcd_Write_Char
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           
  2980                           ;psect for function _Lcd_Port
  2981  03B9                     _Lcd_Port:
  2982                           
  2983                           ;incstack = 0
  2984                           ; Regs used in _Lcd_Port: [wreg]
  2985                           ;Lcd_Port@a stored from wreg
  2986  03B9  00F6               	movwf	Lcd_Port@a
  2987  03BA                     l1646:
  2988                           
  2989                           ;lcd.c: 28:     if (a & 1);lcd.c: 28:     if (a & 1)
  2990  03BA  1C76               	btfss	Lcd_Port@a,0
  2991  03BB  2BBD               	goto	u1191
  2992  03BC  2BBE               	goto	u1190
  2993  03BD                     u1191:
  2994  03BD  2BC2               	goto	l132
  2995  03BE                     u1190:
  2996  03BE                     l1648:
  2997                           
  2998                           ;lcd.c: 29:         RD0 = 1;;lcd.c: 29:         RD0 = 1;
  2999  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  3000  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  3001  03C0  1408               	bsf	8,0	;volatile
  3002  03C1  2BC5               	goto	l133
  3003  03C2                     l132:	
  3004                           ;lcd.c: 30:     else;lcd.c: 30:     else
  3005                           
  3006                           
  3007                           ;lcd.c: 31:         RD0 = 0;;lcd.c: 31:         RD0 = 0;
  3008  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  3009  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  3010  03C4  1008               	bcf	8,0	;volatile
  3011  03C5                     l133:
  3012                           
  3013                           ;lcd.c: 32:     if (a & 2);lcd.c: 32:     if (a & 2)
  3014  03C5  1CF6               	btfss	Lcd_Port@a,1
  3015  03C6  2BC8               	goto	u1201
  3016  03C7  2BC9               	goto	u1200
  3017  03C8                     u1201:
  3018  03C8  2BCB               	goto	l134
  3019  03C9                     u1200:
  3020  03C9                     l1650:
  3021                           
  3022                           ;lcd.c: 33:         RD1 = 1;;lcd.c: 33:         RD1 = 1;
  3023  03C9  1488               	bsf	8,1	;volatile
  3024  03CA  2BCC               	goto	l135
  3025  03CB                     l134:	
  3026                           ;lcd.c: 34:     else;lcd.c: 34:     else
  3027                           
  3028                           
  3029                           ;lcd.c: 35:         RD1 = 0;;lcd.c: 35:         RD1 = 0;
  3030  03CB  1088               	bcf	8,1	;volatile
  3031  03CC                     l135:
  3032                           
  3033                           ;lcd.c: 36:     if (a & 4);lcd.c: 36:     if (a & 4)
  3034  03CC  1D76               	btfss	Lcd_Port@a,2
  3035  03CD  2BCF               	goto	u1211
  3036  03CE  2BD0               	goto	u1210
  3037  03CF                     u1211:
  3038  03CF  2BD2               	goto	l136
  3039  03D0                     u1210:
  3040  03D0                     l1652:
  3041                           
  3042                           ;lcd.c: 37:         RD2 = 1;;lcd.c: 37:         RD2 = 1;
  3043  03D0  1508               	bsf	8,2	;volatile
  3044  03D1  2BD3               	goto	l137
  3045  03D2                     l136:	
  3046                           ;lcd.c: 38:     else;lcd.c: 38:     else
  3047                           
  3048                           
  3049                           ;lcd.c: 39:         RD2 = 0;;lcd.c: 39:         RD2 = 0;
  3050  03D2  1108               	bcf	8,2	;volatile
  3051  03D3                     l137:
  3052                           
  3053                           ;lcd.c: 40:     if (a & 8);lcd.c: 40:     if (a & 8)
  3054  03D3  1DF6               	btfss	Lcd_Port@a,3
  3055  03D4  2BD6               	goto	u1221
  3056  03D5  2BD7               	goto	u1220
  3057  03D6                     u1221:
  3058  03D6  2BD9               	goto	l138
  3059  03D7                     u1220:
  3060  03D7                     l1654:
  3061                           
  3062                           ;lcd.c: 41:         RD3 = 1;;lcd.c: 41:         RD3 = 1;
  3063  03D7  1588               	bsf	8,3	;volatile
  3064  03D8  2BDA               	goto	l139
  3065  03D9                     l138:	
  3066                           ;lcd.c: 42:     else;lcd.c: 42:     else
  3067                           
  3068                           
  3069                           ;lcd.c: 43:         RD3 = 0;;lcd.c: 43:         RD3 = 0;
  3070  03D9  1188               	bcf	8,3	;volatile
  3071  03DA                     l139:
  3072                           
  3073                           ;lcd.c: 44:     if (a & 16);lcd.c: 44:     if (a & 16)
  3074  03DA  1E76               	btfss	Lcd_Port@a,4
  3075  03DB  2BDD               	goto	u1231
  3076  03DC  2BDE               	goto	u1230
  3077  03DD                     u1231:
  3078  03DD  2BE0               	goto	l140
  3079  03DE                     u1230:
  3080  03DE                     l1656:
  3081                           
  3082                           ;lcd.c: 45:         RD4 = 1;;lcd.c: 45:         RD4 = 1;
  3083  03DE  1608               	bsf	8,4	;volatile
  3084  03DF  2BE1               	goto	l141
  3085  03E0                     l140:	
  3086                           ;lcd.c: 46:     else;lcd.c: 46:     else
  3087                           
  3088                           
  3089                           ;lcd.c: 47:         RD4 = 0;;lcd.c: 47:         RD4 = 0;
  3090  03E0  1208               	bcf	8,4	;volatile
  3091  03E1                     l141:
  3092                           
  3093                           ;lcd.c: 48:     if (a & 32);lcd.c: 48:     if (a & 32)
  3094  03E1  1EF6               	btfss	Lcd_Port@a,5
  3095  03E2  2BE4               	goto	u1241
  3096  03E3  2BE5               	goto	u1240
  3097  03E4                     u1241:
  3098  03E4  2BE7               	goto	l142
  3099  03E5                     u1240:
  3100  03E5                     l1658:
  3101                           
  3102                           ;lcd.c: 49:         RD5 = 1;;lcd.c: 49:         RD5 = 1;
  3103  03E5  1688               	bsf	8,5	;volatile
  3104  03E6  2BE8               	goto	l143
  3105  03E7                     l142:	
  3106                           ;lcd.c: 50:     else;lcd.c: 50:     else
  3107                           
  3108                           
  3109                           ;lcd.c: 51:         RD5 = 0;;lcd.c: 51:         RD5 = 0;
  3110  03E7  1288               	bcf	8,5	;volatile
  3111  03E8                     l143:
  3112                           
  3113                           ;lcd.c: 52:     if (a & 64);lcd.c: 52:     if (a & 64)
  3114  03E8  1F76               	btfss	Lcd_Port@a,6
  3115  03E9  2BEB               	goto	u1251
  3116  03EA  2BEC               	goto	u1250
  3117  03EB                     u1251:
  3118  03EB  2BEE               	goto	l144
  3119  03EC                     u1250:
  3120  03EC                     l1660:
  3121                           
  3122                           ;lcd.c: 53:         RD6 = 1;;lcd.c: 53:         RD6 = 1;
  3123  03EC  1708               	bsf	8,6	;volatile
  3124  03ED  2BEF               	goto	l145
  3125  03EE                     l144:	
  3126                           ;lcd.c: 54:     else;lcd.c: 54:     else
  3127                           
  3128                           
  3129                           ;lcd.c: 55:         RD6 = 0;;lcd.c: 55:         RD6 = 0;
  3130  03EE  1308               	bcf	8,6	;volatile
  3131  03EF                     l145:
  3132                           
  3133                           ;lcd.c: 56:     if (a & 128);lcd.c: 56:     if (a & 128)
  3134  03EF  1FF6               	btfss	Lcd_Port@a,7
  3135  03F0  2BF2               	goto	u1261
  3136  03F1  2BF3               	goto	u1260
  3137  03F2                     u1261:
  3138  03F2  2BF5               	goto	l146
  3139  03F3                     u1260:
  3140  03F3                     l1662:
  3141                           
  3142                           ;lcd.c: 57:         RD7 = 1;;lcd.c: 57:         RD7 = 1;
  3143  03F3  1788               	bsf	8,7	;volatile
  3144  03F4  2BF6               	goto	l148
  3145  03F5                     l146:	
  3146                           ;lcd.c: 58:     else;lcd.c: 58:     else
  3147                           
  3148                           
  3149                           ;lcd.c: 59:         RD7 = 0;;lcd.c: 59:         RD7 = 0;
  3150  03F5  1388               	bcf	8,7	;volatile
  3151  03F6                     l148:
  3152  03F6  0008               	return
  3153  03F7                     __end_of_Lcd_Port:
  3154                           
  3155                           	psect	text19
  3156  01FE                     __ptext19:	
  3157 ;; *************** function _isr *****************
  3158 ;; Defined at:
  3159 ;;		line 136 in file "lab3.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;		None
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3173 ;;      Params:         0       0       0       0       0
  3174 ;;      Locals:         0       0       0       0       0
  3175 ;;      Temps:          4       0       0       0       0
  3176 ;;      Totals:         4       0       0       0       0
  3177 ;;Total ram usage:        4 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; Hardware stack levels required when called:    1
  3180 ;; This function calls:
  3181 ;;		_usart_R
  3182 ;; This function is called by:
  3183 ;;		Interrupt level 1
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           
  3188                           ;psect for function _isr
  3189  01FE                     _isr:
  3190  01FE                     i1l1540:
  3191                           
  3192                           ;lab3.c: 137:     if (ADIF && ADIE) {
  3193  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  3194  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  3195  0200  1F0C               	btfss	12,6	;volatile
  3196  0201  2A03               	goto	u109_21
  3197  0202  2A04               	goto	u109_20
  3198  0203                     u109_21:
  3199  0203  2A22               	goto	i1l1552
  3200  0204                     u109_20:
  3201  0204                     i1l1542:
  3202  0204  1683               	bsf	3,5	;RP0=1, select bank1
  3203  0205  1303               	bcf	3,6	;RP1=0, select bank1
  3204  0206  1F0C               	btfss	12,6	;volatile
  3205  0207  2A09               	goto	u110_21
  3206  0208  2A0A               	goto	u110_20
  3207  0209                     u110_21:
  3208  0209  2A22               	goto	i1l1552
  3209  020A                     u110_20:
  3210  020A                     i1l1544:
  3211                           
  3212                           ;lab3.c: 138:         if (ADCON0bits.CHS2) {
  3213  020A  1283               	bcf	3,5	;RP0=0, select bank0
  3214  020B  1303               	bcf	3,6	;RP1=0, select bank0
  3215  020C  1E1F               	btfss	31,4	;volatile
  3216  020D  2A0F               	goto	u111_21
  3217  020E  2A10               	goto	u111_20
  3218  020F                     u111_21:
  3219  020F  2A17               	goto	i1l100
  3220  0210                     u111_20:
  3221  0210                     i1l1546:
  3222                           
  3223                           ;lab3.c: 139:             pot1 = ADRESH;
  3224  0210  081E               	movf	30,w	;volatile
  3225  0211  00F2               	movwf	??_isr
  3226  0212  0872               	movf	??_isr,w
  3227  0213  00CC               	movwf	_pot1
  3228                           
  3229                           ;lab3.c: 140:             ADCON0 = 0B01101001;
  3230  0214  3069               	movlw	105
  3231  0215  009F               	movwf	31	;volatile
  3232                           
  3233                           ;lab3.c: 141:         } else if (ADCON0bits.CHS1) {
  3234  0216  2A21               	goto	i1l1550
  3235  0217                     i1l100:
  3236  0217  1D9F               	btfss	31,3	;volatile
  3237  0218  2A1A               	goto	u112_21
  3238  0219  2A1B               	goto	u112_20
  3239  021A                     u112_21:
  3240  021A  2A21               	goto	i1l1550
  3241  021B                     u112_20:
  3242  021B                     i1l1548:
  3243                           
  3244                           ;lab3.c: 142:             pot2 = ADRESH;
  3245  021B  081E               	movf	30,w	;volatile
  3246  021C  00F2               	movwf	??_isr
  3247  021D  0872               	movf	??_isr,w
  3248  021E  00CB               	movwf	_pot2
  3249                           
  3250                           ;lab3.c: 143:             ADCON0 = 0B01110001;
  3251  021F  3071               	movlw	113
  3252  0220  009F               	movwf	31	;volatile
  3253  0221                     i1l1550:
  3254                           
  3255                           ;lab3.c: 145:         ADIF = 0;
  3256  0221  130C               	bcf	12,6	;volatile
  3257  0222                     i1l1552:
  3258                           
  3259                           ;lab3.c: 147:     if (RCIE && RCIF){
  3260  0222  1683               	bsf	3,5	;RP0=1, select bank1
  3261  0223  1303               	bcf	3,6	;RP1=0, select bank1
  3262  0224  1E8C               	btfss	12,5	;volatile
  3263  0225  2A27               	goto	u113_21
  3264  0226  2A28               	goto	u113_20
  3265  0227                     u113_21:
  3266  0227  2A4B               	goto	i1l107
  3267  0228                     u113_20:
  3268  0228                     i1l1554:
  3269  0228  1283               	bcf	3,5	;RP0=0, select bank0
  3270  0229  1303               	bcf	3,6	;RP1=0, select bank0
  3271  022A  1E8C               	btfss	12,5	;volatile
  3272  022B  2A2D               	goto	u114_21
  3273  022C  2A2E               	goto	u114_20
  3274  022D                     u114_21:
  3275  022D  2A4B               	goto	i1l107
  3276  022E                     u114_20:
  3277  022E                     i1l1556:
  3278                           
  3279                           ;lab3.c: 148:         usart_R(&RC_data);
  3280  022E  3077               	movlw	(low (_RC_data| 0))& (0+255)
  3281  022F  120A  118A  2524  120A  118A  	fcall	_usart_R
  3282  0234                     i1l1558:
  3283                           
  3284                           ;lab3.c: 149:         if (43 == RC_data){
  3285  0234  302B               	movlw	43
  3286  0235  0677               	xorwf	_RC_data,w
  3287  0236  1D03               	btfss	3,2
  3288  0237  2A39               	goto	u115_21
  3289  0238  2A3A               	goto	u115_20
  3290  0239                     u115_21:
  3291  0239  2A41               	goto	i1l1562
  3292  023A                     u115_20:
  3293  023A                     i1l1560:
  3294                           
  3295                           ;lab3.c: 150:             cont++;
  3296  023A  3001               	movlw	1
  3297  023B  00F2               	movwf	??_isr
  3298  023C  0872               	movf	??_isr,w
  3299  023D  1283               	bcf	3,5	;RP0=0, select bank0
  3300  023E  1303               	bcf	3,6	;RP1=0, select bank0
  3301  023F  07CA               	addwf	_cont,f
  3302                           
  3303                           ;lab3.c: 151:         }
  3304  0240  2A4B               	goto	i1l107
  3305  0241                     i1l1562:
  3306  0241  302D               	movlw	45
  3307  0242  0677               	xorwf	_RC_data,w
  3308  0243  1D03               	btfss	3,2
  3309  0244  2A46               	goto	u116_21
  3310  0245  2A47               	goto	u116_20
  3311  0246                     u116_21:
  3312  0246  2A4B               	goto	i1l107
  3313  0247                     u116_20:
  3314  0247                     i1l1564:
  3315                           
  3316                           ;lab3.c: 153:             cont--;
  3317  0247  3001               	movlw	1
  3318  0248  1283               	bcf	3,5	;RP0=0, select bank0
  3319  0249  1303               	bcf	3,6	;RP1=0, select bank0
  3320  024A  02CA               	subwf	_cont,f
  3321  024B                     i1l107:
  3322  024B  0875               	movf	??_isr+3,w
  3323  024C  008A               	movwf	10
  3324  024D  0874               	movf	??_isr+2,w
  3325  024E  0084               	movwf	4
  3326  024F  0E73               	swapf	??_isr+1,w
  3327  0250  0083               	movwf	3
  3328  0251  0EFE               	swapf	btemp,f
  3329  0252  0E7E               	swapf	btemp,w
  3330  0253  0009               	retfie
  3331  0254                     __end_of_isr:
  3332                           
  3333                           	psect	intentry
  3334  0004                     __pintentry:	
  3335                           ;incstack = 0
  3336                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3337                           
  3338  0004                     interrupt_function:
  3339  007E                     saved_w	set	btemp
  3340  0004  00FE               	movwf	btemp
  3341  0005  0E03               	swapf	3,w
  3342  0006  00F3               	movwf	??_isr+1
  3343  0007  0804               	movf	4,w
  3344  0008  00F4               	movwf	??_isr+2
  3345  0009  080A               	movf	10,w
  3346  000A  00F5               	movwf	??_isr+3
  3347  000B  120A  118A  29FE   	ljmp	_isr
  3348                           
  3349                           	psect	text20
  3350  0524                     __ptext20:	
  3351 ;; *************** function _usart_R *****************
  3352 ;; Defined at:
  3353 ;;		line 64 in file "USART.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  r_data          1    wreg     PTR unsigned char 
  3356 ;;		 -> RC_data(1), 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  r_data          1    1[COMMON] PTR unsigned char 
  3359 ;;		 -> RC_data(1), 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		wreg, fsr0l, fsr0h
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3369 ;;      Params:         0       0       0       0       0
  3370 ;;      Locals:         1       0       0       0       0
  3371 ;;      Temps:          1       0       0       0       0
  3372 ;;      Totals:         2       0       0       0       0
  3373 ;;Total ram usage:        2 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_isr
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           
  3383                           ;psect for function _usart_R
  3384  0524                     _usart_R:
  3385                           
  3386                           ;incstack = 0
  3387                           ; Regs used in _usart_R: [wregfsr0]
  3388                           ;usart_R@r_data stored from wreg
  3389  0524  00F1               	movwf	usart_R@r_data
  3390  0525                     i1l1518:
  3391                           
  3392                           ;USART.c: 65:     if (1 == PIR1bits.RCIF){
  3393  0525  1283               	bcf	3,5	;RP0=0, select bank0
  3394  0526  1303               	bcf	3,6	;RP1=0, select bank0
  3395  0527  1E8C               	btfss	12,5	;volatile
  3396  0528  2D2A               	goto	u106_21
  3397  0529  2D2B               	goto	u106_20
  3398  052A                     u106_21:
  3399  052A  2D31               	goto	i1l222
  3400  052B                     u106_20:
  3401  052B                     i1l1520:
  3402                           
  3403                           ;USART.c: 66:         *r_data = RCREG;
  3404  052B  081A               	movf	26,w	;volatile
  3405  052C  00F0               	movwf	??_usart_R
  3406  052D  0871               	movf	usart_R@r_data,w
  3407  052E  0084               	movwf	4
  3408  052F  0870               	movf	??_usart_R,w
  3409  0530  0080               	movwf	0
  3410  0531                     i1l222:
  3411  0531  0008               	return
  3412  0532                     __end_of_usart_R:
  3413  007E                     btemp	set	126	;btemp
  3414  007E                     wtemp0	set	126
  3415                           
  3416                           	psect	config
  3417                           
  3418                           ;Config register CONFIG1 @ 0x2007
  3419                           ;	Oscillator Selection bits
  3420                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  3421                           ;	Watchdog Timer Enable bit
  3422                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3423                           ;	Power-up Timer Enable bit
  3424                           ;	PWRTE = OFF, PWRT disabled
  3425                           ;	RE3/MCLR pin function select bit
  3426                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3427                           ;	Code Protection bit
  3428                           ;	CP = OFF, Program memory code protection is disabled
  3429                           ;	Data Code Protection bit
  3430                           ;	CPD = OFF, Data memory code protection is disabled
  3431                           ;	Brown Out Reset Selection bits
  3432                           ;	BOREN = OFF, BOR disabled
  3433                           ;	Internal External Switchover bit
  3434                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3435                           ;	Fail-Safe Clock Monitor Enabled bit
  3436                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3437                           ;	Low Voltage Programming Enable bit
  3438                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3439                           ;	In-Circuit Debugger Mode bit
  3440                           ;	DEBUG = 0x1, unprogrammed default
  3441  2007                     	org	8199
  3442  2007  20D1               	dw	8401
  3443                           
  3444                           ;Config register CONFIG2 @ 0x2008
  3445                           ;	Brown-out Reset Selection bit
  3446                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3447                           ;	Flash Program Memory Self Write Enable bits
  3448                           ;	WRT = OFF, Write protection off
  3449  2008                     	org	8200
  3450  2008  3FFF               	dw	16383

Data Sizes:
    Strings     105
    Constant    10
    Data        1
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     42      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> allData_t(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    usart_R@r_data	PTR unsigned char  size(1) Largest target is 1
		 -> RC_data(COMMON[1]), 

    usart_T_virt@t_data	PTR unsigned char  size(1) Largest target is 1
		 -> TX_data(BANK0[1]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[20]), STR_6(CODE[12]), STR_5(CODE[13]), STR_4(CODE[10]), 
		 -> STR_3(CODE[16]), allData_t(BANK0[1]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_setup
    _main->_usart_T_virt
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Port
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    _isr->_usart_R

Critical Paths under _main in BANK0

    _main->_mostrar_datos
    _mostrar_datos->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4979
                                             39 BANK0      3     3      0
                           _Lcd_Init
                          _adc_start
                      _mostrar_datos
                              _setup
                      _usart_T_erase
                         _usart_T_nl
                       _usart_T_virt
 ---------------------------------------------------------------------------------
 (1) _usart_T_virt                                         1     1      0      55
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _usart_T_nl                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usart_T_erase                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              6 COMMON     1     1      0
                         _usart_conf
 ---------------------------------------------------------------------------------
 (2) _usart_conf                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mostrar_datos                                        7     7      0    4397
                                             32 BANK0      7     7      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    20      7    2167
                                             13 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              7 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              6 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1039
                                              2 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0     279
                                              0 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1191
                                              3 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _adc_start                                            2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     527
                                              3 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     279
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     248
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0      55
                                              2 COMMON     4     4      0
                            _usart_R
 ---------------------------------------------------------------------------------
 (6) _usart_R                                              2     2      0      55
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _adc_start
   _mostrar_datos
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setup
     _usart_conf
   _usart_T_erase
   _usart_T_nl
   _usart_T_virt

 _isr (ROOT)
   _usart_R

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      2F       5       58.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 06 17:45:18 2021

                        pc 0002         usart_T_virt@t_data 0076                         l91 0503  
                       l75 0380                         l76 0390                         l94 029F  
                       l87 045B                         l79 03AA                         fsr 0004  
      ___wmul@multiplicand 0022                        l210 0523                        l140 03E0  
                      l132 03C2                        l141 03E1                        l133 03C5  
                      l142 03E7                        l134 03CB                        l206 0514  
                      l214 053C                        l143 03E8                        l135 03CC  
                      l151 04C4                        l144 03EE                        l136 03D2  
                      l160 04A8                        l145 03EF                        l137 03D3  
                      l146 03F5                        l138 03D9                        l218 0547  
                      l139 03DA                        l163 02E9                        l148 03F6  
                      l172 0375                        l166 04DC                        l343 046A  
                      l345 0482                        l339 017A                        l615 032F  
                      l625 0432                        l796 04F0                        _RB2 0032  
                      _RB3 0033                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      u800 032B                        u801 032A                        u740 02F4  
                      u741 02F3                        u760 0306                        u761 0305  
                      u755 02F8                        u780 0317                        u781 0316  
                      u775 0307                        u785 0313                        u795 031F  
                      _isr 01FE                        fsr0 0004                        indf 0000  
          ??_mostrar_datos 0040      __size_of_usart_T_virt 000F                       l1320 02F7  
                     l1330 031D                       l1322 02FE                       l1314 02EA  
                     l1332 031E                       l1324 0302                       l1316 02EE  
                     l1334 0325                       l1326 0306                       l1318 02F4  
                     l1510 0532                       l1328 0317                       l1336 032B  
                     l1512 0538                       l1362 0504                       l1514 053D  
                     l1506 0516                       l1700 0464                       l1364 0508  
                     l1516 0543                       l1508 051C                       l1710 03F7  
                     l1702 0471                       l1366 0509                       l1470 043C  
                     l1720 0411                       l1712 03FF                       l1704 0478  
                     l1800 00FA                       l1480 0451                       l1472 0444  
                     l1650 03C9                       l1722 041B                       l1714 0402  
                     l1706 047E                       l1810 011B                       l1802 00FE  
                     l1482 0457                       l1474 0446                       l1466 0433  
                     l1660 03EC                       l1652 03D0                       l1740 049D  
                     l1732 0486                       l1724 0421                       l1716 0409  
                     l1812 0120                       l1804 0104                       l1820 0164  
                     l1476 0449                       l1468 0439                       l1662 03F3  
                     l1654 03D7                       l1646 03BA                       l1670 04B6  
                     l1830 02A0                       l1742 04A2                       l1734 048B  
                     l1750 0359                       l1726 0428                       l1718 040D  
                     l1814 0150                       l1806 010B                       l1822 0176  
                     l1478 044C                       l1656 03DE                       l1648 03BE  
                     l1672 04C1                       l1664 04AC                       l1832 02A6  
                     l1840 04F1                       l1736 0490                       l1680 04D2  
                     l1744 0330                       l1728 042E                       l1816 0157  
                     l1808 010F                       l1760 003A                       l1752 0023  
                     l1658 03E5                       l1666 04AD                       l1834 02B0  
                     l1842 04FC                       l1738 0497                       l1682 04D9  
                     l1674 04C8                       l1746 0335                       l1690 04ED  
                     l1818 015B                       l1770 0079                       l1762 003D  
                     l1754 0028                       l1850 0269                       l1668 04B3  
                     l1836 02C0                       l1844 0502                       l1676 04C9  
                     l1748 0351                       l1692 04EF                       l1684 04E0  
                     l1780 00AF                       l1772 007D                       l1764 004D  
                     l1756 002E                       l1860 0385                       l1838 02C6  
                     l1678 04CF                       l1686 04E1                       l1790 00BD  
                     l1782 00B7                       l1950 00A7                       l1774 008E  
                     l1766 0051                       l1758 0035                       l1846 0254  
                     l1862 038A                       l1696 045C                       l1688 04E7  
                     l1784 00BB                       l1768 0066                       l1848 025E  
                     l1864 0396                       l1698 0460                       l1794 00D9  
                     l1778 0093                       l1866 039B                       l1858 0376  
                     l1796 00E3                       l1868 03B0                       l1798 00EE  
                     _ADIE 0466                       _ADIF 0066                       ?_isr 0070  
                     STR_1 01BA                       STR_2 01A9                       STR_3 01CB  
                     STR_4 01F4                       STR_5 01DB                       STR_6 01E8  
                     STR_7 0195                       u1030 051C                       u1031 051B  
                     u1200 03C9                       u1040 0538                       u1201 03C8  
                     u1041 0537                       u1210 03D0                       u1050 0543  
                     u1211 03CF                       u1051 0542                       u1220 03D7  
                     u1221 03D6                       u1230 03DE                       u1231 03DD  
                     u1240 03E5                       u1400 049D                       u1320 047E  
                     u1241 03E4                       u1401 049C                       u1321 047D  
                     u1305 046B                       u1250 03EC                       u1410 033F  
                     u1330 03FF                       u1251 03EB                       u1331 03FE  
                     u1315 0472                       u1260 03F3                       u1420 0363  
                     u1500 0104                       u1261 03F2                       u1501 0103  
                     u1190 03BE                       u1430 0375                       u1350 0411  
                     u1270 04E7                       u1510 011B                       u1191 03BD  
                     u1431 0374                       u1351 0410                       u1271 04E6  
                     u1511 011A                       u1360 041B                       u1280 04ED  
                     u1520 0164                       u1440 002E                       u1361 041A  
                     u1345 0403                       u1281 04EC                       u1521 0163  
                     u1441 002D                       u1290 0464                       u1530 0176  
                     u1450 004D                       u1291 0463                       u1531 0175  
                     u1451 004C                       u1540 0502                       u1380 042E  
                     u1460 008D                       u1541 0501                       u1381 042D  
                     u1365 0417                       u1461 008C                       u1390 048B  
                     u1470 00D8                       u1550 0396                       u1391 048A  
                     u1607 04D6                       u1375 0422                       u1471 00D7  
                     u1551 0395                       u1480 00E3                       u1560 03B0  
                     u1617 04F7                       u1481 00E2                       u1561 03AF  
                     u1490 00EE                       u1627 02AC                       u1491 00ED  
                     u1475 00D4                       u1637 02BC                       u1647 02CC  
                     u1495 00EA                       _PIE1 008C                       u1657 04BC  
                     u1597 03A3                       _RCIE 0465                       _RCIF 0065  
        ?_Lcd_Write_String 0022                       _cont 004A                       _main 0376  
                     _pot1 004C                       _pot2 004B                       btemp 007E  
                     start 000E         ??_Lcd_Write_String 0024            __end_of_Lcd_Cmd 04C5  
   __size_of_usart_T_erase 000B                      ??_isr 0072                      ?_main 0070  
             _usart_T_virt 0515            __end_of___lwdiv 0330                      i1l100 0217  
                    i1l107 024B                      i1l222 0531            __end_of___lwmod 0433  
                    _RCREG 001A                      _RCSTA 0018                      _SPBRG 0099  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0026  
                    _TRISB 0086                      _TRISD 0088                      _TXREG 0019  
                    _TXSTA 0098            __end_of_dpowers 0195            __end_of_isdigit 04F1  
                    _setup 0433                      pclath 000A                      status 0003  
          __end_of_usart_R 0532                      wtemp0 007E            __end_of_sprintf 017B  
         __end_of_Lcd_Init 02EA           __end_of_Lcd_Port 03F7            __initialization 0011  
             __end_of_main 03B9                     ??_main 0047                     _ADCON0 001F  
                   _ADCON1 009F              _usart_T_erase 053D                     _ADRESH 001E  
                   ?_setup 0070                     _ANSELH 0189                     u110_20 020A  
                   u110_21 0209                     u111_20 0210                     u111_21 020F  
                   i1l1520 052B                     u112_20 021B                     u112_21 021A  
                   i1l1540 01FE                     i1l1518 0525                     i1l1550 0221  
                   i1l1542 0204                     i1l1560 023A                     u113_20 0228  
                   i1l1544 020A                     i1l1552 0222                     u113_21 0227  
                   i1l1562 0241                     i1l1554 0228                     i1l1546 0210  
                   i1l1564 0247                     i1l1556 022E                     i1l1548 021B  
                   i1l1558 0234                     u106_20 052B                     u114_20 022E  
                   u106_21 052A                     u114_21 022D                     u115_20 023A  
                   u115_21 0239                     u116_20 0247                     u116_21 0246  
                   u109_20 0204                     u109_21 0203                     _INTCON 000B  
                ??_Lcd_Cmd 0020                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0018  
                   ___wmul 045C                  ??___lwdiv 0076                  ??___lwmod 002B  
                ??_isdigit 0076                     saved_w 007E             ?_usart_T_erase 0070  
                ??_usart_R 0070                  ??_sprintf 0034            Lcd_Set_Cursor@a 0025  
          Lcd_Set_Cursor@b 0023    __end_of__initialization 001C         __size_of_adc_start 0013  
           __pcstackCOMMON 0070               __pidataBANK0 0548              __end_of_setup 045C  
           _Lcd_Set_Cursor 0483                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
             sprintf@width 003D                    ??_setup 0076                 __pbssBANK0 004A  
               __pmaintext 0376                    ?___wmul 0020                 __pintentry 0004  
                  _BAUDCTL 0187  __size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 04A9  
        __end_of_adc_start 0504            ??_usart_T_erase 0076                 ??_Lcd_Init 0023  
               ??_Lcd_Port 0076      __end_of_mostrar_datos 02A0                    _RC_data 0077  
               __stringtab 017B             _Lcd_Write_Char 04C5                    _Lcd_Cmd 04A9  
                  _TX_data 004E            __size_of___wmul 0027                    ___lwdiv 02EA  
                  ___lwmod 03F7            ?_Lcd_Set_Cursor 0023                    __ptext1 0515  
                  __ptext2 0532                    __ptext3 053D                    __ptext4 0433  
                  __ptext5 0504                    __ptext6 0254                    __ptext7 0020  
                  __ptext8 04DD                    __ptext9 045C                    _dpowers 018B  
                  _isdigit 04DD               __size_of_isr 0056                    _usart_R 0524  
                  _sprintf 0020     __end_of_Lcd_Write_Char 04DD       end_of_initialization 001C  
                Lcd_Port@a 0076            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022  
        Lcd_Write_String@i 0027                 _usart_T_nl 0532                  _TXSTAbits 0098  
               _usart_conf 0504             __end_of___wmul 0483           _Lcd_Write_String 0330  
      start_initialization 0011                __end_of_isr 0254          __size_of_Lcd_Init 004A  
        __size_of_Lcd_Port 003E              usart_R@r_data 0071                   ??___wmul 0076  
              __pdataBANK0 004E            Lcd_Write_Char@a 0021              ?_usart_T_virt 0070  
              __pbssCOMMON 0077                  ___latbits 0002              __pcstackBANK0 0020  
                _adc_start 04F1                  _allData_t 004D                   ?_Lcd_Cmd 0070  
              sprintf@flag 0037                sprintf@prec 003B                ?_usart_T_nl 0070  
              ?_usart_conf 0070           ___lwdiv@dividend 0022           ??_Lcd_Set_Cursor 0024  
                 ?___lwdiv 0020                   ?___lwmod 0027             ??_usart_T_virt 0076  
                __pstrings 017B                   ?_isdigit 0070      __end_of_usart_T_erase 0548  
         ___lwdiv@quotient 0024                   ?_usart_R 0070                   ?_sprintf 002D  
               ?_adc_start 0070             __size_of_setup 0029          interrupt_function 0004  
           ___wmul@product 0024                   Lcd_Cmd@a 0022                   _PIR1bits 000C  
   __size_of_mostrar_datos 004C                 _ADCON0bits 001F                __stringbase 018A  
        ___wmul@multiplier 0020        __size_of_usart_T_nl 000B           ??_Lcd_Write_Char 0020  
      __size_of_usart_conf 0011                   _Lcd_Init 02A0                   _Lcd_Port 03B9  
 __end_of_Lcd_Write_String 0376           __size_of_Lcd_Cmd 001C           __size_of___lwdiv 0046  
         __size_of___lwmod 003C         __end_of__stringtab 018B                _isdigit$801 0020  
               sprintf@val 0039           __size_of_isdigit 0014            ___lwdiv@divisor 0020  
          ___lwdiv@counter 0026                   __ptext10 03F7                   __ptext11 02EA  
                 __ptext20 0524                   __ptext12 0330                   __ptext13 04C5  
                 __ptext14 0483                   __ptext15 04F1                   __ptext16 02A0  
                 __ptext17 04A9                   __ptext18 03B9                   __ptext19 01FE  
              ??_adc_start 0020              _mostrar_datos 0254           __size_of_usart_R 000E  
         __size_of_sprintf 015B              __size_of_main 0043       __end_of_usart_T_virt 0524  
                 isdigit@c 0021             ?_mostrar_datos 0070                   intlevel1 0000  
                sprintf@ap 0038                  sprintf@sp 003C           ___lwmod@dividend 0029  
             ??_usart_T_nl 0076               ??_usart_conf 0076                  stringcode 0185  
       Lcd_Set_Cursor@temp 0026                   sprintf@c 003F                   sprintf@f 002D  
          ___lwmod@divisor 0027            ___lwmod@counter 002C         __end_of_usart_T_nl 053D  
                 stringdir 0185                   stringtab 017B         __end_of_usart_conf 0515  
