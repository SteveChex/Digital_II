

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 18:42:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383                           
   384                           	psect	idataCOMMON
   385  0739                     __pidataCOMMON:
   386                           
   387                           ;initializer for _TX_data
   388  0739  3405               	retlw	5
   389  001A                     _RCREG	set	26
   390  000C                     _PIR1bits	set	12
   391  0019                     _TXREG	set	25
   392  0018                     _RCSTA	set	24
   393  001E                     _ADRESH	set	30
   394  000B                     _INTCON	set	11
   395  001F                     _ADCON0bits	set	31
   396  001F                     _ADCON0	set	31
   397  0008                     _PORTD	set	8
   398  0006                     _PORTB	set	6
   399  0033                     _RB3	set	51
   400  0032                     _RB2	set	50
   401  0047                     _RD7	set	71
   402  0046                     _RD6	set	70
   403  0045                     _RD5	set	69
   404  0044                     _RD4	set	68
   405  0043                     _RD3	set	67
   406  0042                     _RD2	set	66
   407  0041                     _RD1	set	65
   408  0040                     _RD0	set	64
   409  0065                     _RCIF	set	101
   410  0066                     _ADIF	set	102
   411  0098                     _TXSTAbits	set	152
   412  0098                     _TXSTA	set	152
   413  009A                     _SPBRGH	set	154
   414  0099                     _SPBRG	set	153
   415  008C                     _PIE1	set	140
   416  009F                     _ADCON1	set	159
   417  0086                     _TRISB	set	134
   418  0088                     _TRISD	set	136
   419  0465                     _RCIE	set	1125
   420  0466                     _ADIE	set	1126
   421  0187                     _BAUDCTL	set	391
   422  0189                     _ANSELH	set	393
   423                           
   424                           	psect	strings
   425  0400                     __pstrings:
   426  0400                     stringtab:
   427  0400                     __stringtab:
   428  0400                     stringcode:	
   429                           ;	String table - string pointers are 1 byte each
   430                           
   431  0400                     stringdir:
   432  0400  3004               	movlw	high stringdir
   433  0401  008A               	movwf	10
   434  0402  0804               	movf	4,w
   435  0403  0A84               	incf	4,f
   436  0404  0782               	addwf	2,f
   437  0405                     __stringbase:
   438  0405  3400               	retlw	0
   439  0406                     __end_of__stringtab:
   440  0406                     STR_8:
   441  0406  3477               	retlw	119	;'w'
   442  0407  3477               	retlw	119	;'w'
   443  0408  3477               	retlw	119	;'w'
   444  0409  342E               	retlw	46	;'.'
   445  040A  3465               	retlw	101	;'e'
   446  040B  346C               	retlw	108	;'l'
   447  040C  3465               	retlw	101	;'e'
   448  040D  3463               	retlw	99	;'c'
   449  040E  3474               	retlw	116	;'t'
   450  040F  3472               	retlw	114	;'r'
   451  0410  346F               	retlw	111	;'o'
   452  0411  3453               	retlw	83	;'S'
   453  0412  346F               	retlw	111	;'o'
   454  0413  346D               	retlw	109	;'m'
   455  0414  3465               	retlw	101	;'e'
   456  0415  342E               	retlw	46	;'.'
   457  0416  3463               	retlw	99	;'c'
   458  0417  346F               	retlw	111	;'o'
   459  0418  346D               	retlw	109	;'m'
   460  0419  3400               	retlw	0
   461  041A                     STR_1:
   462  041A  3453               	retlw	83	;'S'
   463  041B  3431               	retlw	49	;'1'
   464  041C  343A               	retlw	58	;':'
   465  041D  3420               	retlw	32	;' '
   466  041E  3420               	retlw	32	;' '
   467  041F  3420               	retlw	32	;' '
   468  0420  3453               	retlw	83	;'S'
   469  0421  3432               	retlw	50	;'2'
   470  0422  343A               	retlw	58	;':'
   471  0423  3420               	retlw	32	;' '
   472  0424  3420               	retlw	32	;' '
   473  0425  3420               	retlw	32	;' '
   474  0426  3453               	retlw	83	;'S'
   475  0427  3433               	retlw	51	;'3'
   476  0428  343A               	retlw	58	;':'
   477  0429  3420               	retlw	32	;' '
   478  042A  3400               	retlw	0
   479  042B                     STR_4:
   480  042B  344C               	retlw	76	;'L'
   481  042C  3443               	retlw	67	;'C'
   482  042D  3444               	retlw	68	;'D'
   483  042E  3420               	retlw	32	;' '
   484  042F  344C               	retlw	76	;'L'
   485  0430  3469               	retlw	105	;'i'
   486  0431  3462               	retlw	98	;'b'
   487  0432  3472               	retlw	114	;'r'
   488  0433  3461               	retlw	97	;'a'
   489  0434  3472               	retlw	114	;'r'
   490  0435  3479               	retlw	121	;'y'
   491  0436  3420               	retlw	32	;' '
   492  0437  3466               	retlw	102	;'f'
   493  0438  346F               	retlw	111	;'o'
   494  0439  3472               	retlw	114	;'r'
   495  043A  3400               	retlw	0
   496  043B                     STR_6:
   497  043B  3444               	retlw	68	;'D'
   498  043C  3465               	retlw	101	;'e'
   499  043D  3476               	retlw	118	;'v'
   500  043E  3465               	retlw	101	;'e'
   501  043F  346C               	retlw	108	;'l'
   502  0440  346F               	retlw	111	;'o'
   503  0441  3470               	retlw	112	;'p'
   504  0442  3465               	retlw	101	;'e'
   505  0443  3464               	retlw	100	;'d'
   506  0444  3420               	retlw	32	;' '
   507  0445  3442               	retlw	66	;'B'
   508  0446  3479               	retlw	121	;'y'
   509  0447  3400               	retlw	0
   510  0448                     STR_7:
   511  0448  3465               	retlw	101	;'e'
   512  0449  346C               	retlw	108	;'l'
   513  044A  3465               	retlw	101	;'e'
   514  044B  3463               	retlw	99	;'c'
   515  044C  3474               	retlw	116	;'t'
   516  044D  3472               	retlw	114	;'r'
   517  044E  346F               	retlw	111	;'o'
   518  044F  3453               	retlw	83	;'S'
   519  0450  346F               	retlw	111	;'o'
   520  0451  346D               	retlw	109	;'m'
   521  0452  3465               	retlw	101	;'e'
   522  0453  3400               	retlw	0
   523  0454                     STR_5:
   524  0454  344D               	retlw	77	;'M'
   525  0455  3450               	retlw	80	;'P'
   526  0456  344C               	retlw	76	;'L'
   527  0457  3441               	retlw	65	;'A'
   528  0458  3442               	retlw	66	;'B'
   529  0459  3420               	retlw	32	;' '
   530  045A  3458               	retlw	88	;'X'
   531  045B  3443               	retlw	67	;'C'
   532  045C  3438               	retlw	56	;'8'
   533  045D  3400               	retlw	0
   534  045E                     STR_3:
   535  045E  3456               	retlw	86	;'V'
   536  045F  3420               	retlw	32	;' '
   537  0460  3420               	retlw	32	;' '
   538  0461  3400               	retlw	0
   539  0462                     STR_2:
   540  0462  3456               	retlw	86	;'V'
   541  0463  3420               	retlw	32	;' '
   542  0464  3400               	retlw	0
   543                           
   544                           	psect	cinit
   545  0011                     start_initialization:	
   546                           ; #config settings
   547                           
   548  0011                     __initialization:
   549                           
   550                           ; Initialize objects allocated to COMMON
   551  0011  120A  118A  2739  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   552  0016  00F7               	movwf	__pdataCOMMON& (0+127)
   553                           
   554                           ; Clear objects allocated to BANK0
   555  0017  01AD               	clrf	__pbssBANK0& (0+127)
   556  0018  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   557  0019  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   558  001A  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   559  001B  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   560  001C  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   561  001D  01B3               	clrf	(__pbssBANK0+6)& (0+127)
   562  001E  01B4               	clrf	(__pbssBANK0+7)& (0+127)
   563  001F  01B5               	clrf	(__pbssBANK0+8)& (0+127)
   564  0020  01B6               	clrf	(__pbssBANK0+9)& (0+127)
   565  0021  01B7               	clrf	(__pbssBANK0+10)& (0+127)
   566                           
   567                           ; Clear objects allocated to COMMON
   568  0022  01F6               	clrf	__pbssCOMMON& (0+127)
   569  0023                     end_of_initialization:	
   570                           ;End of C runtime variable initialization code
   571                           
   572  0023                     __end_of__initialization:
   573  0023  0183               	clrf	3
   574  0024  120A  118A  2CBB   	ljmp	_main	;jump to C main() function
   575                           
   576                           	psect	bssCOMMON
   577  0076                     __pbssCOMMON:
   578  0076                     _RC_data:
   579  0076                     	ds	1
   580                           
   581                           	psect	dataCOMMON
   582  0077                     __pdataCOMMON:
   583  0077                     _TX_data:
   584  0077                     	ds	1
   585                           
   586                           	psect	bssBANK0
   587  002D                     __pbssBANK0:
   588  002D                     _temp:
   589  002D                     	ds	1
   590  002E                     _cont:
   591  002E                     	ds	1
   592  002F                     _pot2:
   593  002F                     	ds	1
   594  0030                     _pot1:
   595  0030                     	ds	1
   596  0031                     _data_t:
   597  0031                     	ds	1
   598  0032                     _cont_uni:
   599  0032                     	ds	1
   600  0033                     _cont_dec:
   601  0033                     	ds	1
   602  0034                     _cont_cent:
   603  0034                     	ds	1
   604  0035                     _vol_dec2:
   605  0035                     	ds	1
   606  0036                     _vol_dec1:
   607  0036                     	ds	1
   608  0037                     _vol_u:
   609  0037                     	ds	1
   610                           
   611                           	psect	cstackCOMMON
   612  0070                     __pcstackCOMMON:
   613  0070                     ?_setup:
   614  0070                     ?_Lcd_Init:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_usart_T_erase:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_encabezado_usart:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_adc_start:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_mostrar_texto:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_mostrar_datos:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_usart_conf:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_Lcd_Write_String:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_Lcd_Write_Char:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_usart_T_virt:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_usart_T_nl:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_usart_R:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ??_usart_R:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_main:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_isr:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_Lcd_Port:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_Lcd_Cmd:	
   663                           ; 1 bytes @ 0x0
   664                           
   665                           
   666                           ; 1 bytes @ 0x0
   667  0070                     	ds	1
   668  0071                     usart_R@r_data:
   669                           
   670                           ; 1 bytes @ 0x1
   671  0071                     	ds	1
   672  0072                     ??_isr:
   673                           
   674                           ; 1 bytes @ 0x2
   675  0072                     	ds	4
   676  0076                     ??_usart_T_erase:
   677  0076                     ??_mostrar_texto:	
   678                           ; 1 bytes @ 0x6
   679                           
   680  0076                     ??_usart_conf:	
   681                           ; 1 bytes @ 0x6
   682                           
   683  0076                     ??_Lcd_Write_String:	
   684                           ; 1 bytes @ 0x6
   685                           
   686  0076                     ??_usart_T_virt:	
   687                           ; 1 bytes @ 0x6
   688                           
   689  0076                     ??_usart_T_nl:	
   690                           ; 1 bytes @ 0x6
   691                           
   692  0076                     ??_Lcd_Port:	
   693                           ; 1 bytes @ 0x6
   694                           
   695                           
   696                           	psect	cstackBANK0
   697  0020                     __pcstackBANK0:	
   698                           ; 1 bytes @ 0x6
   699                           
   700  0020                     ??_setup:
   701  0020                     ??_adc_start:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0020                     ?_voltaje:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0020                     ?_num_ascii:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0020                     ?_numero:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0020                     voltaje@volt_u:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0020                     numero@cent:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0020                     Lcd_Port@a:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0020                     usart_T_virt@t_data:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0020                     num_ascii@code:	
   726                           ; 1 bytes @ 0x0
   727                           
   728                           
   729                           ; 1 bytes @ 0x0
   730  0020                     	ds	1
   731  0021                     ??_encabezado_usart:
   732  0021                     ??_num_ascii:	
   733                           ; 1 bytes @ 0x1
   734                           
   735  0021                     ??_Lcd_Write_Char:	
   736                           ; 1 bytes @ 0x1
   737                           
   738  0021                     ??_Lcd_Cmd:	
   739                           ; 1 bytes @ 0x1
   740                           
   741  0021                     voltaje@volt_d1:	
   742                           ; 1 bytes @ 0x1
   743                           
   744  0021                     numero@dec:	
   745                           ; 1 bytes @ 0x1
   746                           
   747                           
   748                           ; 1 bytes @ 0x1
   749  0021                     	ds	1
   750  0022                     voltaje@volt_d2:
   751  0022                     numero@uni:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0022                     Lcd_Write_Char@a:	
   755                           ; 1 bytes @ 0x2
   756                           
   757                           
   758                           ; 1 bytes @ 0x2
   759  0022                     	ds	1
   760  0023                     ??_voltaje:
   761  0023                     ??_numero:	
   762                           ; 1 bytes @ 0x3
   763                           
   764  0023                     Lcd_Cmd@a:	
   765                           ; 1 bytes @ 0x3
   766                           
   767  0023                     num_ascii@value:	
   768                           ; 1 bytes @ 0x3
   769                           
   770  0023                     Lcd_Write_String@i:	
   771                           ; 1 bytes @ 0x3
   772                           
   773                           
   774                           ; 2 bytes @ 0x3
   775  0023                     	ds	1
   776  0024                     ??_Lcd_Init:
   777  0024                     ?_Lcd_Set_Cursor:	
   778                           ; 1 bytes @ 0x4
   779                           
   780  0024                     voltaje@data_in:	
   781                           ; 1 bytes @ 0x4
   782                           
   783  0024                     numero@data_in:	
   784                           ; 1 bytes @ 0x4
   785                           
   786  0024                     Lcd_Set_Cursor@b:	
   787                           ; 1 bytes @ 0x4
   788                           
   789                           
   790                           ; 1 bytes @ 0x4
   791  0024                     	ds	1
   792  0025                     ??_Lcd_Set_Cursor:
   793  0025                     Lcd_Write_String@a:	
   794                           ; 1 bytes @ 0x5
   795                           
   796                           
   797                           ; 1 bytes @ 0x5
   798  0025                     	ds	1
   799  0026                     Lcd_Set_Cursor@a:
   800                           
   801                           ; 1 bytes @ 0x6
   802  0026                     	ds	1
   803  0027                     Lcd_Set_Cursor@temp:
   804                           
   805                           ; 1 bytes @ 0x7
   806  0027                     	ds	1
   807  0028                     ??_mostrar_datos:
   808                           
   809                           ; 1 bytes @ 0x8
   810  0028                     	ds	3
   811  002B                     ??_main:
   812                           
   813                           ; 1 bytes @ 0xB
   814  002B                     	ds	2
   815                           
   816                           	psect	maintext
   817  04BB                     __pmaintext:	
   818 ;;
   819 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   820 ;;
   821 ;; *************** function _main *****************
   822 ;; Defined at:
   823 ;;		line 66 in file "lab3.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : B00/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   837 ;;      Params:         0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0
   839 ;;      Temps:          0       2       0       0       0
   840 ;;      Totals:         0       2       0       0       0
   841 ;;Total ram usage:        2 bytes
   842 ;; Hardware stack levels required when called:    6
   843 ;; This function calls:
   844 ;;		_Lcd_Init
   845 ;;		_adc_start
   846 ;;		_encabezado_usart
   847 ;;		_mostrar_datos
   848 ;;		_mostrar_texto
   849 ;;		_setup
   850 ;;		_usart_T_erase
   851 ;; This function is called by:
   852 ;;		Startup code after reset
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _main
   858  04BB                     _main:
   859  04BB                     l2220:	
   860                           ;incstack = 0
   861                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   862                           
   863                           
   864                           ;lab3.c: 67:     setup();
   865  04BB  120A  118A  261C  120A  118A  	fcall	_setup
   866                           
   867                           ;lab3.c: 68:     Lcd_Init();
   868  04C0  120A  118A  2506  120A  118A  	fcall	_Lcd_Init
   869  04C5                     l97:	
   870                           ;lab3.c: 70:     while (1) {
   871                           
   872                           
   873                           ;lab3.c: 71:         usart_T_erase();
   874  04C5  120A  118A  2723  120A  118A  	fcall	_usart_T_erase
   875                           
   876                           ;lab3.c: 72:         encabezado_usart();
   877  04CA  120A  118A  225E  120A  118A  	fcall	_encabezado_usart
   878                           
   879                           ;lab3.c: 73:         adc_start();
   880  04CF  120A  118A  26D2  120A  118A  	fcall	_adc_start
   881  04D4                     l2222:
   882                           
   883                           ;lab3.c: 74:         _delay((unsigned long)((10)*(4000000/4000.0)));
   884  04D4  300D               	movlw	13
   885  04D5  1283               	bcf	3,5	;RP0=0, select bank0
   886  04D6  1303               	bcf	3,6	;RP1=0, select bank0
   887  04D7  00AC               	movwf	??_main+1
   888  04D8  30FB               	movlw	251
   889  04D9  00AB               	movwf	??_main
   890  04DA                     u877:
   891  04DA  0BAB               	decfsz	??_main,f
   892  04DB  2CDA               	goto	u877
   893  04DC  0BAC               	decfsz	??_main+1,f
   894  04DD  2CDA               	goto	u877
   895  04DE                     l2224:
   896                           
   897                           ;lab3.c: 75:         adc_start();
   898  04DE  120A  118A  26D2  120A  118A  	fcall	_adc_start
   899                           
   900                           ;lab3.c: 76:         _delay((unsigned long)((10)*(4000000/4000.0)));
   901  04E3  300D               	movlw	13
   902  04E4  1283               	bcf	3,5	;RP0=0, select bank0
   903  04E5  1303               	bcf	3,6	;RP1=0, select bank0
   904  04E6  00AC               	movwf	??_main+1
   905  04E7  30FB               	movlw	251
   906  04E8  00AB               	movwf	??_main
   907  04E9                     u887:
   908  04E9  0BAB               	decfsz	??_main,f
   909  04EA  2CE9               	goto	u887
   910  04EB  0BAC               	decfsz	??_main+1,f
   911  04EC  2CE9               	goto	u887
   912  04ED                     l2226:
   913                           
   914                           ;lab3.c: 77:         mostrar_texto();
   915  04ED  120A  118A  26F6  120A  118A  	fcall	_mostrar_texto
   916  04F2                     l2228:
   917                           
   918                           ;lab3.c: 78:         mostrar_datos();
   919  04F2  120A  118A  2027  120A  118A  	fcall	_mostrar_datos
   920                           
   921                           ;lab3.c: 79:         _delay((unsigned long)((30)*(4000000/4000.0)));
   922  04F7  3027               	movlw	39
   923  04F8  1283               	bcf	3,5	;RP0=0, select bank0
   924  04F9  1303               	bcf	3,6	;RP1=0, select bank0
   925  04FA  00AC               	movwf	??_main+1
   926  04FB  30F4               	movlw	244
   927  04FC  00AB               	movwf	??_main
   928  04FD                     u897:
   929  04FD  0BAB               	decfsz	??_main,f
   930  04FE  2CFD               	goto	u897
   931  04FF  0BAC               	decfsz	??_main+1,f
   932  0500  2CFD               	goto	u897
   933  0501  0000               	nop
   934  0502  2CC5               	goto	l97
   935  0503  120A  118A  280E   	ljmp	start
   936  0506                     __end_of_main:
   937                           
   938                           	psect	text1
   939  0723                     __ptext1:	
   940 ;; *************** function _usart_T_erase *****************
   941 ;; Defined at:
   942 ;;		line 62 in file "USART.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;		None
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         0       0       0       0       0
   958 ;;      Temps:          0       0       0       0       0
   959 ;;      Totals:         0       0       0       0       0
   960 ;;Total ram usage:        0 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; Hardware stack levels required when called:    2
   963 ;; This function calls:
   964 ;;		Nothing
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           
   971                           ;psect for function _usart_T_erase
   972  0723                     _usart_T_erase:
   973  0723                     l1064:	
   974                           ;incstack = 0
   975                           ; Regs used in _usart_T_erase: [wreg]
   976                           
   977                           
   978                           ;USART.c: 63:     if (1 == TXSTAbits.TRMT) {
   979  0723  1683               	bsf	3,5	;RP0=1, select bank1
   980  0724  1303               	bcf	3,6	;RP1=0, select bank1
   981  0725  1C98               	btfss	24,1	;volatile
   982  0726  2F28               	goto	u201
   983  0727  2F29               	goto	u200
   984  0728                     u201:
   985  0728  2F2D               	goto	l266
   986  0729                     u200:
   987  0729                     l1066:
   988                           
   989                           ;USART.c: 64:         TXREG = 12;
   990  0729  300C               	movlw	12
   991  072A  1283               	bcf	3,5	;RP0=0, select bank0
   992  072B  1303               	bcf	3,6	;RP1=0, select bank0
   993  072C  0099               	movwf	25	;volatile
   994  072D                     l266:
   995  072D  0008               	return
   996  072E                     __end_of_usart_T_erase:
   997                           
   998                           	psect	text2
   999  061C                     __ptext2:	
  1000 ;; *************** function _setup *****************
  1001 ;; Defined at:
  1002 ;;		line 88 in file "lab3.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, status,0, pclath, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0
  1018 ;;      Temps:          0       1       0       0       0
  1019 ;;      Totals:         0       1       0       0       0
  1020 ;;Total ram usage:        1 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    3
  1023 ;; This function calls:
  1024 ;;		_usart_conf
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           
  1031                           ;psect for function _setup
  1032  061C                     _setup:
  1033  061C                     l2002:	
  1034                           ;incstack = 0
  1035                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1036                           
  1037                           
  1038                           ;lab3.c: 94:     ANSELH &= 0B11110100;
  1039  061C  30F4               	movlw	244
  1040  061D  1283               	bcf	3,5	;RP0=0, select bank0
  1041  061E  1303               	bcf	3,6	;RP1=0, select bank0
  1042  061F  00A0               	movwf	??_setup
  1043  0620  0820               	movf	??_setup,w
  1044  0621  1683               	bsf	3,5	;RP0=1, select bank3
  1045  0622  1703               	bsf	3,6	;RP1=1, select bank3
  1046  0623  0589               	andwf	9,f	;volatile
  1047  0624                     l2004:
  1048                           
  1049                           ;lab3.c: 95:     TRISD = 0;
  1050  0624  1683               	bsf	3,5	;RP0=1, select bank1
  1051  0625  1303               	bcf	3,6	;RP1=0, select bank1
  1052  0626  0188               	clrf	8	;volatile
  1053  0627                     l2006:
  1054                           
  1055                           ;lab3.c: 96:     TRISB &= 0B11100011;
  1056  0627  30E3               	movlw	227
  1057  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1059  062A  00A0               	movwf	??_setup
  1060  062B  0820               	movf	??_setup,w
  1061  062C  1683               	bsf	3,5	;RP0=1, select bank1
  1062  062D  1303               	bcf	3,6	;RP1=0, select bank1
  1063  062E  0586               	andwf	6,f	;volatile
  1064                           
  1065                           ;lab3.c: 97:     PORTB = 0;
  1066  062F  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0630  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0631  0186               	clrf	6	;volatile
  1069                           
  1070                           ;lab3.c: 98:     PORTD = 0;
  1071  0632  0188               	clrf	8	;volatile
  1072  0633                     l2008:
  1073                           
  1074                           ;lab3.c: 102:     ADCON0 = 0B01110000;
  1075  0633  3070               	movlw	112
  1076  0634  009F               	movwf	31	;volatile
  1077  0635                     l2010:
  1078                           
  1079                           ;lab3.c: 103:     ADCON1 = 0B00000000;
  1080  0635  1683               	bsf	3,5	;RP0=1, select bank1
  1081  0636  1303               	bcf	3,6	;RP1=0, select bank1
  1082  0637  019F               	clrf	31	;volatile
  1083  0638                     l2012:
  1084                           
  1085                           ;lab3.c: 104:     ADCON0bits.ADON = 1;
  1086  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1088  063A  141F               	bsf	31,0	;volatile
  1089  063B                     l2014:
  1090                           
  1091                           ;lab3.c: 108:     usart_conf();
  1092  063B  120A  118A  26E5  120A  118A  	fcall	_usart_conf
  1093  0640                     l2016:
  1094                           
  1095                           ;lab3.c: 112:     PIE1 |= 0B01100000;
  1096  0640  3060               	movlw	96
  1097  0641  1283               	bcf	3,5	;RP0=0, select bank0
  1098  0642  1303               	bcf	3,6	;RP1=0, select bank0
  1099  0643  00A0               	movwf	??_setup
  1100  0644  0820               	movf	??_setup,w
  1101  0645  1683               	bsf	3,5	;RP0=1, select bank1
  1102  0646  1303               	bcf	3,6	;RP1=0, select bank1
  1103  0647  048C               	iorwf	12,f	;volatile
  1104  0648                     l2018:
  1105                           
  1106                           ;lab3.c: 113:     INTCON |= 0B11000000;
  1107  0648  30C0               	movlw	192
  1108  0649  1283               	bcf	3,5	;RP0=0, select bank0
  1109  064A  1303               	bcf	3,6	;RP1=0, select bank0
  1110  064B  00A0               	movwf	??_setup
  1111  064C  0820               	movf	??_setup,w
  1112  064D  048B               	iorwf	11,f	;volatile
  1113  064E                     l103:
  1114  064E  0008               	return
  1115  064F                     __end_of_setup:
  1116                           
  1117                           	psect	text3
  1118  06E5                     __ptext3:	
  1119 ;; *************** function _usart_conf *****************
  1120 ;; Defined at:
  1121 ;;		line 16 in file "USART.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1135 ;;      Params:         0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0
  1138 ;;      Totals:         0       0       0       0       0
  1139 ;;Total ram usage:        0 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    2
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		_setup
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           
  1150                           ;psect for function _usart_conf
  1151  06E5                     _usart_conf:
  1152  06E5                     l922:	
  1153                           ;incstack = 0
  1154                           ; Regs used in _usart_conf: [wreg+status,2]
  1155                           
  1156                           
  1157                           ;USART.c: 18:     SPBRG = 25;
  1158  06E5  3019               	movlw	25
  1159  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  1160  06E7  1303               	bcf	3,6	;RP1=0, select bank1
  1161  06E8  0099               	movwf	25	;volatile
  1162  06E9                     l924:
  1163                           
  1164                           ;USART.c: 19:     SPBRGH = 0;
  1165  06E9  019A               	clrf	26	;volatile
  1166  06EA                     l926:
  1167                           
  1168                           ;USART.c: 20:     BAUDCTL = 0B00000000;
  1169  06EA  1683               	bsf	3,5	;RP0=1, select bank3
  1170  06EB  1703               	bsf	3,6	;RP1=1, select bank3
  1171  06EC  0187               	clrf	7	;volatile
  1172                           
  1173                           ;USART.c: 29:     TXSTA = 0B00100100;
  1174  06ED  3024               	movlw	36
  1175  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  1176  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  1177  06F0  0098               	movwf	24	;volatile
  1178                           
  1179                           ;USART.c: 39:     RCSTA = 0B10010000;
  1180  06F1  3090               	movlw	144
  1181  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  1182  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  1183  06F4  0098               	movwf	24	;volatile
  1184  06F5                     l254:
  1185  06F5  0008               	return
  1186  06F6                     __end_of_usart_conf:
  1187                           
  1188                           	psect	text4
  1189  06F6                     __ptext4:	
  1190 ;; *************** function _mostrar_texto *****************
  1191 ;; Defined at:
  1192 ;;		line 128 in file "lab3.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1206 ;;      Params:         0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0
  1209 ;;      Totals:         0       0       0       0       0
  1210 ;;Total ram usage:        0 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    5
  1213 ;; This function calls:
  1214 ;;		_Lcd_Set_Cursor
  1215 ;;		_Lcd_Write_String
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           
  1222                           ;psect for function _mostrar_texto
  1223  06F6                     _mostrar_texto:
  1224  06F6                     l2084:	
  1225                           ;incstack = 0
  1226                           ; Regs used in _mostrar_texto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1227                           
  1228                           
  1229                           ;lab3.c: 129:     Lcd_Set_Cursor(1, 1);
  1230  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1231  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1232  06F8  01A4               	clrf	Lcd_Set_Cursor@b
  1233  06F9  0AA4               	incf	Lcd_Set_Cursor@b,f
  1234  06FA  3001               	movlw	1
  1235  06FB  120A  118A  2678  120A  118A  	fcall	_Lcd_Set_Cursor
  1236  0700                     l2086:
  1237                           
  1238                           ;lab3.c: 131:     Lcd_Write_String("S1:   S2:   S3: ");
  1239  0700  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1240  0701  120A  118A  264F  120A  118A  	fcall	_Lcd_Write_String
  1241  0706                     l110:
  1242  0706  0008               	return
  1243  0707                     __end_of_mostrar_texto:
  1244                           
  1245                           	psect	text5
  1246  0027                     __ptext5:	
  1247 ;; *************** function _mostrar_datos *****************
  1248 ;; Defined at:
  1249 ;;		line 134 in file "lab3.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1263 ;;      Params:         0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0
  1265 ;;      Temps:          0       3       0       0       0
  1266 ;;      Totals:         0       3       0       0       0
  1267 ;;Total ram usage:        3 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    5
  1270 ;; This function calls:
  1271 ;;		_Lcd_Set_Cursor
  1272 ;;		_Lcd_Write_Char
  1273 ;;		_Lcd_Write_String
  1274 ;;		_num_ascii
  1275 ;;		_numero
  1276 ;;		_usart_T_nl
  1277 ;;		_usart_T_virt
  1278 ;;		_voltaje
  1279 ;; This function is called by:
  1280 ;;		_main
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _mostrar_datos
  1286  0027                     _mostrar_datos:
  1287  0027                     l2088:	
  1288                           ;incstack = 0
  1289                           ; Regs used in _mostrar_datos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1290                           
  1291                           
  1292                           ;lab3.c: 138:     Lcd_Set_Cursor(2, 1);
  1293  0027  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0028  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0029  01A4               	clrf	Lcd_Set_Cursor@b
  1296  002A  0AA4               	incf	Lcd_Set_Cursor@b,f
  1297  002B  3002               	movlw	2
  1298  002C  120A  118A  2678  120A  118A  	fcall	_Lcd_Set_Cursor
  1299  0031                     l2090:
  1300                           
  1301                           ;lab3.c: 141:     vol_u = 0;
  1302  0031  1283               	bcf	3,5	;RP0=0, select bank0
  1303  0032  1303               	bcf	3,6	;RP1=0, select bank0
  1304  0033  01B7               	clrf	_vol_u
  1305  0034                     l2092:
  1306                           
  1307                           ;lab3.c: 142:     vol_dec1 = 0;
  1308  0034  01B6               	clrf	_vol_dec1
  1309  0035                     l2094:
  1310                           
  1311                           ;lab3.c: 143:     vol_dec2 = 0;
  1312  0035  01B5               	clrf	_vol_dec2
  1313  0036                     l2096:
  1314                           
  1315                           ;lab3.c: 147:     voltaje(pot1, &vol_u, &vol_dec1, &vol_dec2);
  1316  0036  3037               	movlw	(low (_vol_u| 0))& (0+255)
  1317  0037  00A8               	movwf	??_mostrar_datos
  1318  0038  0828               	movf	??_mostrar_datos,w
  1319  0039  00A0               	movwf	voltaje@volt_u
  1320  003A  3036               	movlw	(low (_vol_dec1| 0))& (0+255)
  1321  003B  00A9               	movwf	??_mostrar_datos+1
  1322  003C  0829               	movf	??_mostrar_datos+1,w
  1323  003D  00A1               	movwf	voltaje@volt_d1
  1324  003E  3035               	movlw	(low (_vol_dec2| 0))& (0+255)
  1325  003F  00AA               	movwf	??_mostrar_datos+2
  1326  0040  082A               	movf	??_mostrar_datos+2,w
  1327  0041  00A2               	movwf	voltaje@volt_d2
  1328  0042  0830               	movf	_pot1,w
  1329  0043  120A  118A  2550  120A  118A  	fcall	_voltaje
  1330  0048                     l2098:
  1331                           
  1332                           ;lab3.c: 149:     num_ascii(vol_u, &data_t);
  1333  0048  3031               	movlw	(low (_data_t| 0))& (0+255)
  1334  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1335  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1336  004B  00A8               	movwf	??_mostrar_datos
  1337  004C  0828               	movf	??_mostrar_datos,w
  1338  004D  00A0               	movwf	num_ascii@code
  1339  004E  0837               	movf	_vol_u,w
  1340  004F  120A  118A  2378  120A  118A  	fcall	_num_ascii
  1341  0054                     l2100:
  1342                           
  1343                           ;lab3.c: 150:     Lcd_Write_Char(data_t);
  1344  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1346  0056  0831               	movf	_data_t,w
  1347  0057  120A  118A  26BA  120A  118A  	fcall	_Lcd_Write_Char
  1348  005C                     l2102:
  1349                           
  1350                           ;lab3.c: 151:     usart_T_virt(data_t);
  1351  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1352  005D  1303               	bcf	3,6	;RP1=0, select bank0
  1353  005E  0831               	movf	_data_t,w
  1354  005F  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1355  0064                     l2104:
  1356                           
  1357                           ;lab3.c: 152:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1358  0064  3003               	movlw	3
  1359  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1361  0067  00A9               	movwf	??_mostrar_datos+1
  1362  0068  3097               	movlw	151
  1363  0069  00A8               	movwf	??_mostrar_datos
  1364  006A                     u907:
  1365  006A  0BA8               	decfsz	??_mostrar_datos,f
  1366  006B  286A               	goto	u907
  1367  006C  0BA9               	decfsz	??_mostrar_datos+1,f
  1368  006D  286A               	goto	u907
  1369  006E                     l2106:
  1370                           
  1371                           ;lab3.c: 154:     Lcd_Write_Char(46);
  1372  006E  302E               	movlw	46
  1373  006F  120A  118A  26BA  120A  118A  	fcall	_Lcd_Write_Char
  1374  0074                     l2108:
  1375                           
  1376                           ;lab3.c: 155:     usart_T_virt(46);
  1377  0074  302E               	movlw	46
  1378  0075  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1379  007A                     l2110:
  1380                           
  1381                           ;lab3.c: 156:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1382  007A  3003               	movlw	3
  1383  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1384  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1385  007D  00A9               	movwf	??_mostrar_datos+1
  1386  007E  3097               	movlw	151
  1387  007F  00A8               	movwf	??_mostrar_datos
  1388  0080                     u917:
  1389  0080  0BA8               	decfsz	??_mostrar_datos,f
  1390  0081  2880               	goto	u917
  1391  0082  0BA9               	decfsz	??_mostrar_datos+1,f
  1392  0083  2880               	goto	u917
  1393  0084                     l2112:
  1394                           
  1395                           ;lab3.c: 158:     num_ascii(vol_dec1, &data_t);
  1396  0084  3031               	movlw	(low (_data_t| 0))& (0+255)
  1397  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1398  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1399  0087  00A8               	movwf	??_mostrar_datos
  1400  0088  0828               	movf	??_mostrar_datos,w
  1401  0089  00A0               	movwf	num_ascii@code
  1402  008A  0836               	movf	_vol_dec1,w
  1403  008B  120A  118A  2378  120A  118A  	fcall	_num_ascii
  1404  0090                     l2114:
  1405                           
  1406                           ;lab3.c: 159:     Lcd_Write_Char(data_t);
  1407  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0092  0831               	movf	_data_t,w
  1410  0093  120A  118A  26BA  120A  118A  	fcall	_Lcd_Write_Char
  1411  0098                     l2116:
  1412                           
  1413                           ;lab3.c: 160:     usart_T_virt(data_t);
  1414  0098  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0099  1303               	bcf	3,6	;RP1=0, select bank0
  1416  009A  0831               	movf	_data_t,w
  1417  009B  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1418  00A0                     l2118:
  1419                           
  1420                           ;lab3.c: 161:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1421  00A0  3003               	movlw	3
  1422  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1423  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1424  00A3  00A9               	movwf	??_mostrar_datos+1
  1425  00A4  3097               	movlw	151
  1426  00A5  00A8               	movwf	??_mostrar_datos
  1427  00A6                     u927:
  1428  00A6  0BA8               	decfsz	??_mostrar_datos,f
  1429  00A7  28A6               	goto	u927
  1430  00A8  0BA9               	decfsz	??_mostrar_datos+1,f
  1431  00A9  28A6               	goto	u927
  1432  00AA                     l2120:
  1433                           
  1434                           ;lab3.c: 163:     num_ascii(vol_dec2, &data_t);
  1435  00AA  3031               	movlw	(low (_data_t| 0))& (0+255)
  1436  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1437  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1438  00AD  00A8               	movwf	??_mostrar_datos
  1439  00AE  0828               	movf	??_mostrar_datos,w
  1440  00AF  00A0               	movwf	num_ascii@code
  1441  00B0  0835               	movf	_vol_dec2,w
  1442  00B1  120A  118A  2378  120A  118A  	fcall	_num_ascii
  1443  00B6                     l2122:
  1444                           
  1445                           ;lab3.c: 164:     Lcd_Write_Char(data_t);
  1446  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1447  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1448  00B8  0831               	movf	_data_t,w
  1449  00B9  120A  118A  26BA  120A  118A  	fcall	_Lcd_Write_Char
  1450  00BE                     l2124:
  1451                           
  1452                           ;lab3.c: 165:     usart_T_virt(data_t);
  1453  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1454  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1455  00C0  0831               	movf	_data_t,w
  1456  00C1  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1457  00C6                     l2126:
  1458                           
  1459                           ;lab3.c: 166:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1460  00C6  3003               	movlw	3
  1461  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1462  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1463  00C9  00A9               	movwf	??_mostrar_datos+1
  1464  00CA  3097               	movlw	151
  1465  00CB  00A8               	movwf	??_mostrar_datos
  1466  00CC                     u937:
  1467  00CC  0BA8               	decfsz	??_mostrar_datos,f
  1468  00CD  28CC               	goto	u937
  1469  00CE  0BA9               	decfsz	??_mostrar_datos+1,f
  1470  00CF  28CC               	goto	u937
  1471  00D0                     l2128:
  1472                           
  1473                           ;lab3.c: 168:     Lcd_Write_String("V ");
  1474  00D0  305D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1475  00D1  120A  118A  264F  120A  118A  	fcall	_Lcd_Write_String
  1476  00D6                     l2130:
  1477                           
  1478                           ;lab3.c: 169:     usart_T_virt(86);
  1479  00D6  3056               	movlw	86
  1480  00D7  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1481  00DC                     l2132:
  1482                           
  1483                           ;lab3.c: 170:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1484  00DC  3003               	movlw	3
  1485  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1486  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1487  00DF  00A9               	movwf	??_mostrar_datos+1
  1488  00E0  3097               	movlw	151
  1489  00E1  00A8               	movwf	??_mostrar_datos
  1490  00E2                     u947:
  1491  00E2  0BA8               	decfsz	??_mostrar_datos,f
  1492  00E3  28E2               	goto	u947
  1493  00E4  0BA9               	decfsz	??_mostrar_datos+1,f
  1494  00E5  28E2               	goto	u947
  1495  00E6                     l2134:
  1496                           
  1497                           ;lab3.c: 171:     usart_T_virt(32);
  1498  00E6  3020               	movlw	32
  1499  00E7  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1500  00EC                     l2136:
  1501                           
  1502                           ;lab3.c: 172:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1503  00EC  3003               	movlw	3
  1504  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1505  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1506  00EF  00A9               	movwf	??_mostrar_datos+1
  1507  00F0  3097               	movlw	151
  1508  00F1  00A8               	movwf	??_mostrar_datos
  1509  00F2                     u957:
  1510  00F2  0BA8               	decfsz	??_mostrar_datos,f
  1511  00F3  28F2               	goto	u957
  1512  00F4  0BA9               	decfsz	??_mostrar_datos+1,f
  1513  00F5  28F2               	goto	u957
  1514  00F6                     l2138:
  1515                           
  1516                           ;lab3.c: 176:     voltaje(pot2, &vol_u, &vol_dec1, &vol_dec2);
  1517  00F6  3037               	movlw	(low (_vol_u| 0))& (0+255)
  1518  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1519  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1520  00F9  00A8               	movwf	??_mostrar_datos
  1521  00FA  0828               	movf	??_mostrar_datos,w
  1522  00FB  00A0               	movwf	voltaje@volt_u
  1523  00FC  3036               	movlw	(low (_vol_dec1| 0))& (0+255)
  1524  00FD  00A9               	movwf	??_mostrar_datos+1
  1525  00FE  0829               	movf	??_mostrar_datos+1,w
  1526  00FF  00A1               	movwf	voltaje@volt_d1
  1527  0100  3035               	movlw	(low (_vol_dec2| 0))& (0+255)
  1528  0101  00AA               	movwf	??_mostrar_datos+2
  1529  0102  082A               	movf	??_mostrar_datos+2,w
  1530  0103  00A2               	movwf	voltaje@volt_d2
  1531  0104  082F               	movf	_pot2,w
  1532  0105  120A  118A  2550  120A  118A  	fcall	_voltaje
  1533  010A                     l2140:
  1534                           
  1535                           ;lab3.c: 178:     num_ascii(vol_u, &data_t);
  1536  010A  3031               	movlw	(low (_data_t| 0))& (0+255)
  1537  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1538  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1539  010D  00A8               	movwf	??_mostrar_datos
  1540  010E  0828               	movf	??_mostrar_datos,w
  1541  010F  00A0               	movwf	num_ascii@code
  1542  0110  0837               	movf	_vol_u,w
  1543  0111  120A  118A  2378  120A  118A  	fcall	_num_ascii
  1544  0116                     l2142:
  1545                           
  1546                           ;lab3.c: 179:     Lcd_Write_Char(data_t);
  1547  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0118  0831               	movf	_data_t,w
  1550  0119  120A  118A  26BA  120A  118A  	fcall	_Lcd_Write_Char
  1551  011E                     l2144:
  1552                           
  1553                           ;lab3.c: 180:     usart_T_virt(data_t);
  1554  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1555  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0120  0831               	movf	_data_t,w
  1557  0121  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1558  0126                     l2146:
  1559                           
  1560                           ;lab3.c: 181:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1561  0126  3003               	movlw	3
  1562  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0129  00A9               	movwf	??_mostrar_datos+1
  1565  012A  3097               	movlw	151
  1566  012B  00A8               	movwf	??_mostrar_datos
  1567  012C                     u967:
  1568  012C  0BA8               	decfsz	??_mostrar_datos,f
  1569  012D  292C               	goto	u967
  1570  012E  0BA9               	decfsz	??_mostrar_datos+1,f
  1571  012F  292C               	goto	u967
  1572  0130                     l2148:
  1573                           
  1574                           ;lab3.c: 183:     Lcd_Write_Char(46);
  1575  0130  302E               	movlw	46
  1576  0131  120A  118A  26BA  120A  118A  	fcall	_Lcd_Write_Char
  1577  0136                     l2150:
  1578                           
  1579                           ;lab3.c: 184:     usart_T_virt(46);
  1580  0136  302E               	movlw	46
  1581  0137  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1582  013C                     l2152:
  1583                           
  1584                           ;lab3.c: 185:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1585  013C  3003               	movlw	3
  1586  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1587  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1588  013F  00A9               	movwf	??_mostrar_datos+1
  1589  0140  3097               	movlw	151
  1590  0141  00A8               	movwf	??_mostrar_datos
  1591  0142                     u977:
  1592  0142  0BA8               	decfsz	??_mostrar_datos,f
  1593  0143  2942               	goto	u977
  1594  0144  0BA9               	decfsz	??_mostrar_datos+1,f
  1595  0145  2942               	goto	u977
  1596  0146                     l2154:
  1597                           
  1598                           ;lab3.c: 187:     num_ascii(vol_dec1, &data_t);
  1599  0146  3031               	movlw	(low (_data_t| 0))& (0+255)
  1600  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1602  0149  00A8               	movwf	??_mostrar_datos
  1603  014A  0828               	movf	??_mostrar_datos,w
  1604  014B  00A0               	movwf	num_ascii@code
  1605  014C  0836               	movf	_vol_dec1,w
  1606  014D  120A  118A  2378  120A  118A  	fcall	_num_ascii
  1607  0152                     l2156:
  1608                           
  1609                           ;lab3.c: 188:     Lcd_Write_Char(data_t);
  1610  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0154  0831               	movf	_data_t,w
  1613  0155  120A  118A  26BA  120A  118A  	fcall	_Lcd_Write_Char
  1614  015A                     l2158:
  1615                           
  1616                           ;lab3.c: 189:     usart_T_virt(data_t);
  1617  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1618  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1619  015C  0831               	movf	_data_t,w
  1620  015D  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1621  0162                     l2160:
  1622                           
  1623                           ;lab3.c: 190:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1624  0162  3003               	movlw	3
  1625  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1626  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1627  0165  00A9               	movwf	??_mostrar_datos+1
  1628  0166  3097               	movlw	151
  1629  0167  00A8               	movwf	??_mostrar_datos
  1630  0168                     u987:
  1631  0168  0BA8               	decfsz	??_mostrar_datos,f
  1632  0169  2968               	goto	u987
  1633  016A  0BA9               	decfsz	??_mostrar_datos+1,f
  1634  016B  2968               	goto	u987
  1635  016C                     l2162:
  1636                           
  1637                           ;lab3.c: 191:     num_ascii(vol_dec2, &data_t);
  1638  016C  3031               	movlw	(low (_data_t| 0))& (0+255)
  1639  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1640  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1641  016F  00A8               	movwf	??_mostrar_datos
  1642  0170  0828               	movf	??_mostrar_datos,w
  1643  0171  00A0               	movwf	num_ascii@code
  1644  0172  0835               	movf	_vol_dec2,w
  1645  0173  120A  118A  2378  120A  118A  	fcall	_num_ascii
  1646  0178                     l2164:
  1647                           
  1648                           ;lab3.c: 192:     Lcd_Write_Char(data_t);
  1649  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1650  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1651  017A  0831               	movf	_data_t,w
  1652  017B  120A  118A  26BA  120A  118A  	fcall	_Lcd_Write_Char
  1653  0180                     l2166:
  1654                           
  1655                           ;lab3.c: 193:     usart_T_virt(data_t);
  1656  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1657  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1658  0182  0831               	movf	_data_t,w
  1659  0183  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1660  0188                     l2168:
  1661                           
  1662                           ;lab3.c: 194:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1663  0188  3003               	movlw	3
  1664  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1665  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1666  018B  00A9               	movwf	??_mostrar_datos+1
  1667  018C  3097               	movlw	151
  1668  018D  00A8               	movwf	??_mostrar_datos
  1669  018E                     u997:
  1670  018E  0BA8               	decfsz	??_mostrar_datos,f
  1671  018F  298E               	goto	u997
  1672  0190  0BA9               	decfsz	??_mostrar_datos+1,f
  1673  0191  298E               	goto	u997
  1674  0192                     l2170:
  1675                           
  1676                           ;lab3.c: 196:     Lcd_Write_String("V  ");
  1677  0192  3059               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1678  0193  120A  118A  264F  120A  118A  	fcall	_Lcd_Write_String
  1679  0198                     l2172:
  1680                           
  1681                           ;lab3.c: 197:     usart_T_virt(86);
  1682  0198  3056               	movlw	86
  1683  0199  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1684  019E                     l2174:
  1685                           
  1686                           ;lab3.c: 198:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1687  019E  3003               	movlw	3
  1688  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1689  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1690  01A1  00A9               	movwf	??_mostrar_datos+1
  1691  01A2  3097               	movlw	151
  1692  01A3  00A8               	movwf	??_mostrar_datos
  1693  01A4                     u1007:
  1694  01A4  0BA8               	decfsz	??_mostrar_datos,f
  1695  01A5  29A4               	goto	u1007
  1696  01A6  0BA9               	decfsz	??_mostrar_datos+1,f
  1697  01A7  29A4               	goto	u1007
  1698  01A8                     l2176:
  1699                           
  1700                           ;lab3.c: 199:     usart_T_virt(32);
  1701  01A8  3020               	movlw	32
  1702  01A9  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1703  01AE                     l2178:
  1704                           
  1705                           ;lab3.c: 200:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1706  01AE  3003               	movlw	3
  1707  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1708  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1709  01B1  00A9               	movwf	??_mostrar_datos+1
  1710  01B2  3097               	movlw	151
  1711  01B3  00A8               	movwf	??_mostrar_datos
  1712  01B4                     u1017:
  1713  01B4  0BA8               	decfsz	??_mostrar_datos,f
  1714  01B5  29B4               	goto	u1017
  1715  01B6  0BA9               	decfsz	??_mostrar_datos+1,f
  1716  01B7  29B4               	goto	u1017
  1717  01B8                     l2180:
  1718                           
  1719                           ;lab3.c: 201:     usart_T_virt(32);
  1720  01B8  3020               	movlw	32
  1721  01B9  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1722  01BE                     l2182:
  1723                           
  1724                           ;lab3.c: 202:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1725  01BE  3003               	movlw	3
  1726  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1727  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1728  01C1  00A9               	movwf	??_mostrar_datos+1
  1729  01C2  3097               	movlw	151
  1730  01C3  00A8               	movwf	??_mostrar_datos
  1731  01C4                     u1027:
  1732  01C4  0BA8               	decfsz	??_mostrar_datos,f
  1733  01C5  29C4               	goto	u1027
  1734  01C6  0BA9               	decfsz	??_mostrar_datos+1,f
  1735  01C7  29C4               	goto	u1027
  1736  01C8                     l2184:
  1737                           
  1738                           ;lab3.c: 206:     numero(cont, &cont_cent, &cont_dec, &cont_uni);
  1739  01C8  3034               	movlw	(low (_cont_cent| 0))& (0+255)
  1740  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1741  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1742  01CB  00A8               	movwf	??_mostrar_datos
  1743  01CC  0828               	movf	??_mostrar_datos,w
  1744  01CD  00A0               	movwf	numero@cent
  1745  01CE  3033               	movlw	(low (_cont_dec| 0))& (0+255)
  1746  01CF  00A9               	movwf	??_mostrar_datos+1
  1747  01D0  0829               	movf	??_mostrar_datos+1,w
  1748  01D1  00A1               	movwf	numero@dec
  1749  01D2  3032               	movlw	(low (_cont_uni| 0))& (0+255)
  1750  01D3  00AA               	movwf	??_mostrar_datos+2
  1751  01D4  082A               	movf	??_mostrar_datos+2,w
  1752  01D5  00A2               	movwf	numero@uni
  1753  01D6  082E               	movf	_cont,w
  1754  01D7  120A  118A  2598  120A  118A  	fcall	_numero
  1755  01DC                     l2186:
  1756                           
  1757                           ;lab3.c: 208:     num_ascii(cont_cent, &data_t);
  1758  01DC  3031               	movlw	(low (_data_t| 0))& (0+255)
  1759  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1760  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1761  01DF  00A8               	movwf	??_mostrar_datos
  1762  01E0  0828               	movf	??_mostrar_datos,w
  1763  01E1  00A0               	movwf	num_ascii@code
  1764  01E2  0834               	movf	_cont_cent,w
  1765  01E3  120A  118A  2378  120A  118A  	fcall	_num_ascii
  1766  01E8                     l2188:
  1767                           
  1768                           ;lab3.c: 209:     Lcd_Write_Char(data_t);
  1769  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1770  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1771  01EA  0831               	movf	_data_t,w
  1772  01EB  120A  118A  26BA  120A  118A  	fcall	_Lcd_Write_Char
  1773  01F0                     l2190:
  1774                           
  1775                           ;lab3.c: 210:     usart_T_virt(data_t);
  1776  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1777  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1778  01F2  0831               	movf	_data_t,w
  1779  01F3  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1780  01F8                     l2192:
  1781                           
  1782                           ;lab3.c: 211:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1783  01F8  3003               	movlw	3
  1784  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1785  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1786  01FB  00A9               	movwf	??_mostrar_datos+1
  1787  01FC  3097               	movlw	151
  1788  01FD  00A8               	movwf	??_mostrar_datos
  1789  01FE                     u1037:
  1790  01FE  0BA8               	decfsz	??_mostrar_datos,f
  1791  01FF  29FE               	goto	u1037
  1792  0200  0BA9               	decfsz	??_mostrar_datos+1,f
  1793  0201  29FE               	goto	u1037
  1794  0202                     l2194:
  1795                           
  1796                           ;lab3.c: 212:     num_ascii(cont_dec, &data_t);
  1797  0202  3031               	movlw	(low (_data_t| 0))& (0+255)
  1798  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0205  00A8               	movwf	??_mostrar_datos
  1801  0206  0828               	movf	??_mostrar_datos,w
  1802  0207  00A0               	movwf	num_ascii@code
  1803  0208  0833               	movf	_cont_dec,w
  1804  0209  120A  118A  2378  120A  118A  	fcall	_num_ascii
  1805  020E                     l2196:
  1806                           
  1807                           ;lab3.c: 213:     Lcd_Write_Char(data_t);
  1808  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1809  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1810  0210  0831               	movf	_data_t,w
  1811  0211  120A  118A  26BA  120A  118A  	fcall	_Lcd_Write_Char
  1812  0216                     l2198:
  1813                           
  1814                           ;lab3.c: 214:     usart_T_virt(data_t);
  1815  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1816  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1817  0218  0831               	movf	_data_t,w
  1818  0219  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1819  021E                     l2200:
  1820                           
  1821                           ;lab3.c: 215:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1822  021E  3003               	movlw	3
  1823  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0221  00A9               	movwf	??_mostrar_datos+1
  1826  0222  3097               	movlw	151
  1827  0223  00A8               	movwf	??_mostrar_datos
  1828  0224                     u1047:
  1829  0224  0BA8               	decfsz	??_mostrar_datos,f
  1830  0225  2A24               	goto	u1047
  1831  0226  0BA9               	decfsz	??_mostrar_datos+1,f
  1832  0227  2A24               	goto	u1047
  1833  0228                     l2202:
  1834                           
  1835                           ;lab3.c: 216:     num_ascii(cont_uni, &data_t);
  1836  0228  3031               	movlw	(low (_data_t| 0))& (0+255)
  1837  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1838  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1839  022B  00A8               	movwf	??_mostrar_datos
  1840  022C  0828               	movf	??_mostrar_datos,w
  1841  022D  00A0               	movwf	num_ascii@code
  1842  022E  0832               	movf	_cont_uni,w
  1843  022F  120A  118A  2378  120A  118A  	fcall	_num_ascii
  1844  0234                     l2204:
  1845                           
  1846                           ;lab3.c: 217:     Lcd_Write_Char(data_t);
  1847  0234  1283               	bcf	3,5	;RP0=0, select bank0
  1848  0235  1303               	bcf	3,6	;RP1=0, select bank0
  1849  0236  0831               	movf	_data_t,w
  1850  0237  120A  118A  26BA  120A  118A  	fcall	_Lcd_Write_Char
  1851  023C                     l2206:
  1852                           
  1853                           ;lab3.c: 218:     usart_T_virt(data_t);
  1854  023C  1283               	bcf	3,5	;RP0=0, select bank0
  1855  023D  1303               	bcf	3,6	;RP1=0, select bank0
  1856  023E  0831               	movf	_data_t,w
  1857  023F  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  1858  0244                     l2208:
  1859                           
  1860                           ;lab3.c: 219:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1861  0244  3003               	movlw	3
  1862  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1863  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1864  0247  00A9               	movwf	??_mostrar_datos+1
  1865  0248  3097               	movlw	151
  1866  0249  00A8               	movwf	??_mostrar_datos
  1867  024A                     u1057:
  1868  024A  0BA8               	decfsz	??_mostrar_datos,f
  1869  024B  2A4A               	goto	u1057
  1870  024C  0BA9               	decfsz	??_mostrar_datos+1,f
  1871  024D  2A4A               	goto	u1057
  1872  024E                     l2210:
  1873                           
  1874                           ;lab3.c: 220:     usart_T_nl();
  1875  024E  120A  118A  272E  120A  118A  	fcall	_usart_T_nl
  1876  0253                     l2212:
  1877                           
  1878                           ;lab3.c: 221:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1879  0253  3003               	movlw	3
  1880  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1881  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1882  0256  00A9               	movwf	??_mostrar_datos+1
  1883  0257  3097               	movlw	151
  1884  0258  00A8               	movwf	??_mostrar_datos
  1885  0259                     u1067:
  1886  0259  0BA8               	decfsz	??_mostrar_datos,f
  1887  025A  2A59               	goto	u1067
  1888  025B  0BA9               	decfsz	??_mostrar_datos+1,f
  1889  025C  2A59               	goto	u1067
  1890  025D                     l113:
  1891  025D  0008               	return
  1892  025E                     __end_of_mostrar_datos:
  1893                           
  1894                           	psect	text6
  1895  0550                     __ptext6:	
  1896 ;; *************** function _voltaje *****************
  1897 ;; Defined at:
  1898 ;;		line 225 in file "lab3.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  data_in         1    wreg     unsigned char 
  1901 ;;  volt_u          1    0[BANK0 ] PTR unsigned char 
  1902 ;;		 -> vol_u(1), 
  1903 ;;  volt_d1         1    1[BANK0 ] PTR unsigned char 
  1904 ;;		 -> vol_dec1(1), 
  1905 ;;  volt_d2         1    2[BANK0 ] PTR unsigned char 
  1906 ;;		 -> vol_dec2(1), 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;  data_in         1    4[BANK0 ] unsigned char 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1918 ;;      Params:         0       3       0       0       0
  1919 ;;      Locals:         0       1       0       0       0
  1920 ;;      Temps:          0       1       0       0       0
  1921 ;;      Totals:         0       5       0       0       0
  1922 ;;Total ram usage:        5 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:    2
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_mostrar_datos
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           
  1933                           ;psect for function _voltaje
  1934  0550                     _voltaje:
  1935                           
  1936                           ;incstack = 0
  1937                           ; Regs used in _voltaje: [wreg-fsr0h+status,2+status,0]
  1938                           ;voltaje@data_in stored from wreg
  1939  0550  1283               	bcf	3,5	;RP0=0, select bank0
  1940  0551  1303               	bcf	3,6	;RP1=0, select bank0
  1941  0552  00A4               	movwf	voltaje@data_in
  1942  0553                     l1916:
  1943                           
  1944                           ;lab3.c: 231:     while (data_in > 49) {
  1945  0553  2D5D               	goto	l1920
  1946  0554                     l1918:
  1947                           
  1948                           ;lab3.c: 232:         data_in = data_in - 50;
  1949  0554  0824               	movf	voltaje@data_in,w
  1950  0555  3ECE               	addlw	206
  1951  0556  00A3               	movwf	??_voltaje
  1952  0557  0823               	movf	??_voltaje,w
  1953  0558  00A4               	movwf	voltaje@data_in
  1954                           
  1955                           ;lab3.c: 233:         temp++;
  1956  0559  3001               	movlw	1
  1957  055A  00A3               	movwf	??_voltaje
  1958  055B  0823               	movf	??_voltaje,w
  1959  055C  07AD               	addwf	_temp,f
  1960  055D                     l1920:
  1961                           
  1962                           ;lab3.c: 231:     while (data_in > 49) {
  1963  055D  3032               	movlw	50
  1964  055E  0224               	subwf	voltaje@data_in,w
  1965  055F  1803               	skipnc
  1966  0560  2D62               	goto	u761
  1967  0561  2D63               	goto	u760
  1968  0562                     u761:
  1969  0562  2D54               	goto	l1918
  1970  0563                     u760:
  1971  0563                     l1922:
  1972                           
  1973                           ;lab3.c: 235:     *volt_u = temp;
  1974  0563  082D               	movf	_temp,w
  1975  0564  00A3               	movwf	??_voltaje
  1976  0565  0820               	movf	voltaje@volt_u,w
  1977  0566  0084               	movwf	4
  1978  0567  0823               	movf	??_voltaje,w
  1979  0568  1383               	bcf	3,7	;select IRP bank0
  1980  0569  0080               	movwf	0
  1981  056A                     l1924:
  1982                           
  1983                           ;lab3.c: 236:     temp = 0;
  1984  056A  01AD               	clrf	_temp
  1985                           
  1986                           ;lab3.c: 238:     while (data_in > 9) {
  1987  056B  2D75               	goto	l1928
  1988  056C                     l1926:
  1989                           
  1990                           ;lab3.c: 239:         data_in = data_in - 10;
  1991  056C  0824               	movf	voltaje@data_in,w
  1992  056D  3EF6               	addlw	246
  1993  056E  00A3               	movwf	??_voltaje
  1994  056F  0823               	movf	??_voltaje,w
  1995  0570  00A4               	movwf	voltaje@data_in
  1996                           
  1997                           ;lab3.c: 240:         temp++;
  1998  0571  3001               	movlw	1
  1999  0572  00A3               	movwf	??_voltaje
  2000  0573  0823               	movf	??_voltaje,w
  2001  0574  07AD               	addwf	_temp,f
  2002  0575                     l1928:
  2003                           
  2004                           ;lab3.c: 238:     while (data_in > 9) {
  2005  0575  300A               	movlw	10
  2006  0576  0224               	subwf	voltaje@data_in,w
  2007  0577  1803               	skipnc
  2008  0578  2D7A               	goto	u771
  2009  0579  2D7B               	goto	u770
  2010  057A                     u771:
  2011  057A  2D6C               	goto	l1926
  2012  057B                     u770:
  2013  057B                     l1930:
  2014                           
  2015                           ;lab3.c: 242:     *volt_d1 = temp;
  2016  057B  082D               	movf	_temp,w
  2017  057C  00A3               	movwf	??_voltaje
  2018  057D  0821               	movf	voltaje@volt_d1,w
  2019  057E  0084               	movwf	4
  2020  057F  0823               	movf	??_voltaje,w
  2021  0580  1383               	bcf	3,7	;select IRP bank0
  2022  0581  0080               	movwf	0
  2023  0582                     l1932:
  2024                           
  2025                           ;lab3.c: 243:     temp = 0;
  2026  0582  01AD               	clrf	_temp
  2027                           
  2028                           ;lab3.c: 244:     while (data_in > 0) {
  2029  0583  2D8A               	goto	l122
  2030  0584                     l1934:
  2031                           
  2032                           ;lab3.c: 245:         data_in--;
  2033  0584  3001               	movlw	1
  2034  0585  02A4               	subwf	voltaje@data_in,f
  2035                           
  2036                           ;lab3.c: 246:         temp++;
  2037  0586  3001               	movlw	1
  2038  0587  00A3               	movwf	??_voltaje
  2039  0588  0823               	movf	??_voltaje,w
  2040  0589  07AD               	addwf	_temp,f
  2041  058A                     l122:	
  2042                           ;lab3.c: 247:     }
  2043                           
  2044                           
  2045                           ;lab3.c: 244:     while (data_in > 0) {
  2046  058A  0824               	movf	voltaje@data_in,w
  2047  058B  1D03               	btfss	3,2
  2048  058C  2D8E               	goto	u781
  2049  058D  2D8F               	goto	u780
  2050  058E                     u781:
  2051  058E  2D84               	goto	l1934
  2052  058F                     u780:
  2053  058F                     l1936:
  2054                           
  2055                           ;lab3.c: 248:     *volt_d2 = temp;
  2056  058F  082D               	movf	_temp,w
  2057  0590  00A3               	movwf	??_voltaje
  2058  0591  0822               	movf	voltaje@volt_d2,w
  2059  0592  0084               	movwf	4
  2060  0593  0823               	movf	??_voltaje,w
  2061  0594  1383               	bcf	3,7	;select IRP bank0
  2062  0595  0080               	movwf	0
  2063  0596                     l1938:
  2064                           
  2065                           ;lab3.c: 249:     temp = 0;
  2066  0596  01AD               	clrf	_temp
  2067  0597                     l125:
  2068  0597  0008               	return
  2069  0598                     __end_of_voltaje:
  2070                           
  2071                           	psect	text7
  2072  0598                     __ptext7:	
  2073 ;; *************** function _numero *****************
  2074 ;; Defined at:
  2075 ;;		line 252 in file "lab3.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  data_in         1    wreg     unsigned char 
  2078 ;;  cent            1    0[BANK0 ] PTR unsigned char 
  2079 ;;		 -> cont_cent(1), 
  2080 ;;  dec             1    1[BANK0 ] PTR unsigned char 
  2081 ;;		 -> cont_dec(1), 
  2082 ;;  uni             1    2[BANK0 ] PTR unsigned char 
  2083 ;;		 -> cont_uni(1), 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  data_in         1    4[BANK0 ] unsigned char 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2095 ;;      Params:         0       3       0       0       0
  2096 ;;      Locals:         0       1       0       0       0
  2097 ;;      Temps:          0       1       0       0       0
  2098 ;;      Totals:         0       5       0       0       0
  2099 ;;Total ram usage:        5 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    2
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_mostrar_datos
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function _numero
  2111  0598                     _numero:
  2112                           
  2113                           ;incstack = 0
  2114                           ; Regs used in _numero: [wreg-fsr0h+status,2+status,0]
  2115                           ;numero@data_in stored from wreg
  2116  0598  1283               	bcf	3,5	;RP0=0, select bank0
  2117  0599  1303               	bcf	3,6	;RP1=0, select bank0
  2118  059A  00A4               	movwf	numero@data_in
  2119  059B                     l1978:
  2120                           
  2121                           ;lab3.c: 253:     while (data_in > 99) {
  2122  059B  2DA5               	goto	l1982
  2123  059C                     l1980:
  2124                           
  2125                           ;lab3.c: 254:         data_in = data_in - 100;
  2126  059C  0824               	movf	numero@data_in,w
  2127  059D  3E9C               	addlw	156
  2128  059E  00A3               	movwf	??_numero
  2129  059F  0823               	movf	??_numero,w
  2130  05A0  00A4               	movwf	numero@data_in
  2131                           
  2132                           ;lab3.c: 255:         temp++;
  2133  05A1  3001               	movlw	1
  2134  05A2  00A3               	movwf	??_numero
  2135  05A3  0823               	movf	??_numero,w
  2136  05A4  07AD               	addwf	_temp,f
  2137  05A5                     l1982:
  2138                           
  2139                           ;lab3.c: 253:     while (data_in > 99) {
  2140  05A5  3064               	movlw	100
  2141  05A6  0224               	subwf	numero@data_in,w
  2142  05A7  1803               	skipnc
  2143  05A8  2DAA               	goto	u801
  2144  05A9  2DAB               	goto	u800
  2145  05AA                     u801:
  2146  05AA  2D9C               	goto	l1980
  2147  05AB                     u800:
  2148  05AB                     l1984:
  2149                           
  2150                           ;lab3.c: 257:     *cent = temp;
  2151  05AB  082D               	movf	_temp,w
  2152  05AC  00A3               	movwf	??_numero
  2153  05AD  0820               	movf	numero@cent,w
  2154  05AE  0084               	movwf	4
  2155  05AF  0823               	movf	??_numero,w
  2156  05B0  1383               	bcf	3,7	;select IRP bank0
  2157  05B1  0080               	movwf	0
  2158  05B2                     l1986:
  2159                           
  2160                           ;lab3.c: 258:     temp = 0;
  2161  05B2  01AD               	clrf	_temp
  2162                           
  2163                           ;lab3.c: 259:     while (data_in > 9) {
  2164  05B3  2DBD               	goto	l1990
  2165  05B4                     l1988:
  2166                           
  2167                           ;lab3.c: 260:         data_in = data_in - 10;
  2168  05B4  0824               	movf	numero@data_in,w
  2169  05B5  3EF6               	addlw	246
  2170  05B6  00A3               	movwf	??_numero
  2171  05B7  0823               	movf	??_numero,w
  2172  05B8  00A4               	movwf	numero@data_in
  2173                           
  2174                           ;lab3.c: 261:         temp++;
  2175  05B9  3001               	movlw	1
  2176  05BA  00A3               	movwf	??_numero
  2177  05BB  0823               	movf	??_numero,w
  2178  05BC  07AD               	addwf	_temp,f
  2179  05BD                     l1990:
  2180                           
  2181                           ;lab3.c: 259:     while (data_in > 9) {
  2182  05BD  300A               	movlw	10
  2183  05BE  0224               	subwf	numero@data_in,w
  2184  05BF  1803               	skipnc
  2185  05C0  2DC2               	goto	u811
  2186  05C1  2DC3               	goto	u810
  2187  05C2                     u811:
  2188  05C2  2DB4               	goto	l1988
  2189  05C3                     u810:
  2190  05C3                     l1992:
  2191                           
  2192                           ;lab3.c: 263:     *dec = temp;
  2193  05C3  082D               	movf	_temp,w
  2194  05C4  00A3               	movwf	??_numero
  2195  05C5  0821               	movf	numero@dec,w
  2196  05C6  0084               	movwf	4
  2197  05C7  0823               	movf	??_numero,w
  2198  05C8  1383               	bcf	3,7	;select IRP bank0
  2199  05C9  0080               	movwf	0
  2200  05CA                     l1994:
  2201                           
  2202                           ;lab3.c: 264:     temp = 0;
  2203  05CA  01AD               	clrf	_temp
  2204                           
  2205                           ;lab3.c: 265:     while (data_in > 0) {
  2206  05CB  2DD2               	goto	l134
  2207  05CC                     l1996:
  2208                           
  2209                           ;lab3.c: 266:         data_in--;
  2210  05CC  3001               	movlw	1
  2211  05CD  02A4               	subwf	numero@data_in,f
  2212                           
  2213                           ;lab3.c: 267:         temp++;
  2214  05CE  3001               	movlw	1
  2215  05CF  00A3               	movwf	??_numero
  2216  05D0  0823               	movf	??_numero,w
  2217  05D1  07AD               	addwf	_temp,f
  2218  05D2                     l134:	
  2219                           ;lab3.c: 268:     }
  2220                           
  2221                           
  2222                           ;lab3.c: 265:     while (data_in > 0) {
  2223  05D2  0824               	movf	numero@data_in,w
  2224  05D3  1D03               	btfss	3,2
  2225  05D4  2DD6               	goto	u821
  2226  05D5  2DD7               	goto	u820
  2227  05D6                     u821:
  2228  05D6  2DCC               	goto	l1996
  2229  05D7                     u820:
  2230  05D7                     l1998:
  2231                           
  2232                           ;lab3.c: 269:     *uni = temp;
  2233  05D7  082D               	movf	_temp,w
  2234  05D8  00A3               	movwf	??_numero
  2235  05D9  0822               	movf	numero@uni,w
  2236  05DA  0084               	movwf	4
  2237  05DB  0823               	movf	??_numero,w
  2238  05DC  1383               	bcf	3,7	;select IRP bank0
  2239  05DD  0080               	movwf	0
  2240  05DE                     l2000:
  2241                           
  2242                           ;lab3.c: 270:     temp = 0;
  2243  05DE  01AD               	clrf	_temp
  2244  05DF                     l137:
  2245  05DF  0008               	return
  2246  05E0                     __end_of_numero:
  2247                           
  2248                           	psect	text8
  2249  0378                     __ptext8:	
  2250 ;; *************** function _num_ascii *****************
  2251 ;; Defined at:
  2252 ;;		line 74 in file "USART.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  value           1    wreg     unsigned char 
  2255 ;;  code            1    0[BANK0 ] PTR unsigned char 
  2256 ;;		 -> data_t(1), 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  value           1    3[BANK0 ] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2268 ;;      Params:         0       1       0       0       0
  2269 ;;      Locals:         0       1       0       0       0
  2270 ;;      Temps:          0       2       0       0       0
  2271 ;;      Totals:         0       4       0       0       0
  2272 ;;Total ram usage:        4 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    2
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_mostrar_datos
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           
  2283                           ;psect for function _num_ascii
  2284  0378                     _num_ascii:
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  2288                           ;num_ascii@value stored from wreg
  2289  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2291  037A  00A3               	movwf	num_ascii@value
  2292  037B                     l1940:
  2293                           
  2294                           ;USART.c: 75:     switch (value) {
  2295  037B  2BD4               	goto	l1966
  2296  037C                     l1942:
  2297                           
  2298                           ;USART.c: 77:             *code = 48;
  2299  037C  3030               	movlw	48
  2300  037D  00A1               	movwf	??_num_ascii
  2301  037E  0820               	movf	num_ascii@code,w
  2302  037F  0084               	movwf	4
  2303  0380  0821               	movf	??_num_ascii,w
  2304  0381  1383               	bcf	3,7	;select IRP bank0
  2305  0382  0080               	movwf	0
  2306                           
  2307                           ;USART.c: 78:             break;
  2308  0383  2BFC               	goto	l286
  2309  0384                     l1944:
  2310                           
  2311                           ;USART.c: 80:             *code = 49;
  2312  0384  3031               	movlw	49
  2313  0385  00A1               	movwf	??_num_ascii
  2314  0386  0820               	movf	num_ascii@code,w
  2315  0387  0084               	movwf	4
  2316  0388  0821               	movf	??_num_ascii,w
  2317  0389  1383               	bcf	3,7	;select IRP bank0
  2318  038A  0080               	movwf	0
  2319                           
  2320                           ;USART.c: 81:             break;
  2321  038B  2BFC               	goto	l286
  2322  038C                     l1946:
  2323                           
  2324                           ;USART.c: 83:             *code = 50;
  2325  038C  3032               	movlw	50
  2326  038D  00A1               	movwf	??_num_ascii
  2327  038E  0820               	movf	num_ascii@code,w
  2328  038F  0084               	movwf	4
  2329  0390  0821               	movf	??_num_ascii,w
  2330  0391  1383               	bcf	3,7	;select IRP bank0
  2331  0392  0080               	movwf	0
  2332                           
  2333                           ;USART.c: 84:             break;
  2334  0393  2BFC               	goto	l286
  2335  0394                     l1948:
  2336                           
  2337                           ;USART.c: 86:             *code = 51;
  2338  0394  3033               	movlw	51
  2339  0395  00A1               	movwf	??_num_ascii
  2340  0396  0820               	movf	num_ascii@code,w
  2341  0397  0084               	movwf	4
  2342  0398  0821               	movf	??_num_ascii,w
  2343  0399  1383               	bcf	3,7	;select IRP bank0
  2344  039A  0080               	movwf	0
  2345                           
  2346                           ;USART.c: 87:             break;
  2347  039B  2BFC               	goto	l286
  2348  039C                     l1950:
  2349                           
  2350                           ;USART.c: 89:             *code = 52;
  2351  039C  3034               	movlw	52
  2352  039D  00A1               	movwf	??_num_ascii
  2353  039E  0820               	movf	num_ascii@code,w
  2354  039F  0084               	movwf	4
  2355  03A0  0821               	movf	??_num_ascii,w
  2356  03A1  1383               	bcf	3,7	;select IRP bank0
  2357  03A2  0080               	movwf	0
  2358                           
  2359                           ;USART.c: 90:             break;
  2360  03A3  2BFC               	goto	l286
  2361  03A4                     l1952:
  2362                           
  2363                           ;USART.c: 92:             *code = 53;
  2364  03A4  3035               	movlw	53
  2365  03A5  00A1               	movwf	??_num_ascii
  2366  03A6  0820               	movf	num_ascii@code,w
  2367  03A7  0084               	movwf	4
  2368  03A8  0821               	movf	??_num_ascii,w
  2369  03A9  1383               	bcf	3,7	;select IRP bank0
  2370  03AA  0080               	movwf	0
  2371                           
  2372                           ;USART.c: 93:             break;
  2373  03AB  2BFC               	goto	l286
  2374  03AC                     l1954:
  2375                           
  2376                           ;USART.c: 95:             *code = 54;
  2377  03AC  3036               	movlw	54
  2378  03AD  00A1               	movwf	??_num_ascii
  2379  03AE  0820               	movf	num_ascii@code,w
  2380  03AF  0084               	movwf	4
  2381  03B0  0821               	movf	??_num_ascii,w
  2382  03B1  1383               	bcf	3,7	;select IRP bank0
  2383  03B2  0080               	movwf	0
  2384                           
  2385                           ;USART.c: 96:             break;
  2386  03B3  2BFC               	goto	l286
  2387  03B4                     l1956:
  2388                           
  2389                           ;USART.c: 98:             *code = 55;
  2390  03B4  3037               	movlw	55
  2391  03B5  00A1               	movwf	??_num_ascii
  2392  03B6  0820               	movf	num_ascii@code,w
  2393  03B7  0084               	movwf	4
  2394  03B8  0821               	movf	??_num_ascii,w
  2395  03B9  1383               	bcf	3,7	;select IRP bank0
  2396  03BA  0080               	movwf	0
  2397                           
  2398                           ;USART.c: 99:             break;
  2399  03BB  2BFC               	goto	l286
  2400  03BC                     l1958:
  2401                           
  2402                           ;USART.c: 101:             *code = 56;
  2403  03BC  3038               	movlw	56
  2404  03BD  00A1               	movwf	??_num_ascii
  2405  03BE  0820               	movf	num_ascii@code,w
  2406  03BF  0084               	movwf	4
  2407  03C0  0821               	movf	??_num_ascii,w
  2408  03C1  1383               	bcf	3,7	;select IRP bank0
  2409  03C2  0080               	movwf	0
  2410                           
  2411                           ;USART.c: 102:             break;
  2412  03C3  2BFC               	goto	l286
  2413  03C4                     l1960:
  2414                           
  2415                           ;USART.c: 104:             *code = 57;
  2416  03C4  3039               	movlw	57
  2417  03C5  00A1               	movwf	??_num_ascii
  2418  03C6  0820               	movf	num_ascii@code,w
  2419  03C7  0084               	movwf	4
  2420  03C8  0821               	movf	??_num_ascii,w
  2421  03C9  1383               	bcf	3,7	;select IRP bank0
  2422  03CA  0080               	movwf	0
  2423                           
  2424                           ;USART.c: 105:             break;
  2425  03CB  2BFC               	goto	l286
  2426  03CC                     l1962:
  2427                           
  2428                           ;USART.c: 107:             *code = 63;
  2429  03CC  303F               	movlw	63
  2430  03CD  00A1               	movwf	??_num_ascii
  2431  03CE  0820               	movf	num_ascii@code,w
  2432  03CF  0084               	movwf	4
  2433  03D0  0821               	movf	??_num_ascii,w
  2434  03D1  1383               	bcf	3,7	;select IRP bank0
  2435  03D2  0080               	movwf	0
  2436                           
  2437                           ;USART.c: 108:             break;
  2438  03D3  2BFC               	goto	l286
  2439  03D4                     l1966:
  2440  03D4  0823               	movf	num_ascii@value,w
  2441  03D5  00A1               	movwf	??_num_ascii
  2442  03D6  01A2               	clrf	??_num_ascii+1
  2443                           
  2444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2445                           ; Switch size 1, requested type "simple"
  2446                           ; Number of cases is 1, Range of values is 0 to 0
  2447                           ; switch strategies available:
  2448                           ; Name         Instructions Cycles
  2449                           ; simple_byte            4     3 (average)
  2450                           ; direct_byte           11     8 (fixed)
  2451                           ; jumptable            260     6 (fixed)
  2452                           ;	Chosen strategy is simple_byte
  2453  03D7  0822               	movf	??_num_ascii+1,w
  2454  03D8  3A00               	xorlw	0	; case 0
  2455  03D9  1903               	skipnz
  2456  03DA  2BDC               	goto	l2330
  2457  03DB  2BCC               	goto	l1962
  2458  03DC                     l2330:
  2459                           
  2460                           ; Switch size 1, requested type "simple"
  2461                           ; Number of cases is 10, Range of values is 0 to 9
  2462                           ; switch strategies available:
  2463                           ; Name         Instructions Cycles
  2464                           ; simple_byte           31    16 (average)
  2465                           ; direct_byte           38     8 (fixed)
  2466                           ; jumptable            260     6 (fixed)
  2467                           ;	Chosen strategy is simple_byte
  2468  03DC  0821               	movf	??_num_ascii,w
  2469  03DD  3A00               	xorlw	0	; case 0
  2470  03DE  1903               	skipnz
  2471  03DF  2B7C               	goto	l1942
  2472  03E0  3A01               	xorlw	1	; case 1
  2473  03E1  1903               	skipnz
  2474  03E2  2B84               	goto	l1944
  2475  03E3  3A03               	xorlw	3	; case 2
  2476  03E4  1903               	skipnz
  2477  03E5  2B8C               	goto	l1946
  2478  03E6  3A01               	xorlw	1	; case 3
  2479  03E7  1903               	skipnz
  2480  03E8  2B94               	goto	l1948
  2481  03E9  3A07               	xorlw	7	; case 4
  2482  03EA  1903               	skipnz
  2483  03EB  2B9C               	goto	l1950
  2484  03EC  3A01               	xorlw	1	; case 5
  2485  03ED  1903               	skipnz
  2486  03EE  2BA4               	goto	l1952
  2487  03EF  3A03               	xorlw	3	; case 6
  2488  03F0  1903               	skipnz
  2489  03F1  2BAC               	goto	l1954
  2490  03F2  3A01               	xorlw	1	; case 7
  2491  03F3  1903               	skipnz
  2492  03F4  2BB4               	goto	l1956
  2493  03F5  3A0F               	xorlw	15	; case 8
  2494  03F6  1903               	skipnz
  2495  03F7  2BBC               	goto	l1958
  2496  03F8  3A01               	xorlw	1	; case 9
  2497  03F9  1903               	skipnz
  2498  03FA  2BC4               	goto	l1960
  2499  03FB  2BCC               	goto	l1962
  2500  03FC                     l286:
  2501  03FC  0008               	return
  2502  03FD                     __end_of_num_ascii:
  2503                           
  2504                           	psect	text9
  2505  064F                     __ptext9:	
  2506 ;; *************** function _Lcd_Write_String *****************
  2507 ;; Defined at:
  2508 ;;		line 132 in file "lcd.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  a               1    wreg     PTR unsigned char 
  2511 ;;		 -> STR_8(20), STR_7(12), STR_6(13), STR_5(10), 
  2512 ;;		 -> STR_4(16), STR_3(4), STR_2(3), STR_1(17), 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  a               1    5[BANK0 ] PTR unsigned char 
  2515 ;;		 -> STR_8(20), STR_7(12), STR_6(13), STR_5(10), 
  2516 ;;		 -> STR_4(16), STR_3(4), STR_2(3), STR_1(17), 
  2517 ;;  i               2    3[BANK0 ] int 
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2527 ;;      Params:         0       0       0       0       0
  2528 ;;      Locals:         0       3       0       0       0
  2529 ;;      Temps:          0       0       0       0       0
  2530 ;;      Totals:         0       3       0       0       0
  2531 ;;Total ram usage:        3 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; Hardware stack levels required when called:    4
  2534 ;; This function calls:
  2535 ;;		_Lcd_Write_Char
  2536 ;; This function is called by:
  2537 ;;		_mostrar_texto
  2538 ;;		_mostrar_datos
  2539 ;;		_Lcd_Credits
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           
  2544                           ;psect for function _Lcd_Write_String
  2545  064F                     _Lcd_Write_String:
  2546                           
  2547                           ;incstack = 0
  2548                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2549                           ;Lcd_Write_String@a stored from wreg
  2550  064F  1283               	bcf	3,5	;RP0=0, select bank0
  2551  0650  1303               	bcf	3,6	;RP1=0, select bank0
  2552  0651  00A5               	movwf	Lcd_Write_String@a
  2553  0652                     l1908:
  2554                           
  2555                           ;lcd.c: 133:     int i;;lcd.c: 133:     int i;;lcd.c: 134:     for (i = 0; a[i] != '\0';
      +                           i++);lcd.c: 134:     for (i = 0; a[i] != '\0'; i++)
  2556  0652  01A3               	clrf	Lcd_Write_String@i
  2557  0653  01A4               	clrf	Lcd_Write_String@i+1
  2558  0654  2E6A               	goto	l1914
  2559  0655                     l1910:
  2560                           
  2561                           ;lcd.c: 135:         Lcd_Write_Char(a[i]);;lcd.c: 135:         Lcd_Write_Char(a[i]);
  2562  0655  0823               	movf	Lcd_Write_String@i,w
  2563  0656  0725               	addwf	Lcd_Write_String@a,w
  2564  0657  0084               	movwf	4
  2565  0658  120A  118A  2400  120A  118A  	fcall	stringdir
  2566  065D  120A  118A  26BA  120A  118A  	fcall	_Lcd_Write_Char
  2567  0662                     l1912:
  2568  0662  3001               	movlw	1
  2569  0663  1283               	bcf	3,5	;RP0=0, select bank0
  2570  0664  1303               	bcf	3,6	;RP1=0, select bank0
  2571  0665  07A3               	addwf	Lcd_Write_String@i,f
  2572  0666  1803               	skipnc
  2573  0667  0AA4               	incf	Lcd_Write_String@i+1,f
  2574  0668  3000               	movlw	0
  2575  0669  07A4               	addwf	Lcd_Write_String@i+1,f
  2576  066A                     l1914:
  2577  066A  0823               	movf	Lcd_Write_String@i,w
  2578  066B  0725               	addwf	Lcd_Write_String@a,w
  2579  066C  0084               	movwf	4
  2580  066D  120A  118A  2400  120A  118A  	fcall	stringdir
  2581  0672  3A00               	xorlw	0
  2582  0673  1D03               	skipz
  2583  0674  2E76               	goto	u751
  2584  0675  2E77               	goto	u750
  2585  0676                     u751:
  2586  0676  2E55               	goto	l1910
  2587  0677                     u750:
  2588  0677                     l218:
  2589  0677  0008               	return
  2590  0678                     __end_of_Lcd_Write_String:
  2591                           
  2592                           	psect	text10
  2593  06BA                     __ptext10:	
  2594 ;; *************** function _Lcd_Write_Char *****************
  2595 ;; Defined at:
  2596 ;;		line 111 in file "lcd.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  a               1    wreg     unsigned char 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  a               1    2[BANK0 ] unsigned char 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0, pclath, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2610 ;;      Params:         0       0       0       0       0
  2611 ;;      Locals:         0       1       0       0       0
  2612 ;;      Temps:          0       1       0       0       0
  2613 ;;      Totals:         0       2       0       0       0
  2614 ;;Total ram usage:        2 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    3
  2617 ;; This function calls:
  2618 ;;		_Lcd_Port
  2619 ;; This function is called by:
  2620 ;;		_mostrar_datos
  2621 ;;		_Lcd_Write_String
  2622 ;;		_Lcd_Credits
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           
  2627                           ;psect for function _Lcd_Write_Char
  2628  06BA                     _Lcd_Write_Char:
  2629                           
  2630                           ;incstack = 0
  2631                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2632                           ;Lcd_Write_Char@a stored from wreg
  2633  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  2634  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  2635  06BC  00A2               	movwf	Lcd_Write_Char@a
  2636  06BD                     l1876:
  2637                           
  2638                           ;lcd.c: 125:     RB2 = 1;;lcd.c: 125:     RB2 = 1;
  2639  06BD  1506               	bsf	6,2	;volatile
  2640  06BE                     l1878:
  2641                           
  2642                           ;lcd.c: 126:     Lcd_Port(a);;lcd.c: 126:     Lcd_Port(a);
  2643  06BE  0822               	movf	Lcd_Write_Char@a,w
  2644  06BF  120A  118A  25E0  120A  118A  	fcall	_Lcd_Port
  2645  06C4                     l1880:
  2646                           
  2647                           ;lcd.c: 127:     RB3 = 1;;lcd.c: 127:     RB3 = 1;
  2648  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  2649  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  2650  06C6  1586               	bsf	6,3	;volatile
  2651  06C7                     l1882:
  2652                           
  2653                           ;lcd.c: 128:     _delay((unsigned long)((40)*(8000000/4000000.0)));;lcd.c: 128:     _del
      +                          ay((unsigned long)((40)*(8000000/4000000.0)));
  2654  06C7  3019               	movlw	25
  2655  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2656  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2657  06CA  00A1               	movwf	??_Lcd_Write_Char
  2658  06CB                     u1077:
  2659  06CB  0BA1               	decfsz	??_Lcd_Write_Char,f
  2660  06CC  2ECB               	goto	u1077
  2661  06CD  2ECE               	nop2
  2662  06CE                     l1884:
  2663                           
  2664                           ;lcd.c: 129:     RB3 = 0;;lcd.c: 129:     RB3 = 0;
  2665  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2666  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2667  06D0  1186               	bcf	6,3	;volatile
  2668  06D1                     l212:
  2669  06D1  0008               	return
  2670  06D2                     __end_of_Lcd_Write_Char:
  2671                           
  2672                           	psect	text11
  2673  0678                     __ptext11:	
  2674 ;; *************** function _Lcd_Set_Cursor *****************
  2675 ;; Defined at:
  2676 ;;		line 74 in file "lcd.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  a               1    wreg     unsigned char 
  2679 ;;  b               1    4[BANK0 ] unsigned char 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  a               1    6[BANK0 ] unsigned char 
  2682 ;;  temp            1    7[BANK0 ] unsigned char 
  2683 ;;  y               1    0        unsigned char 
  2684 ;;  z               1    0        unsigned char 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, status,0, pclath, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2694 ;;      Params:         0       1       0       0       0
  2695 ;;      Locals:         0       2       0       0       0
  2696 ;;      Temps:          0       1       0       0       0
  2697 ;;      Totals:         0       4       0       0       0
  2698 ;;Total ram usage:        4 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    4
  2701 ;; This function calls:
  2702 ;;		_Lcd_Cmd
  2703 ;; This function is called by:
  2704 ;;		_mostrar_texto
  2705 ;;		_mostrar_datos
  2706 ;;		_Lcd_Credits
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           
  2711                           ;psect for function _Lcd_Set_Cursor
  2712  0678                     _Lcd_Set_Cursor:
  2713                           
  2714                           ;incstack = 0
  2715                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2716                           ;Lcd_Set_Cursor@a stored from wreg
  2717  0678  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0679  1303               	bcf	3,6	;RP1=0, select bank0
  2719  067A  00A6               	movwf	Lcd_Set_Cursor@a
  2720  067B                     l1896:
  2721                           
  2722                           ;lcd.c: 75:     char temp, z, y;;lcd.c: 75:     char temp, z, y;;lcd.c: 76:     if (a ==
      +                           1) {;lcd.c: 76:     if (a == 1) {
  2723  067B  0326               	decf	Lcd_Set_Cursor@a,w
  2724  067C  1D03               	btfss	3,2
  2725  067D  2E7F               	goto	u731
  2726  067E  2E80               	goto	u730
  2727  067F                     u731:
  2728  067F  2E8C               	goto	l1902
  2729  0680                     u730:
  2730  0680                     l1898:
  2731                           
  2732                           ;lcd.c: 77:         temp = 0x80 + b - 1;;lcd.c: 77:         temp = 0x80 + b - 1;
  2733  0680  0824               	movf	Lcd_Set_Cursor@b,w
  2734  0681  3E7F               	addlw	127
  2735  0682  00A5               	movwf	??_Lcd_Set_Cursor
  2736  0683  0825               	movf	??_Lcd_Set_Cursor,w
  2737  0684  00A7               	movwf	Lcd_Set_Cursor@temp
  2738  0685                     l1900:
  2739                           
  2740                           ;lcd.c: 84:         Lcd_Cmd(temp);;lcd.c: 84:         Lcd_Cmd(temp);
  2741  0685  0827               	movf	Lcd_Set_Cursor@temp,w
  2742  0686  120A  118A  269E  120A  118A  	fcall	_Lcd_Cmd
  2743                           
  2744                           ;lcd.c: 85:     } else if (a == 2) {;lcd.c: 85:     } else if (a == 2) {
  2745  068B  2E9D               	goto	l206
  2746  068C                     l1902:
  2747  068C  3002               	movlw	2
  2748  068D  0626               	xorwf	Lcd_Set_Cursor@a,w
  2749  068E  1D03               	btfss	3,2
  2750  068F  2E91               	goto	u741
  2751  0690  2E92               	goto	u740
  2752  0691                     u741:
  2753  0691  2E9D               	goto	l206
  2754  0692                     u740:
  2755  0692                     l1904:
  2756                           
  2757                           ;lcd.c: 86:         temp = 0xC0 + b - 1;;lcd.c: 86:         temp = 0xC0 + b - 1;
  2758  0692  0824               	movf	Lcd_Set_Cursor@b,w
  2759  0693  3EBF               	addlw	191
  2760  0694  00A5               	movwf	??_Lcd_Set_Cursor
  2761  0695  0825               	movf	??_Lcd_Set_Cursor,w
  2762  0696  00A7               	movwf	Lcd_Set_Cursor@temp
  2763  0697                     l1906:
  2764                           
  2765                           ;lcd.c: 93:         Lcd_Cmd(temp);;lcd.c: 93:         Lcd_Cmd(temp);
  2766  0697  0827               	movf	Lcd_Set_Cursor@temp,w
  2767  0698  120A  118A  269E  120A  118A  	fcall	_Lcd_Cmd
  2768  069D                     l206:
  2769  069D  0008               	return
  2770  069E                     __end_of_Lcd_Set_Cursor:
  2771                           
  2772                           	psect	text12
  2773  025E                     __ptext12:	
  2774 ;; *************** function _encabezado_usart *****************
  2775 ;; Defined at:
  2776 ;;		line 273 in file "lab3.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0, pclath, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2790 ;;      Params:         0       0       0       0       0
  2791 ;;      Locals:         0       0       0       0       0
  2792 ;;      Temps:          0       2       0       0       0
  2793 ;;      Totals:         0       2       0       0       0
  2794 ;;Total ram usage:        2 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    3
  2797 ;; This function calls:
  2798 ;;		_usart_T_nl
  2799 ;;		_usart_T_virt
  2800 ;; This function is called by:
  2801 ;;		_main
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           
  2806                           ;psect for function _encabezado_usart
  2807  025E                     _encabezado_usart:
  2808  025E                     l2030:	
  2809                           ;incstack = 0
  2810                           ; Regs used in _encabezado_usart: [wreg+status,2+status,0+pclath+cstack]
  2811                           
  2812                           
  2813                           ;lab3.c: 279:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2814  025E  3003               	movlw	3
  2815  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2816  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2817  0261  00A2               	movwf	??_encabezado_usart+1
  2818  0262  3097               	movlw	151
  2819  0263  00A1               	movwf	??_encabezado_usart
  2820  0264                     u1087:
  2821  0264  0BA1               	decfsz	??_encabezado_usart,f
  2822  0265  2A64               	goto	u1087
  2823  0266  0BA2               	decfsz	??_encabezado_usart+1,f
  2824  0267  2A64               	goto	u1087
  2825  0268                     l2032:
  2826                           
  2827                           ;lab3.c: 280:     usart_T_virt(83);
  2828  0268  3053               	movlw	83
  2829  0269  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  2830  026E                     l2034:
  2831                           
  2832                           ;lab3.c: 281:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2833  026E  3003               	movlw	3
  2834  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2835  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2836  0271  00A2               	movwf	??_encabezado_usart+1
  2837  0272  3097               	movlw	151
  2838  0273  00A1               	movwf	??_encabezado_usart
  2839  0274                     u1097:
  2840  0274  0BA1               	decfsz	??_encabezado_usart,f
  2841  0275  2A74               	goto	u1097
  2842  0276  0BA2               	decfsz	??_encabezado_usart+1,f
  2843  0277  2A74               	goto	u1097
  2844                           
  2845                           ;lab3.c: 282:     usart_T_virt(49);
  2846  0278  3031               	movlw	49
  2847  0279  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  2848  027E                     l2036:
  2849                           
  2850                           ;lab3.c: 283:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2851  027E  3003               	movlw	3
  2852  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2853  0280  1303               	bcf	3,6	;RP1=0, select bank0
  2854  0281  00A2               	movwf	??_encabezado_usart+1
  2855  0282  3097               	movlw	151
  2856  0283  00A1               	movwf	??_encabezado_usart
  2857  0284                     u1107:
  2858  0284  0BA1               	decfsz	??_encabezado_usart,f
  2859  0285  2A84               	goto	u1107
  2860  0286  0BA2               	decfsz	??_encabezado_usart+1,f
  2861  0287  2A84               	goto	u1107
  2862  0288                     l2038:
  2863                           
  2864                           ;lab3.c: 284:     usart_T_virt(58);
  2865  0288  303A               	movlw	58
  2866  0289  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  2867                           
  2868                           ;lab3.c: 285:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2869  028E  3003               	movlw	3
  2870  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0290  1303               	bcf	3,6	;RP1=0, select bank0
  2872  0291  00A2               	movwf	??_encabezado_usart+1
  2873  0292  3097               	movlw	151
  2874  0293  00A1               	movwf	??_encabezado_usart
  2875  0294                     u1117:
  2876  0294  0BA1               	decfsz	??_encabezado_usart,f
  2877  0295  2A94               	goto	u1117
  2878  0296  0BA2               	decfsz	??_encabezado_usart+1,f
  2879  0297  2A94               	goto	u1117
  2880  0298                     l2040:
  2881                           
  2882                           ;lab3.c: 286:     usart_T_virt(32);
  2883  0298  3020               	movlw	32
  2884  0299  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  2885  029E                     l2042:
  2886                           
  2887                           ;lab3.c: 287:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2888  029E  3003               	movlw	3
  2889  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2890  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2891  02A1  00A2               	movwf	??_encabezado_usart+1
  2892  02A2  3097               	movlw	151
  2893  02A3  00A1               	movwf	??_encabezado_usart
  2894  02A4                     u1127:
  2895  02A4  0BA1               	decfsz	??_encabezado_usart,f
  2896  02A5  2AA4               	goto	u1127
  2897  02A6  0BA2               	decfsz	??_encabezado_usart+1,f
  2898  02A7  2AA4               	goto	u1127
  2899                           
  2900                           ;lab3.c: 288:     usart_T_virt(32);
  2901  02A8  3020               	movlw	32
  2902  02A9  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  2903  02AE                     l2044:
  2904                           
  2905                           ;lab3.c: 289:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2906  02AE  3003               	movlw	3
  2907  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2908  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2909  02B1  00A2               	movwf	??_encabezado_usart+1
  2910  02B2  3097               	movlw	151
  2911  02B3  00A1               	movwf	??_encabezado_usart
  2912  02B4                     u1137:
  2913  02B4  0BA1               	decfsz	??_encabezado_usart,f
  2914  02B5  2AB4               	goto	u1137
  2915  02B6  0BA2               	decfsz	??_encabezado_usart+1,f
  2916  02B7  2AB4               	goto	u1137
  2917  02B8                     l2046:
  2918                           
  2919                           ;lab3.c: 290:     usart_T_virt(32);
  2920  02B8  3020               	movlw	32
  2921  02B9  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  2922                           
  2923                           ;lab3.c: 291:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2924  02BE  3003               	movlw	3
  2925  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2926  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  2927  02C1  00A2               	movwf	??_encabezado_usart+1
  2928  02C2  3097               	movlw	151
  2929  02C3  00A1               	movwf	??_encabezado_usart
  2930  02C4                     u1147:
  2931  02C4  0BA1               	decfsz	??_encabezado_usart,f
  2932  02C5  2AC4               	goto	u1147
  2933  02C6  0BA2               	decfsz	??_encabezado_usart+1,f
  2934  02C7  2AC4               	goto	u1147
  2935  02C8                     l2048:
  2936                           
  2937                           ;lab3.c: 295:     usart_T_virt(83);
  2938  02C8  3053               	movlw	83
  2939  02C9  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  2940  02CE                     l2050:
  2941                           
  2942                           ;lab3.c: 296:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2943  02CE  3003               	movlw	3
  2944  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2945  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2946  02D1  00A2               	movwf	??_encabezado_usart+1
  2947  02D2  3097               	movlw	151
  2948  02D3  00A1               	movwf	??_encabezado_usart
  2949  02D4                     u1157:
  2950  02D4  0BA1               	decfsz	??_encabezado_usart,f
  2951  02D5  2AD4               	goto	u1157
  2952  02D6  0BA2               	decfsz	??_encabezado_usart+1,f
  2953  02D7  2AD4               	goto	u1157
  2954                           
  2955                           ;lab3.c: 297:     usart_T_virt(50);
  2956  02D8  3032               	movlw	50
  2957  02D9  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  2958  02DE                     l2052:
  2959                           
  2960                           ;lab3.c: 298:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2961  02DE  3003               	movlw	3
  2962  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2963  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2964  02E1  00A2               	movwf	??_encabezado_usart+1
  2965  02E2  3097               	movlw	151
  2966  02E3  00A1               	movwf	??_encabezado_usart
  2967  02E4                     u1167:
  2968  02E4  0BA1               	decfsz	??_encabezado_usart,f
  2969  02E5  2AE4               	goto	u1167
  2970  02E6  0BA2               	decfsz	??_encabezado_usart+1,f
  2971  02E7  2AE4               	goto	u1167
  2972  02E8                     l2054:
  2973                           
  2974                           ;lab3.c: 299:     usart_T_virt(58);
  2975  02E8  303A               	movlw	58
  2976  02E9  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  2977                           
  2978                           ;lab3.c: 300:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2979  02EE  3003               	movlw	3
  2980  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2981  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2982  02F1  00A2               	movwf	??_encabezado_usart+1
  2983  02F2  3097               	movlw	151
  2984  02F3  00A1               	movwf	??_encabezado_usart
  2985  02F4                     u1177:
  2986  02F4  0BA1               	decfsz	??_encabezado_usart,f
  2987  02F5  2AF4               	goto	u1177
  2988  02F6  0BA2               	decfsz	??_encabezado_usart+1,f
  2989  02F7  2AF4               	goto	u1177
  2990  02F8                     l2056:
  2991                           
  2992                           ;lab3.c: 301:     usart_T_virt(32);
  2993  02F8  3020               	movlw	32
  2994  02F9  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  2995  02FE                     l2058:
  2996                           
  2997                           ;lab3.c: 302:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2998  02FE  3003               	movlw	3
  2999  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  3000  0300  1303               	bcf	3,6	;RP1=0, select bank0
  3001  0301  00A2               	movwf	??_encabezado_usart+1
  3002  0302  3097               	movlw	151
  3003  0303  00A1               	movwf	??_encabezado_usart
  3004  0304                     u1187:
  3005  0304  0BA1               	decfsz	??_encabezado_usart,f
  3006  0305  2B04               	goto	u1187
  3007  0306  0BA2               	decfsz	??_encabezado_usart+1,f
  3008  0307  2B04               	goto	u1187
  3009                           
  3010                           ;lab3.c: 303:     usart_T_virt(32);
  3011  0308  3020               	movlw	32
  3012  0309  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  3013  030E                     l2060:
  3014                           
  3015                           ;lab3.c: 304:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3016  030E  3003               	movlw	3
  3017  030F  1283               	bcf	3,5	;RP0=0, select bank0
  3018  0310  1303               	bcf	3,6	;RP1=0, select bank0
  3019  0311  00A2               	movwf	??_encabezado_usart+1
  3020  0312  3097               	movlw	151
  3021  0313  00A1               	movwf	??_encabezado_usart
  3022  0314                     u1197:
  3023  0314  0BA1               	decfsz	??_encabezado_usart,f
  3024  0315  2B14               	goto	u1197
  3025  0316  0BA2               	decfsz	??_encabezado_usart+1,f
  3026  0317  2B14               	goto	u1197
  3027  0318                     l2062:
  3028                           
  3029                           ;lab3.c: 305:     usart_T_virt(32);
  3030  0318  3020               	movlw	32
  3031  0319  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  3032                           
  3033                           ;lab3.c: 306:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3034  031E  3003               	movlw	3
  3035  031F  1283               	bcf	3,5	;RP0=0, select bank0
  3036  0320  1303               	bcf	3,6	;RP1=0, select bank0
  3037  0321  00A2               	movwf	??_encabezado_usart+1
  3038  0322  3097               	movlw	151
  3039  0323  00A1               	movwf	??_encabezado_usart
  3040  0324                     u1207:
  3041  0324  0BA1               	decfsz	??_encabezado_usart,f
  3042  0325  2B24               	goto	u1207
  3043  0326  0BA2               	decfsz	??_encabezado_usart+1,f
  3044  0327  2B24               	goto	u1207
  3045  0328                     l2064:
  3046                           
  3047                           ;lab3.c: 309:     usart_T_virt(83);
  3048  0328  3053               	movlw	83
  3049  0329  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  3050  032E                     l2066:
  3051                           
  3052                           ;lab3.c: 310:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3053  032E  3003               	movlw	3
  3054  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0331  00A2               	movwf	??_encabezado_usart+1
  3057  0332  3097               	movlw	151
  3058  0333  00A1               	movwf	??_encabezado_usart
  3059  0334                     u1217:
  3060  0334  0BA1               	decfsz	??_encabezado_usart,f
  3061  0335  2B34               	goto	u1217
  3062  0336  0BA2               	decfsz	??_encabezado_usart+1,f
  3063  0337  2B34               	goto	u1217
  3064                           
  3065                           ;lab3.c: 311:     usart_T_virt(51);
  3066  0338  3033               	movlw	51
  3067  0339  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  3068  033E                     l2068:
  3069                           
  3070                           ;lab3.c: 312:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3071  033E  3003               	movlw	3
  3072  033F  1283               	bcf	3,5	;RP0=0, select bank0
  3073  0340  1303               	bcf	3,6	;RP1=0, select bank0
  3074  0341  00A2               	movwf	??_encabezado_usart+1
  3075  0342  3097               	movlw	151
  3076  0343  00A1               	movwf	??_encabezado_usart
  3077  0344                     u1227:
  3078  0344  0BA1               	decfsz	??_encabezado_usart,f
  3079  0345  2B44               	goto	u1227
  3080  0346  0BA2               	decfsz	??_encabezado_usart+1,f
  3081  0347  2B44               	goto	u1227
  3082  0348                     l2070:
  3083                           
  3084                           ;lab3.c: 313:     usart_T_virt(58);
  3085  0348  303A               	movlw	58
  3086  0349  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  3087                           
  3088                           ;lab3.c: 314:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3089  034E  3003               	movlw	3
  3090  034F  1283               	bcf	3,5	;RP0=0, select bank0
  3091  0350  1303               	bcf	3,6	;RP1=0, select bank0
  3092  0351  00A2               	movwf	??_encabezado_usart+1
  3093  0352  3097               	movlw	151
  3094  0353  00A1               	movwf	??_encabezado_usart
  3095  0354                     u1237:
  3096  0354  0BA1               	decfsz	??_encabezado_usart,f
  3097  0355  2B54               	goto	u1237
  3098  0356  0BA2               	decfsz	??_encabezado_usart+1,f
  3099  0357  2B54               	goto	u1237
  3100  0358                     l2072:
  3101                           
  3102                           ;lab3.c: 315:     usart_T_virt(32);
  3103  0358  3020               	movlw	32
  3104  0359  120A  118A  2707  120A  118A  	fcall	_usart_T_virt
  3105  035E                     l2074:
  3106                           
  3107                           ;lab3.c: 316:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3108  035E  3003               	movlw	3
  3109  035F  1283               	bcf	3,5	;RP0=0, select bank0
  3110  0360  1303               	bcf	3,6	;RP1=0, select bank0
  3111  0361  00A2               	movwf	??_encabezado_usart+1
  3112  0362  3097               	movlw	151
  3113  0363  00A1               	movwf	??_encabezado_usart
  3114  0364                     u1247:
  3115  0364  0BA1               	decfsz	??_encabezado_usart,f
  3116  0365  2B64               	goto	u1247
  3117  0366  0BA2               	decfsz	??_encabezado_usart+1,f
  3118  0367  2B64               	goto	u1247
  3119                           
  3120                           ;lab3.c: 317:     usart_T_nl();
  3121  0368  120A  118A  272E  120A  118A  	fcall	_usart_T_nl
  3122  036D                     l2076:
  3123                           
  3124                           ;lab3.c: 318:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3125  036D  3003               	movlw	3
  3126  036E  1283               	bcf	3,5	;RP0=0, select bank0
  3127  036F  1303               	bcf	3,6	;RP1=0, select bank0
  3128  0370  00A2               	movwf	??_encabezado_usart+1
  3129  0371  3097               	movlw	151
  3130  0372  00A1               	movwf	??_encabezado_usart
  3131  0373                     u1257:
  3132  0373  0BA1               	decfsz	??_encabezado_usart,f
  3133  0374  2B73               	goto	u1257
  3134  0375  0BA2               	decfsz	??_encabezado_usart+1,f
  3135  0376  2B73               	goto	u1257
  3136  0377                     l140:
  3137  0377  0008               	return
  3138  0378                     __end_of_encabezado_usart:
  3139                           
  3140                           	psect	text13
  3141  0707                     __ptext13:	
  3142 ;; *************** function _usart_T_virt *****************
  3143 ;; Defined at:
  3144 ;;		line 50 in file "USART.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  t_data          1    wreg     unsigned char 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  t_data          1    0[BANK0 ] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3158 ;;      Params:         0       0       0       0       0
  3159 ;;      Locals:         0       1       0       0       0
  3160 ;;      Temps:          0       0       0       0       0
  3161 ;;      Totals:         0       1       0       0       0
  3162 ;;Total ram usage:        1 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    2
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		_mostrar_datos
  3169 ;;		_encabezado_usart
  3170 ;;		_usart_T_string
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           
  3175                           ;psect for function _usart_T_virt
  3176  0707                     _usart_T_virt:
  3177                           
  3178                           ;incstack = 0
  3179                           ; Regs used in _usart_T_virt: [wreg]
  3180                           ;usart_T_virt@t_data stored from wreg
  3181  0707  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0708  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0709  00A0               	movwf	usart_T_virt@t_data
  3184  070A                     l1974:
  3185                           
  3186                           ;USART.c: 51:     if (1 == TXSTAbits.TRMT) {
  3187  070A  1683               	bsf	3,5	;RP0=1, select bank1
  3188  070B  1303               	bcf	3,6	;RP1=0, select bank1
  3189  070C  1C98               	btfss	24,1	;volatile
  3190  070D  2F0F               	goto	u791
  3191  070E  2F10               	goto	u790
  3192  070F                     u791:
  3193  070F  2F14               	goto	l258
  3194  0710                     u790:
  3195  0710                     l1976:
  3196                           
  3197                           ;USART.c: 52:         TXREG = t_data;
  3198  0710  1283               	bcf	3,5	;RP0=0, select bank0
  3199  0711  1303               	bcf	3,6	;RP1=0, select bank0
  3200  0712  0820               	movf	usart_T_virt@t_data,w
  3201  0713  0099               	movwf	25	;volatile
  3202  0714                     l258:
  3203  0714  0008               	return
  3204  0715                     __end_of_usart_T_virt:
  3205                           
  3206                           	psect	text14
  3207  072E                     __ptext14:	
  3208 ;; *************** function _usart_T_nl *****************
  3209 ;; Defined at:
  3210 ;;		line 56 in file "USART.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;		None
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3224 ;;      Params:         0       0       0       0       0
  3225 ;;      Locals:         0       0       0       0       0
  3226 ;;      Temps:          0       0       0       0       0
  3227 ;;      Totals:         0       0       0       0       0
  3228 ;;Total ram usage:        0 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:    2
  3231 ;; This function calls:
  3232 ;;		Nothing
  3233 ;; This function is called by:
  3234 ;;		_mostrar_datos
  3235 ;;		_encabezado_usart
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           
  3240                           ;psect for function _usart_T_nl
  3241  072E                     _usart_T_nl:
  3242  072E                     l1530:	
  3243                           ;incstack = 0
  3244                           ; Regs used in _usart_T_nl: [wreg]
  3245                           
  3246                           
  3247                           ;USART.c: 57:     if (1 == TXSTAbits.TRMT) {
  3248  072E  1683               	bsf	3,5	;RP0=1, select bank1
  3249  072F  1303               	bcf	3,6	;RP1=0, select bank1
  3250  0730  1C98               	btfss	24,1	;volatile
  3251  0731  2F33               	goto	u521
  3252  0732  2F34               	goto	u520
  3253  0733                     u521:
  3254  0733  2F38               	goto	l262
  3255  0734                     u520:
  3256  0734                     l1532:
  3257                           
  3258                           ;USART.c: 58:         TXREG = 13;
  3259  0734  300D               	movlw	13
  3260  0735  1283               	bcf	3,5	;RP0=0, select bank0
  3261  0736  1303               	bcf	3,6	;RP1=0, select bank0
  3262  0737  0099               	movwf	25	;volatile
  3263  0738                     l262:
  3264  0738  0008               	return
  3265  0739                     __end_of_usart_T_nl:
  3266                           
  3267                           	psect	text15
  3268  06D2                     __ptext15:	
  3269 ;; *************** function _adc_start *****************
  3270 ;; Defined at:
  3271 ;;		line 121 in file "lab3.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;		None
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;		None
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      void 
  3278 ;; Registers used:
  3279 ;;		wreg
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3285 ;;      Params:         0       0       0       0       0
  3286 ;;      Locals:         0       0       0       0       0
  3287 ;;      Temps:          0       2       0       0       0
  3288 ;;      Totals:         0       2       0       0       0
  3289 ;;Total ram usage:        2 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    2
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_main
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           
  3300                           ;psect for function _adc_start
  3301  06D2                     _adc_start:
  3302  06D2                     l2078:	
  3303                           ;incstack = 0
  3304                           ; Regs used in _adc_start: [wreg]
  3305                           
  3306                           
  3307                           ;lab3.c: 122:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3308  06D2  301A               	movlw	26
  3309  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  3310  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  3311  06D5  00A1               	movwf	??_adc_start+1
  3312  06D6  30F7               	movlw	247
  3313  06D7  00A0               	movwf	??_adc_start
  3314  06D8                     u1267:
  3315  06D8  0BA0               	decfsz	??_adc_start,f
  3316  06D9  2ED8               	goto	u1267
  3317  06DA  0BA1               	decfsz	??_adc_start+1,f
  3318  06DB  2ED8               	goto	u1267
  3319  06DC  2EDD               	nop2
  3320  06DD                     l2080:
  3321                           
  3322                           ;lab3.c: 123:     if (0 == ADCON0bits.GO_nDONE) {
  3323  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  3324  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  3325  06DF  189F               	btfsc	31,1	;volatile
  3326  06E0  2EE2               	goto	u831
  3327  06E1  2EE3               	goto	u830
  3328  06E2                     u831:
  3329  06E2  2EE4               	goto	l107
  3330  06E3                     u830:
  3331  06E3                     l2082:
  3332                           
  3333                           ;lab3.c: 124:         ADCON0bits.GO_nDONE = 1;
  3334  06E3  149F               	bsf	31,1	;volatile
  3335  06E4                     l107:
  3336  06E4  0008               	return
  3337  06E5                     __end_of_adc_start:
  3338                           
  3339                           	psect	text16
  3340  0506                     __ptext16:	
  3341 ;; *************** function _Lcd_Init *****************
  3342 ;; Defined at:
  3343 ;;		line 97 in file "lcd.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0, pclath, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3357 ;;      Params:         0       0       0       0       0
  3358 ;;      Locals:         0       0       0       0       0
  3359 ;;      Temps:          0       2       0       0       0
  3360 ;;      Totals:         0       2       0       0       0
  3361 ;;Total ram usage:        2 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    4
  3364 ;; This function calls:
  3365 ;;		_Lcd_Cmd
  3366 ;;		_Lcd_Port
  3367 ;; This function is called by:
  3368 ;;		_main
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           
  3373                           ;psect for function _Lcd_Init
  3374  0506                     _Lcd_Init:
  3375  0506                     l2020:	
  3376                           ;incstack = 0
  3377                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3378                           
  3379                           
  3380                           ;lcd.c: 98:     Lcd_Port(0x00);;lcd.c: 98:     Lcd_Port(0x00);
  3381  0506  3000               	movlw	0
  3382  0507  120A  118A  25E0  120A  118A  	fcall	_Lcd_Port
  3383  050C                     l2022:
  3384                           
  3385                           ;lcd.c: 99:     _delay((unsigned long)((20)*(8000000/4000.0)));;lcd.c: 99:     _delay((u
      +                          nsigned long)((20)*(8000000/4000.0)));
  3386  050C  3034               	movlw	52
  3387  050D  1283               	bcf	3,5	;RP0=0, select bank0
  3388  050E  1303               	bcf	3,6	;RP1=0, select bank0
  3389  050F  00A5               	movwf	??_Lcd_Init+1
  3390  0510  30F1               	movlw	241
  3391  0511  00A4               	movwf	??_Lcd_Init
  3392  0512                     u1277:
  3393  0512  0BA4               	decfsz	??_Lcd_Init,f
  3394  0513  2D12               	goto	u1277
  3395  0514  0BA5               	decfsz	??_Lcd_Init+1,f
  3396  0515  2D12               	goto	u1277
  3397  0516                     l2024:
  3398                           
  3399                           ;lcd.c: 100:     Lcd_Cmd(0x30);;lcd.c: 100:     Lcd_Cmd(0x30);
  3400  0516  3030               	movlw	48
  3401  0517  120A  118A  269E  120A  118A  	fcall	_Lcd_Cmd
  3402                           
  3403                           ;lcd.c: 101:     _delay((unsigned long)((5)*(8000000/4000.0)));;lcd.c: 101:     _delay((
      +                          unsigned long)((5)*(8000000/4000.0)));
  3404  051C  300D               	movlw	13
  3405  051D  1283               	bcf	3,5	;RP0=0, select bank0
  3406  051E  1303               	bcf	3,6	;RP1=0, select bank0
  3407  051F  00A5               	movwf	??_Lcd_Init+1
  3408  0520  30FB               	movlw	251
  3409  0521  00A4               	movwf	??_Lcd_Init
  3410  0522                     u1287:
  3411  0522  0BA4               	decfsz	??_Lcd_Init,f
  3412  0523  2D22               	goto	u1287
  3413  0524  0BA5               	decfsz	??_Lcd_Init+1,f
  3414  0525  2D22               	goto	u1287
  3415  0526                     l2026:
  3416                           
  3417                           ;lcd.c: 102:     Lcd_Cmd(0x30);;lcd.c: 102:     Lcd_Cmd(0x30);
  3418  0526  3030               	movlw	48
  3419  0527  120A  118A  269E  120A  118A  	fcall	_Lcd_Cmd
  3420  052C                     l2028:
  3421                           
  3422                           ;lcd.c: 103:     _delay((unsigned long)((11)*(8000000/4000.0)));;lcd.c: 103:     _delay(
      +                          (unsigned long)((11)*(8000000/4000.0)));
  3423  052C  301D               	movlw	29
  3424  052D  1283               	bcf	3,5	;RP0=0, select bank0
  3425  052E  1303               	bcf	3,6	;RP1=0, select bank0
  3426  052F  00A5               	movwf	??_Lcd_Init+1
  3427  0530  3090               	movlw	144
  3428  0531  00A4               	movwf	??_Lcd_Init
  3429  0532                     u1297:
  3430  0532  0BA4               	decfsz	??_Lcd_Init,f
  3431  0533  2D32               	goto	u1297
  3432  0534  0BA5               	decfsz	??_Lcd_Init+1,f
  3433  0535  2D32               	goto	u1297
  3434  0536  0000               	nop
  3435                           
  3436                           ;lcd.c: 104:     Lcd_Cmd(0x30);;lcd.c: 104:     Lcd_Cmd(0x30);
  3437  0537  3030               	movlw	48
  3438  0538  120A  118A  269E  120A  118A  	fcall	_Lcd_Cmd
  3439                           
  3440                           ;lcd.c: 106:     Lcd_Cmd(0x38);;lcd.c: 106:     Lcd_Cmd(0x38);
  3441  053D  3038               	movlw	56
  3442  053E  120A  118A  269E  120A  118A  	fcall	_Lcd_Cmd
  3443                           
  3444                           ;lcd.c: 107:     Lcd_Cmd(0x0C);;lcd.c: 107:     Lcd_Cmd(0x0C);
  3445  0543  300C               	movlw	12
  3446  0544  120A  118A  269E  120A  118A  	fcall	_Lcd_Cmd
  3447                           
  3448                           ;lcd.c: 108:     Lcd_Cmd(0x06);;lcd.c: 108:     Lcd_Cmd(0x06);
  3449  0549  3006               	movlw	6
  3450  054A  120A  118A  269E  120A  118A  	fcall	_Lcd_Cmd
  3451  054F                     l209:
  3452  054F  0008               	return
  3453  0550                     __end_of_Lcd_Init:
  3454                           
  3455                           	psect	text17
  3456  069E                     __ptext17:	
  3457 ;; *************** function _Lcd_Cmd *****************
  3458 ;; Defined at:
  3459 ;;		line 62 in file "lcd.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  a               1    wreg     unsigned char 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  a               1    3[BANK0 ] unsigned char 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  1    wreg      void 
  3466 ;; Registers used:
  3467 ;;		wreg, status,2, status,0, pclath, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3473 ;;      Params:         0       0       0       0       0
  3474 ;;      Locals:         0       1       0       0       0
  3475 ;;      Temps:          0       2       0       0       0
  3476 ;;      Totals:         0       3       0       0       0
  3477 ;;Total ram usage:        3 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    3
  3480 ;; This function calls:
  3481 ;;		_Lcd_Port
  3482 ;; This function is called by:
  3483 ;;		_Lcd_Set_Cursor
  3484 ;;		_Lcd_Init
  3485 ;;		_Lcd_Clear
  3486 ;;		_Lcd_Shift_Right
  3487 ;;		_Lcd_Shift_Left
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           
  3492                           ;psect for function _Lcd_Cmd
  3493  069E                     _Lcd_Cmd:
  3494                           
  3495                           ;incstack = 0
  3496                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3497                           ;Lcd_Cmd@a stored from wreg
  3498  069E  1283               	bcf	3,5	;RP0=0, select bank0
  3499  069F  1303               	bcf	3,6	;RP1=0, select bank0
  3500  06A0  00A3               	movwf	Lcd_Cmd@a
  3501  06A1                     l1886:
  3502                           
  3503                           ;lcd.c: 63:     RB2 = 0;;lcd.c: 63:     RB2 = 0;
  3504  06A1  1106               	bcf	6,2	;volatile
  3505  06A2                     l1888:
  3506                           
  3507                           ;lcd.c: 64:     Lcd_Port(a);;lcd.c: 64:     Lcd_Port(a);
  3508  06A2  0823               	movf	Lcd_Cmd@a,w
  3509  06A3  120A  118A  25E0  120A  118A  	fcall	_Lcd_Port
  3510  06A8                     l1890:
  3511                           
  3512                           ;lcd.c: 65:     RB3 = 1;;lcd.c: 65:     RB3 = 1;
  3513  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  3514  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  3515  06AA  1586               	bsf	6,3	;volatile
  3516  06AB                     l1892:
  3517                           
  3518                           ;lcd.c: 66:     _delay((unsigned long)((4)*(8000000/4000.0)));;lcd.c: 66:     _delay((un
      +                          signed long)((4)*(8000000/4000.0)));
  3519  06AB  300B               	movlw	11
  3520  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  3521  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  3522  06AE  00A2               	movwf	??_Lcd_Cmd+1
  3523  06AF  3061               	movlw	97
  3524  06B0  00A1               	movwf	??_Lcd_Cmd
  3525  06B1                     u1307:
  3526  06B1  0BA1               	decfsz	??_Lcd_Cmd,f
  3527  06B2  2EB1               	goto	u1307
  3528  06B3  0BA2               	decfsz	??_Lcd_Cmd+1,f
  3529  06B4  2EB1               	goto	u1307
  3530  06B5  2EB6               	nop2
  3531  06B6                     l1894:
  3532                           
  3533                           ;lcd.c: 67:     RB3 = 0;;lcd.c: 67:     RB3 = 0;
  3534  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  3535  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  3536  06B8  1186               	bcf	6,3	;volatile
  3537  06B9                     l197:
  3538  06B9  0008               	return
  3539  06BA                     __end_of_Lcd_Cmd:
  3540                           
  3541                           	psect	text18
  3542  05E0                     __ptext18:	
  3543 ;; *************** function _Lcd_Port *****************
  3544 ;; Defined at:
  3545 ;;		line 27 in file "lcd.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  a               1    wreg     unsigned char 
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  a               1    0[BANK0 ] unsigned char 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      void 
  3552 ;; Registers used:
  3553 ;;		wreg
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3559 ;;      Params:         0       0       0       0       0
  3560 ;;      Locals:         0       1       0       0       0
  3561 ;;      Temps:          0       0       0       0       0
  3562 ;;      Totals:         0       1       0       0       0
  3563 ;;Total ram usage:        1 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:    2
  3566 ;; This function calls:
  3567 ;;		Nothing
  3568 ;; This function is called by:
  3569 ;;		_Lcd_Cmd
  3570 ;;		_Lcd_Init
  3571 ;;		_Lcd_Write_Char
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _Lcd_Port
  3577  05E0                     _Lcd_Port:
  3578                           
  3579                           ;incstack = 0
  3580                           ; Regs used in _Lcd_Port: [wreg]
  3581                           ;Lcd_Port@a stored from wreg
  3582  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  3583  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  3584  05E2  00A0               	movwf	Lcd_Port@a
  3585  05E3                     l1858:
  3586                           
  3587                           ;lcd.c: 28:     if (a & 1);lcd.c: 28:     if (a & 1)
  3588  05E3  1C20               	btfss	Lcd_Port@a,0
  3589  05E4  2DE6               	goto	u651
  3590  05E5  2DE7               	goto	u650
  3591  05E6                     u651:
  3592  05E6  2DE9               	goto	l178
  3593  05E7                     u650:
  3594  05E7                     l1860:
  3595                           
  3596                           ;lcd.c: 29:         RD0 = 1;;lcd.c: 29:         RD0 = 1;
  3597  05E7  1408               	bsf	8,0	;volatile
  3598  05E8  2DEA               	goto	l179
  3599  05E9                     l178:	
  3600                           ;lcd.c: 30:     else;lcd.c: 30:     else
  3601                           
  3602                           
  3603                           ;lcd.c: 31:         RD0 = 0;;lcd.c: 31:         RD0 = 0;
  3604  05E9  1008               	bcf	8,0	;volatile
  3605  05EA                     l179:
  3606                           
  3607                           ;lcd.c: 32:     if (a & 2);lcd.c: 32:     if (a & 2)
  3608  05EA  1CA0               	btfss	Lcd_Port@a,1
  3609  05EB  2DED               	goto	u661
  3610  05EC  2DEE               	goto	u660
  3611  05ED                     u661:
  3612  05ED  2DF0               	goto	l180
  3613  05EE                     u660:
  3614  05EE                     l1862:
  3615                           
  3616                           ;lcd.c: 33:         RD1 = 1;;lcd.c: 33:         RD1 = 1;
  3617  05EE  1488               	bsf	8,1	;volatile
  3618  05EF  2DF1               	goto	l181
  3619  05F0                     l180:	
  3620                           ;lcd.c: 34:     else;lcd.c: 34:     else
  3621                           
  3622                           
  3623                           ;lcd.c: 35:         RD1 = 0;;lcd.c: 35:         RD1 = 0;
  3624  05F0  1088               	bcf	8,1	;volatile
  3625  05F1                     l181:
  3626                           
  3627                           ;lcd.c: 36:     if (a & 4);lcd.c: 36:     if (a & 4)
  3628  05F1  1D20               	btfss	Lcd_Port@a,2
  3629  05F2  2DF4               	goto	u671
  3630  05F3  2DF5               	goto	u670
  3631  05F4                     u671:
  3632  05F4  2DF7               	goto	l182
  3633  05F5                     u670:
  3634  05F5                     l1864:
  3635                           
  3636                           ;lcd.c: 37:         RD2 = 1;;lcd.c: 37:         RD2 = 1;
  3637  05F5  1508               	bsf	8,2	;volatile
  3638  05F6  2DF8               	goto	l183
  3639  05F7                     l182:	
  3640                           ;lcd.c: 38:     else;lcd.c: 38:     else
  3641                           
  3642                           
  3643                           ;lcd.c: 39:         RD2 = 0;;lcd.c: 39:         RD2 = 0;
  3644  05F7  1108               	bcf	8,2	;volatile
  3645  05F8                     l183:
  3646                           
  3647                           ;lcd.c: 40:     if (a & 8);lcd.c: 40:     if (a & 8)
  3648  05F8  1DA0               	btfss	Lcd_Port@a,3
  3649  05F9  2DFB               	goto	u681
  3650  05FA  2DFC               	goto	u680
  3651  05FB                     u681:
  3652  05FB  2DFE               	goto	l184
  3653  05FC                     u680:
  3654  05FC                     l1866:
  3655                           
  3656                           ;lcd.c: 41:         RD3 = 1;;lcd.c: 41:         RD3 = 1;
  3657  05FC  1588               	bsf	8,3	;volatile
  3658  05FD  2DFF               	goto	l185
  3659  05FE                     l184:	
  3660                           ;lcd.c: 42:     else;lcd.c: 42:     else
  3661                           
  3662                           
  3663                           ;lcd.c: 43:         RD3 = 0;;lcd.c: 43:         RD3 = 0;
  3664  05FE  1188               	bcf	8,3	;volatile
  3665  05FF                     l185:
  3666                           
  3667                           ;lcd.c: 44:     if (a & 16);lcd.c: 44:     if (a & 16)
  3668  05FF  1E20               	btfss	Lcd_Port@a,4
  3669  0600  2E02               	goto	u691
  3670  0601  2E03               	goto	u690
  3671  0602                     u691:
  3672  0602  2E05               	goto	l186
  3673  0603                     u690:
  3674  0603                     l1868:
  3675                           
  3676                           ;lcd.c: 45:         RD4 = 1;;lcd.c: 45:         RD4 = 1;
  3677  0603  1608               	bsf	8,4	;volatile
  3678  0604  2E06               	goto	l187
  3679  0605                     l186:	
  3680                           ;lcd.c: 46:     else;lcd.c: 46:     else
  3681                           
  3682                           
  3683                           ;lcd.c: 47:         RD4 = 0;;lcd.c: 47:         RD4 = 0;
  3684  0605  1208               	bcf	8,4	;volatile
  3685  0606                     l187:
  3686                           
  3687                           ;lcd.c: 48:     if (a & 32);lcd.c: 48:     if (a & 32)
  3688  0606  1EA0               	btfss	Lcd_Port@a,5
  3689  0607  2E09               	goto	u701
  3690  0608  2E0A               	goto	u700
  3691  0609                     u701:
  3692  0609  2E0C               	goto	l188
  3693  060A                     u700:
  3694  060A                     l1870:
  3695                           
  3696                           ;lcd.c: 49:         RD5 = 1;;lcd.c: 49:         RD5 = 1;
  3697  060A  1688               	bsf	8,5	;volatile
  3698  060B  2E0D               	goto	l189
  3699  060C                     l188:	
  3700                           ;lcd.c: 50:     else;lcd.c: 50:     else
  3701                           
  3702                           
  3703                           ;lcd.c: 51:         RD5 = 0;;lcd.c: 51:         RD5 = 0;
  3704  060C  1288               	bcf	8,5	;volatile
  3705  060D                     l189:
  3706                           
  3707                           ;lcd.c: 52:     if (a & 64);lcd.c: 52:     if (a & 64)
  3708  060D  1F20               	btfss	Lcd_Port@a,6
  3709  060E  2E10               	goto	u711
  3710  060F  2E11               	goto	u710
  3711  0610                     u711:
  3712  0610  2E13               	goto	l190
  3713  0611                     u710:
  3714  0611                     l1872:
  3715                           
  3716                           ;lcd.c: 53:         RD6 = 1;;lcd.c: 53:         RD6 = 1;
  3717  0611  1708               	bsf	8,6	;volatile
  3718  0612  2E14               	goto	l191
  3719  0613                     l190:	
  3720                           ;lcd.c: 54:     else;lcd.c: 54:     else
  3721                           
  3722                           
  3723                           ;lcd.c: 55:         RD6 = 0;;lcd.c: 55:         RD6 = 0;
  3724  0613  1308               	bcf	8,6	;volatile
  3725  0614                     l191:
  3726                           
  3727                           ;lcd.c: 56:     if (a & 128);lcd.c: 56:     if (a & 128)
  3728  0614  1FA0               	btfss	Lcd_Port@a,7
  3729  0615  2E17               	goto	u721
  3730  0616  2E18               	goto	u720
  3731  0617                     u721:
  3732  0617  2E1A               	goto	l192
  3733  0618                     u720:
  3734  0618                     l1874:
  3735                           
  3736                           ;lcd.c: 57:         RD7 = 1;;lcd.c: 57:         RD7 = 1;
  3737  0618  1788               	bsf	8,7	;volatile
  3738  0619  2E1B               	goto	l194
  3739  061A                     l192:	
  3740                           ;lcd.c: 58:     else;lcd.c: 58:     else
  3741                           
  3742                           
  3743                           ;lcd.c: 59:         RD7 = 0;;lcd.c: 59:         RD7 = 0;
  3744  061A  1388               	bcf	8,7	;volatile
  3745  061B                     l194:
  3746  061B  0008               	return
  3747  061C                     __end_of_Lcd_Port:
  3748                           
  3749                           	psect	text19
  3750  0465                     __ptext19:	
  3751 ;; *************** function _isr *****************
  3752 ;; Defined at:
  3753 ;;		line 325 in file "lab3.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;		None
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3767 ;;      Params:         0       0       0       0       0
  3768 ;;      Locals:         0       0       0       0       0
  3769 ;;      Temps:          4       0       0       0       0
  3770 ;;      Totals:         4       0       0       0       0
  3771 ;;Total ram usage:        4 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    1
  3774 ;; This function calls:
  3775 ;;		_usart_R
  3776 ;; This function is called by:
  3777 ;;		Interrupt level 1
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           
  3782                           ;psect for function _isr
  3783  0465                     _isr:
  3784  0465                     i1l1742:
  3785                           
  3786                           ;lab3.c: 326:     if (ADIF && ADIE) {
  3787  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3788  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3789  0467  1F0C               	btfss	12,6	;volatile
  3790  0468  2C6A               	goto	u54_21
  3791  0469  2C6B               	goto	u54_20
  3792  046A                     u54_21:
  3793  046A  2C89               	goto	i1l1754
  3794  046B                     u54_20:
  3795  046B                     i1l1744:
  3796  046B  1683               	bsf	3,5	;RP0=1, select bank1
  3797  046C  1303               	bcf	3,6	;RP1=0, select bank1
  3798  046D  1F0C               	btfss	12,6	;volatile
  3799  046E  2C70               	goto	u55_21
  3800  046F  2C71               	goto	u55_20
  3801  0470                     u55_21:
  3802  0470  2C89               	goto	i1l1754
  3803  0471                     u55_20:
  3804  0471                     i1l1746:
  3805                           
  3806                           ;lab3.c: 327:         if (ADCON0bits.CHS2) {
  3807  0471  1283               	bcf	3,5	;RP0=0, select bank0
  3808  0472  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0473  1E1F               	btfss	31,4	;volatile
  3810  0474  2C76               	goto	u56_21
  3811  0475  2C77               	goto	u56_20
  3812  0476                     u56_21:
  3813  0476  2C7E               	goto	i1l146
  3814  0477                     u56_20:
  3815  0477                     i1l1748:
  3816                           
  3817                           ;lab3.c: 328:             pot1 = ADRESH;
  3818  0477  081E               	movf	30,w	;volatile
  3819  0478  00F2               	movwf	??_isr
  3820  0479  0872               	movf	??_isr,w
  3821  047A  00B0               	movwf	_pot1
  3822                           
  3823                           ;lab3.c: 329:             ADCON0 = 0B01101001;
  3824  047B  3069               	movlw	105
  3825  047C  009F               	movwf	31	;volatile
  3826                           
  3827                           ;lab3.c: 330:         } else if (ADCON0bits.CHS1) {
  3828  047D  2C88               	goto	i1l1752
  3829  047E                     i1l146:
  3830  047E  1D9F               	btfss	31,3	;volatile
  3831  047F  2C81               	goto	u57_21
  3832  0480  2C82               	goto	u57_20
  3833  0481                     u57_21:
  3834  0481  2C88               	goto	i1l1752
  3835  0482                     u57_20:
  3836  0482                     i1l1750:
  3837                           
  3838                           ;lab3.c: 331:             pot2 = ADRESH;
  3839  0482  081E               	movf	30,w	;volatile
  3840  0483  00F2               	movwf	??_isr
  3841  0484  0872               	movf	??_isr,w
  3842  0485  00AF               	movwf	_pot2
  3843                           
  3844                           ;lab3.c: 332:             ADCON0 = 0B01110001;
  3845  0486  3071               	movlw	113
  3846  0487  009F               	movwf	31	;volatile
  3847  0488                     i1l1752:
  3848                           
  3849                           ;lab3.c: 334:         ADIF = 0;
  3850  0488  130C               	bcf	12,6	;volatile
  3851  0489                     i1l1754:
  3852                           
  3853                           ;lab3.c: 336:     if (RCIE && RCIF) {
  3854  0489  1683               	bsf	3,5	;RP0=1, select bank1
  3855  048A  1303               	bcf	3,6	;RP1=0, select bank1
  3856  048B  1E8C               	btfss	12,5	;volatile
  3857  048C  2C8E               	goto	u58_21
  3858  048D  2C8F               	goto	u58_20
  3859  048E                     u58_21:
  3860  048E  2CB2               	goto	i1l153
  3861  048F                     u58_20:
  3862  048F                     i1l1756:
  3863  048F  1283               	bcf	3,5	;RP0=0, select bank0
  3864  0490  1303               	bcf	3,6	;RP1=0, select bank0
  3865  0491  1E8C               	btfss	12,5	;volatile
  3866  0492  2C94               	goto	u59_21
  3867  0493  2C95               	goto	u59_20
  3868  0494                     u59_21:
  3869  0494  2CB2               	goto	i1l153
  3870  0495                     u59_20:
  3871  0495                     i1l1758:
  3872                           
  3873                           ;lab3.c: 337:         usart_R(&RC_data);
  3874  0495  3076               	movlw	(low (_RC_data| 0))& (0+255)
  3875  0496  120A  118A  2715  120A  118A  	fcall	_usart_R
  3876  049B                     i1l1760:
  3877                           
  3878                           ;lab3.c: 338:         if (43 == RC_data) {
  3879  049B  302B               	movlw	43
  3880  049C  0676               	xorwf	_RC_data,w
  3881  049D  1D03               	btfss	3,2
  3882  049E  2CA0               	goto	u60_21
  3883  049F  2CA1               	goto	u60_20
  3884  04A0                     u60_21:
  3885  04A0  2CA8               	goto	i1l1764
  3886  04A1                     u60_20:
  3887  04A1                     i1l1762:
  3888                           
  3889                           ;lab3.c: 339:             cont++;
  3890  04A1  3001               	movlw	1
  3891  04A2  00F2               	movwf	??_isr
  3892  04A3  0872               	movf	??_isr,w
  3893  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  3894  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  3895  04A6  07AE               	addwf	_cont,f
  3896                           
  3897                           ;lab3.c: 340:         } else if (45 == RC_data) {
  3898  04A7  2CB2               	goto	i1l153
  3899  04A8                     i1l1764:
  3900  04A8  302D               	movlw	45
  3901  04A9  0676               	xorwf	_RC_data,w
  3902  04AA  1D03               	btfss	3,2
  3903  04AB  2CAD               	goto	u61_21
  3904  04AC  2CAE               	goto	u61_20
  3905  04AD                     u61_21:
  3906  04AD  2CB2               	goto	i1l153
  3907  04AE                     u61_20:
  3908  04AE                     i1l1766:
  3909                           
  3910                           ;lab3.c: 341:             cont--;
  3911  04AE  3001               	movlw	1
  3912  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  3913  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  3914  04B1  02AE               	subwf	_cont,f
  3915  04B2                     i1l153:
  3916  04B2  0875               	movf	??_isr+3,w
  3917  04B3  008A               	movwf	10
  3918  04B4  0874               	movf	??_isr+2,w
  3919  04B5  0084               	movwf	4
  3920  04B6  0E73               	swapf	??_isr+1,w
  3921  04B7  0083               	movwf	3
  3922  04B8  0EFE               	swapf	btemp,f
  3923  04B9  0E7E               	swapf	btemp,w
  3924  04BA  0009               	retfie
  3925  04BB                     __end_of_isr:
  3926                           
  3927                           	psect	intentry
  3928  0004                     __pintentry:	
  3929                           ;incstack = 0
  3930                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3931                           
  3932  0004                     interrupt_function:
  3933  007E                     saved_w	set	btemp
  3934  0004  00FE               	movwf	btemp
  3935  0005  0E03               	swapf	3,w
  3936  0006  00F3               	movwf	??_isr+1
  3937  0007  0804               	movf	4,w
  3938  0008  00F4               	movwf	??_isr+2
  3939  0009  080A               	movf	10,w
  3940  000A  00F5               	movwf	??_isr+3
  3941  000B  120A  118A  2C65   	ljmp	_isr
  3942                           
  3943                           	psect	text20
  3944  0715                     __ptext20:	
  3945 ;; *************** function _usart_R *****************
  3946 ;; Defined at:
  3947 ;;		line 68 in file "USART.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  r_data          1    wreg     PTR unsigned char 
  3950 ;;		 -> RC_data(1), 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  r_data          1    1[COMMON] PTR unsigned char 
  3953 ;;		 -> RC_data(1), 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, fsr0l, fsr0h
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3963 ;;      Params:         0       0       0       0       0
  3964 ;;      Locals:         1       0       0       0       0
  3965 ;;      Temps:          1       0       0       0       0
  3966 ;;      Totals:         2       0       0       0       0
  3967 ;;Total ram usage:        2 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_isr
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           
  3977                           ;psect for function _usart_R
  3978  0715                     _usart_R:
  3979                           
  3980                           ;incstack = 0
  3981                           ; Regs used in _usart_R: [wregfsr0]
  3982                           ;usart_R@r_data stored from wreg
  3983  0715  00F1               	movwf	usart_R@r_data
  3984  0716                     i1l1722:
  3985                           
  3986                           ;USART.c: 69:     if (1 == PIR1bits.RCIF) {
  3987  0716  1283               	bcf	3,5	;RP0=0, select bank0
  3988  0717  1303               	bcf	3,6	;RP1=0, select bank0
  3989  0718  1E8C               	btfss	12,5	;volatile
  3990  0719  2F1B               	goto	u53_21
  3991  071A  2F1C               	goto	u53_20
  3992  071B                     u53_21:
  3993  071B  2F22               	goto	i1l270
  3994  071C                     u53_20:
  3995  071C                     i1l1724:
  3996                           
  3997                           ;USART.c: 70:         *r_data = RCREG;
  3998  071C  081A               	movf	26,w	;volatile
  3999  071D  00F0               	movwf	??_usart_R
  4000  071E  0871               	movf	usart_R@r_data,w
  4001  071F  0084               	movwf	4
  4002  0720  0870               	movf	??_usart_R,w
  4003  0721  0080               	movwf	0
  4004  0722                     i1l270:
  4005  0722  0008               	return
  4006  0723                     __end_of_usart_R:
  4007  007E                     btemp	set	126	;btemp
  4008  007E                     wtemp0	set	126
  4009                           
  4010                           	psect	config
  4011                           
  4012                           ;Config register CONFIG1 @ 0x2007
  4013                           ;	Oscillator Selection bits
  4014                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  4015                           ;	Watchdog Timer Enable bit
  4016                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4017                           ;	Power-up Timer Enable bit
  4018                           ;	PWRTE = OFF, PWRT disabled
  4019                           ;	RE3/MCLR pin function select bit
  4020                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4021                           ;	Code Protection bit
  4022                           ;	CP = OFF, Program memory code protection is disabled
  4023                           ;	Data Code Protection bit
  4024                           ;	CPD = OFF, Data memory code protection is disabled
  4025                           ;	Brown Out Reset Selection bits
  4026                           ;	BOREN = OFF, BOR disabled
  4027                           ;	Internal External Switchover bit
  4028                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4029                           ;	Fail-Safe Clock Monitor Enabled bit
  4030                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4031                           ;	Low Voltage Programming Enable bit
  4032                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4033                           ;	In-Circuit Debugger Mode bit
  4034                           ;	DEBUG = 0x1, unprogrammed default
  4035  2007                     	org	8199
  4036  2007  20D1               	dw	8401
  4037                           
  4038                           ;Config register CONFIG2 @ 0x2008
  4039                           ;	Brown-out Reset Selection bit
  4040                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4041                           ;	Flash Program Memory Self Write Enable bits
  4042                           ;	WRT = OFF, Write protection off
  4043  2008                     	org	8200
  4044  2008  3FFF               	dw	16383

Data Sizes:
    Strings     95
    Constant    0
    Data        1
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     13      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    num_ascii@code	PTR unsigned char  size(1) Largest target is 1
		 -> data_t(BANK0[1]), 

    usart_R@r_data	PTR unsigned char  size(1) Largest target is 1
		 -> RC_data(COMMON[1]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_8(CODE[20]), STR_7(CODE[12]), STR_6(CODE[13]), STR_5(CODE[10]), 
		 -> STR_4(CODE[16]), STR_3(CODE[4]), STR_2(CODE[3]), STR_1(CODE[17]), 

    numero@uni	PTR unsigned char  size(1) Largest target is 1
		 -> cont_uni(BANK0[1]), 

    numero@dec	PTR unsigned char  size(1) Largest target is 1
		 -> cont_dec(BANK0[1]), 

    numero@cent	PTR unsigned char  size(1) Largest target is 1
		 -> cont_cent(BANK0[1]), 

    voltaje@volt_d2	PTR unsigned char  size(1) Largest target is 1
		 -> vol_dec2(BANK0[1]), 

    voltaje@volt_d1	PTR unsigned char  size(1) Largest target is 1
		 -> vol_dec1(BANK0[1]), 

    voltaje@volt_u	PTR unsigned char  size(1) Largest target is 1
		 -> vol_u(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_usart_R

Critical Paths under _main in BANK0

    _main->_mostrar_datos
    _mostrar_texto->_Lcd_Set_Cursor
    _mostrar_datos->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _encabezado_usart->_usart_T_virt
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7150
                                             11 BANK0      2     2      0
                           _Lcd_Init
                          _adc_start
                   _encabezado_usart
                      _mostrar_datos
                      _mostrar_texto
                              _setup
                      _usart_T_erase
 ---------------------------------------------------------------------------------
 (1) _usart_T_erase                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
                         _usart_conf
 ---------------------------------------------------------------------------------
 (2) _usart_conf                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mostrar_texto                                        0     0      0    1888
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _mostrar_datos                                        3     3      0    4704
                                              8 BANK0      3     3      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                          _num_ascii
                             _numero
                         _usart_T_nl
                       _usart_T_virt
                            _voltaje
 ---------------------------------------------------------------------------------
 (2) _voltaje                                              5     2      3     797
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _numero                                               5     2      3     527
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            4     3      1    1182
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     697
                                              3 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0     279
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1191
                                              4 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _encabezado_usart                                     2     2      0      31
                                              1 BANK0      2     2      0
                         _usart_T_nl
                       _usart_T_virt
 ---------------------------------------------------------------------------------
 (2) _usart_T_virt                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _usart_T_nl                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_start                                            2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     527
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     279
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     248
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0      55
                                              2 COMMON     4     4      0
                            _usart_R
 ---------------------------------------------------------------------------------
 (6) _usart_R                                              2     2      0      55
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _adc_start
   _encabezado_usart
     _usart_T_nl
     _usart_T_virt
   _mostrar_datos
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _num_ascii
     _numero
     _usart_T_nl
     _usart_T_virt
     _voltaje
   _mostrar_texto
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _setup
     _usart_conf
   _usart_T_erase

 _isr (ROOT)
   _usart_R

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 18:42:30 2021

            numero@data_in 0024                          pc 0002         usart_T_virt@t_data 0020  
                       l97 04C5                         fsr 0004                        l110 0706  
                      l103 064E                        l113 025D                        l122 058A  
                      l107 06E4                        l140 0377                        l212 06D1  
                      l125 0597                        l206 069D                        l134 05D2  
                      l209 054F                        l137 05DF                        l218 0677  
                      l180 05F0                        l181 05F1                        l190 0613  
                      l182 05F7                        l262 0738                        l254 06F5  
                      l191 0614                        l183 05F8                        l192 061A  
                      l184 05FE                        l185 05FF                        l194 061B  
                      l186 0605                        l178 05E9                        l258 0714  
                      l266 072D                        l187 0606                        l179 05EA  
                      l188 060C                        l189 060D                        l197 06B9  
                      l286 03FC                        l922 06E5                        l924 06E9  
                      l926 06EA                        _RB2 0032                        _RB3 0033  
                      _RD0 0040                        _RD1 0041                        _RD2 0042  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        u200 0729  
                      u201 0728                        u520 0734                        u521 0733  
                      u700 060A                        u701 0609                        u710 0611  
                      u711 0610                        u720 0618                        u800 05AB  
                      u721 0617                        u801 05AA                        u650 05E7  
                      u730 0680                        u810 05C3                        u651 05E6  
                      u731 067F                        u811 05C2                        u660 05EE  
                      u740 0692                        u820 05D7                        u661 05ED  
                      u741 0691                        u821 05D6                        u670 05F5  
                      u830 06E3                        u750 0677                        u671 05F4  
                      u831 06E2                        u751 0676                        u680 05FC  
                      u760 0563                        u681 05FB                        u761 0562  
                      u690 0603                        u770 057B                        u691 0602  
                      u771 057A                        u907 006A                        u780 058F  
                      u781 058E                        u917 0080                        u790 0710  
                      u791 070F                        u927 00A6                        u937 00CC  
                      u947 00E2                        u957 00F2                        u877 04DA  
                      u967 012C                        u887 04E9                        u977 0142  
                      u897 04FD                        u987 0168                        u997 018E  
                      _isr 0465                        fsr0 0004                        indf 0000  
          ??_mostrar_datos 0028            ??_mostrar_texto 0076      __size_of_usart_T_virt 000E  
                     l2000 05DE                       l2010 0635                       l2002 061C  
                     l2020 0506                       l2100 0054                       l2012 0638  
                     l2004 0624                       l2022 050C                       l2030 025E  
                     l2110 007A                       l2102 005C                       l2014 063B  
                     l2006 0627                       l2024 0516                       l2040 0298  
                     l2032 0268                       l2200 021E                       l2120 00AA  
                     l2112 0084                       l2104 0064                       l2016 0640  
                     l2008 0633                       l1064 0723                       l2026 0526  
                     l2050 02CE                       l2042 029E                       l2034 026E  
                     l2210 024E                       l2202 0228                       l2130 00D6  
                     l2122 00B6                       l2114 0090                       l2106 006E  
                     l2018 0648                       l1066 0729                       l2028 052C  
                     l2060 030E                       l2052 02DE                       l2044 02AE  
                     l2036 027E                       l2212 0253                       l2204 0234  
                     l2140 010A                       l2132 00DC                       l2124 00BE  
                     l2116 0098                       l2108 0074                       l2220 04BB  
                     l2070 0348                       l2062 0318                       l2054 02E8  
                     l2046 02B8                       l2038 0288                       l2206 023C  
                     l2150 0136                       l2142 0116                       l2134 00E6  
                     l2126 00C6                       l2118 00A0                       l2222 04D4  
                     l2080 06DD                       l2072 0358                       l2064 0328  
                     l2056 02F8                       l2048 02C8                       l2208 0244  
                     l2160 0162                       l2152 013C                       l2144 011E  
                     l2136 00EC                       l2128 00D0                       l2224 04DE  
                     l2082 06E3                       l1530 072E                       l2074 035E  
                     l2066 032E                       l2058 02FE                       l2330 03DC  
                     l2170 0192                       l2162 016C                       l2154 0146  
                     l2146 0126                       l2138 00F6                       l2090 0031  
                     l2226 04ED                       l1532 0734                       l2076 036D  
                     l2068 033E                       l2180 01B8                       l2172 0198  
                     l2164 0178                       l2156 0152                       l2148 0130  
                     l2092 0034                       l2084 06F6                       l2228 04F2  
                     l2078 06D2                       l2190 01F0                       l2182 01BE  
                     l2174 019E                       l2166 0180                       l2158 015A  
                     l2094 0035                       l2086 0700                       l2192 01F8  
                     l2184 01C8                       l2176 01A8                       l2168 0188  
                     l2096 0036                       l2088 0027                       l2194 0202  
                     l2186 01DC                       l2178 01AE                       l2098 0048  
                     l1900 0685                       l2196 020E                       l2188 01E8  
                     l1902 068C                       l1910 0655                       l2198 0216  
                     l1904 0692                       l1912 0662                       l1920 055D  
                     l1906 0697                       l1914 066A                       l1930 057B  
                     l1922 0563                       l1860 05E7                       l1908 0652  
                     l1940 037B                       l1932 0582                       l1924 056A  
                     l1916 0553                       l1870 060A                       l1862 05EE  
                     l1950 039C                       l1942 037C                       l1934 0584  
                     l1926 056C                       l1918 0554                       l1872 0611  
                     l1864 05F5                       l1880 06C4                       l1960 03C4  
                     l1952 03A4                       l1944 0384                       l1936 058F  
                     l1928 0575                       l1874 0618                       l1866 05FC  
                     l1858 05E3                       l1890 06A8                       l1882 06C7  
                     l1962 03CC                       l1954 03AC                       l1946 038C  
                     l1938 0596                       l1868 0603                       l1892 06AB  
                     l1884 06CE                       l1876 06BD                       l1956 03B4  
                     l1948 0394                       l1980 059C                       l1894 06B6  
                     l1886 06A1                       l1974 070A                       l1878 06BE  
                     l1958 03BC                       l1966 03D4                       l1990 05BD  
                     l1982 05A5                       l1888 06A2                       l1976 0710  
                     l1896 067B                       l1992 05C3                       l1984 05AB  
                     l1898 0680                       l1994 05CA                       l1986 05B2  
                     l1978 059B                       l1996 05CC                       l1988 05B4  
                     l1998 05D7                       _ADIE 0466                       _ADIF 0066  
                     ?_isr 0070                       STR_1 041A                       STR_2 0462  
                     STR_3 045E                       STR_4 042B                       STR_5 0454  
                     STR_6 043B                       STR_7 0448                       STR_8 0406  
                     u1007 01A4                       u1017 01B4                       u1107 0284  
                     u1027 01C4                       u1117 0294                       u1037 01FE  
                     u1207 0324                       u1127 02A4                       u1047 0224  
                     u1217 0334                       u1137 02B4                       u1057 024A  
                     u1307 06B1                       u1227 0344                       u1147 02C4  
                     u1067 0259                       u1237 0354                       u1157 02D4  
                     u1077 06CB                       u1247 0364                       u1167 02E4  
                     u1087 0264                       u1257 0373                       u1177 02F4  
                     u1097 0274                       u1267 06D8                       u1187 0304  
                     u1277 0512                       u1197 0314                       u1287 0522  
                     u1297 0532                       _PIE1 008C                       _RCIE 0465  
                     _RCIF 0065          ?_Lcd_Write_String 0070                       _cont 002E  
                     _main 04BB                       _pot1 0030                       _pot2 002F  
                     _temp 002D                       btemp 007E                       start 000E  
       ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 06BA     __size_of_usart_T_erase 000B  
                    ??_isr 0072                      ?_main 0070               _usart_T_virt 0707  
                    i1l153 04B2                      i1l146 047E                      i1l270 0722  
                    _RCREG 001A                      _RCSTA 0018                      _SPBRG 0099  
                    _PORTB 0006                      _PORTD 0008                      u60_20 04A1  
                    u60_21 04A0                      u53_20 071C                      u61_20 04AE  
                    u53_21 071B                      u61_21 04AD                      u54_20 046B  
                    u54_21 046A                      u55_20 0471                      u55_21 0470  
                    u56_20 0477                      u56_21 0476                      u57_20 0482  
                    u57_21 0481    __size_of_Lcd_Set_Cursor 0026                      _TRISB 0086  
                    _TRISD 0088                      u58_20 048F                      u58_21 048E  
                    u59_20 0495                      u59_21 0494                      _TXREG 0019  
                    _TXSTA 0098  __size_of_encabezado_usart 011A                      _setup 061C  
                    _vol_u 0037                      pclath 000A                      status 0003  
          __end_of_usart_R 0723                      wtemp0 007E            __end_of_voltaje 0598  
         __end_of_Lcd_Init 0550           __end_of_Lcd_Port 061C            __initialization 0011  
             __end_of_main 0506                     ??_main 002B                     _ADCON0 001F  
                   _ADCON1 009F              _usart_T_erase 0723                     _ADRESH 001E  
                   ?_setup 0070                     _ANSELH 0189                     i1l1722 0716  
                   i1l1724 071C                     i1l1750 0482                     i1l1742 0465  
                   i1l1760 049B                     i1l1752 0488                     i1l1744 046B  
                   i1l1762 04A1                     i1l1746 0471                     i1l1754 0489  
                   i1l1764 04A8                     i1l1756 048F                     i1l1748 0477  
                   i1l1766 04AE                     i1l1758 0495                     _INTCON 000B  
                ??_Lcd_Cmd 0021                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0018  
                   _data_t 0031                     _numero 0598               __pdataCOMMON 0077  
                   saved_w 007E             ?_usart_T_erase 0070                  ??_usart_R 0070  
                ??_voltaje 0023            Lcd_Set_Cursor@a 0026            Lcd_Set_Cursor@b 0024  
  __end_of__initialization 0023         __size_of_adc_start 0013             __pcstackCOMMON 0070  
            __end_of_setup 064F             _Lcd_Set_Cursor 0678                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070           _encabezado_usart 025E                    ??_setup 0020  
               __pbssBANK0 002D                 __pmaintext 04BB                 __pintentry 0004  
                  _BAUDCTL 0187  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 069E  
                  ?_numero 0020         __size_of_num_ascii 0085          __end_of_adc_start 06E5  
          ??_usart_T_erase 0076                 ??_Lcd_Init 0024                 ??_Lcd_Port 0076  
    __end_of_mostrar_datos 025E                    _RC_data 0076                 __stringtab 0400  
    __end_of_mostrar_texto 0707             _Lcd_Write_Char 06BA                    _Lcd_Cmd 069E  
                  _TX_data 0077            ?_Lcd_Set_Cursor 0024                    __ptext1 0723  
                  __ptext2 061C                    __ptext3 06E5                    __ptext4 06F6  
                  __ptext5 0027                    __ptext6 0550                    __ptext7 0598  
                  __ptext8 0378                    __ptext9 064F            __size_of_numero 0048  
             __size_of_isr 0056                    _usart_R 0715                    _voltaje 0550  
   __end_of_Lcd_Write_Char 06D2       end_of_initialization 0023          __end_of_num_ascii 03FD  
                Lcd_Port@a 0020            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0025  
        Lcd_Write_String@i 0023                 _usart_T_nl 072E                  _TXSTAbits 0098  
               _usart_conf 06E5   __end_of_encabezado_usart 0378             voltaje@data_in 0024  
         _Lcd_Write_String 064F              __pidataCOMMON 0739             __end_of_numero 05E0  
      start_initialization 0011                __end_of_isr 04BB             voltaje@volt_d1 0021  
           voltaje@volt_d2 0022          __size_of_Lcd_Init 004A          __size_of_Lcd_Port 003C  
            usart_R@r_data 0071            Lcd_Write_Char@a 0022                   ??_numero 0023  
            ?_usart_T_virt 0070                __pbssCOMMON 0076                  ___latbits 0002  
            __pcstackBANK0 0020                  _adc_start 06D2                   ?_Lcd_Cmd 0070  
              ?_usart_T_nl 0070                ?_usart_conf 0070           ??_Lcd_Set_Cursor 0025  
           ??_usart_T_virt 0076                  __pstrings 0400                  _cont_cent 0034  
           num_ascii@value 0023      __end_of_usart_T_erase 072E                   ?_usart_R 0070  
               ?_adc_start 0070                   ?_voltaje 0020             __size_of_setup 0033  
        interrupt_function 0004                   Lcd_Cmd@a 0023                   _PIR1bits 000C  
                _num_ascii 0378     __size_of_mostrar_datos 0237                 numero@cent 0020  
   __size_of_mostrar_texto 0011                 _ADCON0bits 001F                __stringbase 0405  
      __size_of_usart_T_nl 000B           ??_Lcd_Write_Char 0021        __size_of_usart_conf 0011  
                 _Lcd_Init 0506                   _Lcd_Port 05E0   __end_of_Lcd_Write_String 0678  
            voltaje@volt_u 0020           __size_of_Lcd_Cmd 001C                 ?_num_ascii 0020  
        ?_encabezado_usart 0070         ??_encabezado_usart 0021         __end_of__stringtab 0406  
                 __ptext10 06BA                   __ptext11 0678                   __ptext20 0715  
                 __ptext12 025E                   __ptext13 0707                   __ptext14 072E  
                 __ptext15 06D2                   __ptext16 0506                   __ptext17 069E  
                 __ptext18 05E0                   __ptext19 0465                ??_adc_start 0020  
                 _cont_dec 0033              num_ascii@code 0020              _mostrar_datos 0027  
         __size_of_usart_R 000E                   _cont_uni 0032           __size_of_voltaje 0048  
            _mostrar_texto 06F6              __size_of_main 004B       __end_of_usart_T_virt 0715  
                numero@dec 0021                  numero@uni 0022                   _vol_dec1 0036  
                 _vol_dec2 0035             ?_mostrar_datos 0070                   intlevel1 0000  
           ?_mostrar_texto 0070               ??_usart_T_nl 0076               ??_usart_conf 0076  
                stringcode 0400                ??_num_ascii 0021         Lcd_Set_Cursor@temp 0027  
       __end_of_usart_T_nl 0739                   stringdir 0400                   stringtab 0400  
       __end_of_usart_conf 06F6  
