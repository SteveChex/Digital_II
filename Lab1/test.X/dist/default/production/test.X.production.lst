

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Jan 24 12:18:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0006                     _PORTB	set	6
   204  0005                     _PORTA	set	5
   205  0007                     _PORTC	set	7
   206  0008                     _PORTD	set	8
   207  0006                     _PORTBbits	set	6
   208  0086                     _TRISB	set	134
   209  0088                     _TRISD	set	136
   210  0087                     _TRISC	set	135
   211  0085                     _TRISA	set	133
   212  0189                     _ANSELH	set	393
   213  0188                     _ANSEL	set	392
   214                           
   215                           	psect	cinit
   216  07F8                     start_initialization:	
   217                           ; #config settings
   218                           
   219  07F8                     __initialization:
   220                           
   221                           ; Clear objects allocated to COMMON
   222  07F8  01F6               	clrf	__pbssCOMMON& (0+127)
   223  07F9  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   224  07FA  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   225  07FB  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   226  07FC                     end_of_initialization:	
   227                           ;End of C runtime variable initialization code
   228                           
   229  07FC                     __end_of__initialization:
   230  07FC  0183               	clrf	3
   231  07FD  120A  118A  2F78   	ljmp	_main	;jump to C main() function
   232                           
   233                           	psect	bssCOMMON
   234  0076                     __pbssCOMMON:
   235  0076                     _start:
   236  0076                     	ds	2
   237  0078                     _win:
   238  0078                     	ds	2
   239                           
   240                           	psect	cstackCOMMON
   241  0070                     __pcstackCOMMON:
   242  0070                     ?_setup:
   243  0070                     ??_setup:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?_semaforo:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ??_semaforo:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?_main:	
   253                           ; 1 bytes @ 0x0
   254                           
   255                           
   256                           ; 1 bytes @ 0x0
   257  0070                     	ds	3
   258  0073                     ??_main:
   259                           
   260                           ; 1 bytes @ 0x3
   261  0073                     	ds	3
   262                           
   263                           	psect	maintext
   264  0778                     __pmaintext:	
   265 ;;
   266 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   267 ;;
   268 ;; *************** function _main *****************
   269 ;; Defined at:
   270 ;;		line 48 in file "testcode.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;		None
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, status,2, status,0, pclath, cstack
   279 ;; Tracked objects:
   280 ;;		On entry : B00/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   284 ;;      Params:         0       0       0       0       0
   285 ;;      Locals:         0       0       0       0       0
   286 ;;      Temps:          3       0       0       0       0
   287 ;;      Totals:         3       0       0       0       0
   288 ;;Total ram usage:        3 bytes
   289 ;; Hardware stack levels required when called:    1
   290 ;; This function calls:
   291 ;;		_semaforo
   292 ;;		_setup
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           
   299                           ;psect for function _main
   300  0778                     _main:
   301  0778                     l697:	
   302                           ;incstack = 0
   303                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   304                           
   305                           
   306                           ;testcode.c: 50:     setup();
   307  0778  120A  118A  2729  120A  118A  	fcall	_setup
   308  077D                     l699:
   309                           
   310                           ;testcode.c: 53:         if (PORTBbits.RB0 == 1) start = 1;
   311  077D  1283               	bcf	3,5	;RP0=0, select bank0
   312  077E  1303               	bcf	3,6	;RP1=0, select bank0
   313  077F  1C06               	btfss	6,0	;volatile
   314  0780  2F82               	goto	u11
   315  0781  2F83               	goto	u10
   316  0782                     u11:
   317  0782  2F87               	goto	l703
   318  0783                     u10:
   319  0783                     l701:
   320  0783  3001               	movlw	1
   321  0784  00F6               	movwf	_start
   322  0785  3000               	movlw	0
   323  0786  00F7               	movwf	_start+1
   324  0787                     l703:
   325                           
   326                           ;testcode.c: 54:         if (start == 1) {
   327  0787  0376               	decf	_start,w
   328  0788  0477               	iorwf	_start+1,w
   329  0789  1D03               	btfss	3,2
   330  078A  2F8C               	goto	u21
   331  078B  2F8D               	goto	u20
   332  078C                     u21:
   333  078C  2F7D               	goto	l699
   334  078D                     u20:
   335  078D                     l705:
   336                           
   337                           ;testcode.c: 55:             semaforo();
   338  078D  120A  118A  273B  120A  118A  	fcall	_semaforo
   339                           
   340                           ;testcode.c: 56:             while (win == 0) {
   341  0792  2FD3               	goto	l725
   342  0793                     l41:
   343                           
   344                           ;testcode.c: 57:                 if (PORTBbits.RB1 == 1) {
   345  0793  1283               	bcf	3,5	;RP0=0, select bank0
   346  0794  1303               	bcf	3,6	;RP1=0, select bank0
   347  0795  1C86               	btfss	6,1	;volatile
   348  0796  2F98               	goto	u31
   349  0797  2F99               	goto	u30
   350  0798                     u31:
   351  0798  2FB4               	goto	l715
   352  0799                     u30:
   353  0799                     l707:
   354                           
   355                           ;testcode.c: 58:                     _delay((unsigned long)((400)*(8000000/4000.0)));
   356  0799  3005               	movlw	5
   357  079A  00F5               	movwf	??_main+2
   358  079B  300F               	movlw	15
   359  079C  00F4               	movwf	??_main+1
   360  079D  30F1               	movlw	241
   361  079E  00F3               	movwf	??_main
   362  079F                     u107:
   363  079F  0BF3               	decfsz	??_main,f
   364  07A0  2F9F               	goto	u107
   365  07A1  0BF4               	decfsz	??_main+1,f
   366  07A2  2F9F               	goto	u107
   367  07A3  0BF5               	decfsz	??_main+2,f
   368  07A4  2F9F               	goto	u107
   369  07A5                     l709:
   370                           
   371                           ;testcode.c: 59:                     PORTD = PORTD << 1;
   372  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   373  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   374  07A7  0808               	movf	8,w	;volatile
   375  07A8  00F3               	movwf	??_main
   376  07A9  0773               	addwf	??_main,w
   377  07AA  0088               	movwf	8	;volatile
   378  07AB                     l711:
   379                           
   380                           ;testcode.c: 60:                     if (PORTD == 0) win = 1;
   381  07AB  0808               	movf	8,w	;volatile
   382  07AC  1D03               	btfss	3,2
   383  07AD  2FAF               	goto	u41
   384  07AE  2FB0               	goto	u40
   385  07AF                     u41:
   386  07AF  2FB4               	goto	l715
   387  07B0                     u40:
   388  07B0                     l713:
   389  07B0  3001               	movlw	1
   390  07B1  00F8               	movwf	_win
   391  07B2  3000               	movlw	0
   392  07B3  00F9               	movwf	_win+1
   393  07B4                     l715:
   394                           
   395                           ;testcode.c: 62:                 if (PORTBbits.RB2 == 1) {
   396  07B4  1D06               	btfss	6,2	;volatile
   397  07B5  2FB7               	goto	u51
   398  07B6  2FB8               	goto	u50
   399  07B7                     u51:
   400  07B7  2FD3               	goto	l725
   401  07B8                     u50:
   402  07B8                     l717:
   403                           
   404                           ;testcode.c: 63:                     _delay((unsigned long)((400)*(8000000/4000.0)));
   405  07B8  3005               	movlw	5
   406  07B9  00F5               	movwf	??_main+2
   407  07BA  300F               	movlw	15
   408  07BB  00F4               	movwf	??_main+1
   409  07BC  30F1               	movlw	241
   410  07BD  00F3               	movwf	??_main
   411  07BE                     u117:
   412  07BE  0BF3               	decfsz	??_main,f
   413  07BF  2FBE               	goto	u117
   414  07C0  0BF4               	decfsz	??_main+1,f
   415  07C1  2FBE               	goto	u117
   416  07C2  0BF5               	decfsz	??_main+2,f
   417  07C3  2FBE               	goto	u117
   418  07C4                     l719:
   419                           
   420                           ;testcode.c: 64:                     PORTC = PORTC << 1;
   421  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   422  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   423  07C6  0807               	movf	7,w	;volatile
   424  07C7  00F3               	movwf	??_main
   425  07C8  0773               	addwf	??_main,w
   426  07C9  0087               	movwf	7	;volatile
   427  07CA                     l721:
   428                           
   429                           ;testcode.c: 65:                     if (PORTC == 0) win = 1;
   430  07CA  0807               	movf	7,w	;volatile
   431  07CB  1D03               	btfss	3,2
   432  07CC  2FCE               	goto	u61
   433  07CD  2FCF               	goto	u60
   434  07CE                     u61:
   435  07CE  2FD3               	goto	l725
   436  07CF                     u60:
   437  07CF                     l723:
   438  07CF  3001               	movlw	1
   439  07D0  00F8               	movwf	_win
   440  07D1  3000               	movlw	0
   441  07D2  00F9               	movwf	_win+1
   442  07D3                     l725:
   443                           
   444                           ;testcode.c: 56:             while (win == 0) {
   445  07D3  0878               	movf	_win,w
   446  07D4  0479               	iorwf	_win+1,w
   447  07D5  1903               	btfsc	3,2
   448  07D6  2FD8               	goto	u71
   449  07D7  2FD9               	goto	u70
   450  07D8                     u71:
   451  07D8  2F93               	goto	l41
   452  07D9                     u70:
   453  07D9                     l46:
   454                           
   455                           ;testcode.c: 69:             PORTBbits.RB3 = 0;
   456  07D9  1283               	bcf	3,5	;RP0=0, select bank0
   457  07DA  1303               	bcf	3,6	;RP1=0, select bank0
   458  07DB  1186               	bcf	6,3	;volatile
   459                           
   460                           ;testcode.c: 70:             PORTBbits.RB4 = 0;
   461  07DC  1206               	bcf	6,4	;volatile
   462                           
   463                           ;testcode.c: 71:             PORTBbits.RB5 = 0;
   464  07DD  1286               	bcf	6,5	;volatile
   465  07DE                     l727:
   466                           
   467                           ;testcode.c: 73:             if (PORTD > PORTC) {
   468  07DE  0808               	movf	8,w	;volatile
   469  07DF  0207               	subwf	7,w	;volatile
   470  07E0  1803               	skipnc
   471  07E1  2FE3               	goto	u81
   472  07E2  2FE4               	goto	u80
   473  07E3                     u81:
   474  07E3  2FE7               	goto	l731
   475  07E4                     u80:
   476  07E4                     l729:
   477                           
   478                           ;testcode.c: 74:                 PORTBbits.RB6 = 1;
   479  07E4  1706               	bsf	6,6	;volatile
   480                           
   481                           ;testcode.c: 75:                 PORTBbits.RB7 = 0;
   482  07E5  1386               	bcf	6,7	;volatile
   483                           
   484                           ;testcode.c: 76:             } else if (PORTD < PORTC) {
   485  07E6  2FF2               	goto	l735
   486  07E7                     l731:
   487  07E7  0807               	movf	7,w	;volatile
   488  07E8  0208               	subwf	8,w	;volatile
   489  07E9  1803               	skipnc
   490  07EA  2FEC               	goto	u91
   491  07EB  2FED               	goto	u90
   492  07EC                     u91:
   493  07EC  2FF0               	goto	l49
   494  07ED                     u90:
   495  07ED                     l733:
   496                           
   497                           ;testcode.c: 77:                 PORTBbits.RB6 = 0;
   498  07ED  1306               	bcf	6,6	;volatile
   499                           
   500                           ;testcode.c: 78:                 PORTBbits.RB7 = 1;
   501  07EE  1786               	bsf	6,7	;volatile
   502                           
   503                           ;testcode.c: 79:             } else {
   504  07EF  2FF2               	goto	l735
   505  07F0                     l49:
   506                           
   507                           ;testcode.c: 80:                 PORTBbits.RB6 = 1;
   508  07F0  1706               	bsf	6,6	;volatile
   509                           
   510                           ;testcode.c: 81:                 PORTBbits.RB7 = 1;
   511  07F1  1786               	bsf	6,7	;volatile
   512  07F2                     l735:
   513                           
   514                           ;testcode.c: 83:             start = 0;
   515  07F2  01F6               	clrf	_start
   516  07F3  01F7               	clrf	_start+1
   517  07F4  2F7D               	goto	l699
   518  07F5  120A  118A  2800   	ljmp	start
   519  07F8                     __end_of_main:
   520                           
   521                           	psect	text1
   522  0729                     __ptext1:	
   523 ;; *************** function _setup *****************
   524 ;; Defined at:
   525 ;;		line 92 in file "testcode.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, status,2
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           
   553                           ;psect for function _setup
   554  0729                     _setup:
   555  0729                     l651:	
   556                           ;incstack = 0
   557                           ; Regs used in _setup: [wreg+status,2]
   558                           
   559                           
   560                           ;testcode.c: 93:     ANSEL = 0;
   561  0729  1683               	bsf	3,5	;RP0=1, select bank3
   562  072A  1703               	bsf	3,6	;RP1=1, select bank3
   563  072B  0188               	clrf	8	;volatile
   564                           
   565                           ;testcode.c: 94:     ANSELH = 0;
   566  072C  0189               	clrf	9	;volatile
   567                           
   568                           ;testcode.c: 95:     TRISA = 0;
   569  072D  1683               	bsf	3,5	;RP0=1, select bank1
   570  072E  1303               	bcf	3,6	;RP1=0, select bank1
   571  072F  0185               	clrf	5	;volatile
   572                           
   573                           ;testcode.c: 96:     TRISC = 0;
   574  0730  0187               	clrf	7	;volatile
   575                           
   576                           ;testcode.c: 97:     TRISD = 0;
   577  0731  0188               	clrf	8	;volatile
   578  0732                     l653:
   579                           
   580                           ;testcode.c: 98:     TRISB = 0B00000111;
   581  0732  3007               	movlw	7
   582  0733  0086               	movwf	6	;volatile
   583  0734                     l655:
   584                           
   585                           ;testcode.c: 99:     PORTA = 0;
   586  0734  1283               	bcf	3,5	;RP0=0, select bank0
   587  0735  1303               	bcf	3,6	;RP1=0, select bank0
   588  0736  0185               	clrf	5	;volatile
   589  0737                     l657:
   590                           
   591                           ;testcode.c: 100:     PORTB = 0;
   592  0737  0186               	clrf	6	;volatile
   593  0738                     l659:
   594                           
   595                           ;testcode.c: 101:     PORTC = 0;
   596  0738  0187               	clrf	7	;volatile
   597  0739                     l661:
   598                           
   599                           ;testcode.c: 102:     PORTD = 0;
   600  0739  0188               	clrf	8	;volatile
   601  073A                     l56:
   602  073A  0008               	return
   603  073B                     __end_of_setup:
   604                           
   605                           	psect	text2
   606  073B                     __ptext2:	
   607 ;; *************** function _semaforo *****************
   608 ;; Defined at:
   609 ;;		line 109 in file "testcode.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, status,2
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         0       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0
   625 ;;      Temps:          3       0       0       0       0
   626 ;;      Totals:         3       0       0       0       0
   627 ;;Total ram usage:        3 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _semaforo
   638  073B                     _semaforo:
   639  073B                     l663:	
   640                           ;incstack = 0
   641                           ; Regs used in _semaforo: [wreg+status,2]
   642                           
   643                           
   644                           ;testcode.c: 110:     _delay((unsigned long)((300)*(8000000/4000.0)));
   645  073B  3004               	movlw	4
   646  073C  00F2               	movwf	??_semaforo+2
   647  073D  300C               	movlw	12
   648  073E  00F1               	movwf	??_semaforo+1
   649  073F  3033               	movlw	51
   650  0740  00F0               	movwf	??_semaforo
   651  0741                     u127:
   652  0741  0BF0               	decfsz	??_semaforo,f
   653  0742  2F41               	goto	u127
   654  0743  0BF1               	decfsz	??_semaforo+1,f
   655  0744  2F41               	goto	u127
   656  0745  0BF2               	decfsz	??_semaforo+2,f
   657  0746  2F41               	goto	u127
   658  0747  2F48               	nop2
   659  0748                     l665:
   660                           
   661                           ;testcode.c: 111:     win = 0;
   662  0748  01F8               	clrf	_win
   663  0749  01F9               	clrf	_win+1
   664  074A                     l667:
   665                           
   666                           ;testcode.c: 112:     PORTC = 0;
   667  074A  1283               	bcf	3,5	;RP0=0, select bank0
   668  074B  1303               	bcf	3,6	;RP1=0, select bank0
   669  074C  0187               	clrf	7	;volatile
   670  074D                     l669:
   671                           
   672                           ;testcode.c: 113:     PORTD = 0;
   673  074D  0188               	clrf	8	;volatile
   674  074E                     l671:
   675                           
   676                           ;testcode.c: 114:     PORTBbits.RB6 = 0;
   677  074E  1306               	bcf	6,6	;volatile
   678  074F                     l673:
   679                           
   680                           ;testcode.c: 115:     PORTBbits.RB7 = 0;
   681  074F  1386               	bcf	6,7	;volatile
   682  0750                     l675:
   683                           
   684                           ;testcode.c: 117:     PORTBbits.RB3 = 1;
   685  0750  1586               	bsf	6,3	;volatile
   686  0751                     l677:
   687                           
   688                           ;testcode.c: 118:     PORTBbits.RB4 = 0;
   689  0751  1206               	bcf	6,4	;volatile
   690  0752                     l679:
   691                           
   692                           ;testcode.c: 119:     PORTBbits.RB5 = 0;
   693  0752  1286               	bcf	6,5	;volatile
   694  0753                     l681:
   695                           
   696                           ;testcode.c: 120:     _delay((unsigned long)((400)*(8000000/4000.0)));
   697  0753  3005               	movlw	5
   698  0754  00F2               	movwf	??_semaforo+2
   699  0755  300F               	movlw	15
   700  0756  00F1               	movwf	??_semaforo+1
   701  0757  30F1               	movlw	241
   702  0758  00F0               	movwf	??_semaforo
   703  0759                     u137:
   704  0759  0BF0               	decfsz	??_semaforo,f
   705  075A  2F59               	goto	u137
   706  075B  0BF1               	decfsz	??_semaforo+1,f
   707  075C  2F59               	goto	u137
   708  075D  0BF2               	decfsz	??_semaforo+2,f
   709  075E  2F59               	goto	u137
   710  075F                     l683:
   711                           
   712                           ;testcode.c: 121:     PORTBbits.RB3 = 0;
   713  075F  1283               	bcf	3,5	;RP0=0, select bank0
   714  0760  1303               	bcf	3,6	;RP1=0, select bank0
   715  0761  1186               	bcf	6,3	;volatile
   716  0762                     l685:
   717                           
   718                           ;testcode.c: 122:     PORTBbits.RB4 = 1;
   719  0762  1606               	bsf	6,4	;volatile
   720  0763                     l687:
   721                           
   722                           ;testcode.c: 123:     _delay((unsigned long)((700)*(8000000/4000.0)));
   723  0763  3008               	movlw	8
   724  0764  00F2               	movwf	??_semaforo+2
   725  0765  301B               	movlw	27
   726  0766  00F1               	movwf	??_semaforo+1
   727  0767  3027               	movlw	39
   728  0768  00F0               	movwf	??_semaforo
   729  0769                     u147:
   730  0769  0BF0               	decfsz	??_semaforo,f
   731  076A  2F69               	goto	u147
   732  076B  0BF1               	decfsz	??_semaforo+1,f
   733  076C  2F69               	goto	u147
   734  076D  0BF2               	decfsz	??_semaforo+2,f
   735  076E  2F69               	goto	u147
   736  076F                     l689:
   737                           
   738                           ;testcode.c: 124:     PORTBbits.RB4 = 0;
   739  076F  1283               	bcf	3,5	;RP0=0, select bank0
   740  0770  1303               	bcf	3,6	;RP1=0, select bank0
   741  0771  1206               	bcf	6,4	;volatile
   742  0772                     l691:
   743                           
   744                           ;testcode.c: 125:     PORTBbits.RB5 = 1;
   745  0772  1686               	bsf	6,5	;volatile
   746  0773                     l693:
   747                           
   748                           ;testcode.c: 126:     PORTC = 1;
   749  0773  3001               	movlw	1
   750  0774  0087               	movwf	7	;volatile
   751  0775                     l695:
   752                           
   753                           ;testcode.c: 127:     PORTD = 1;
   754  0775  3001               	movlw	1
   755  0776  0088               	movwf	8	;volatile
   756  0777                     l59:
   757  0777  0008               	return
   758  0778                     __end_of_semaforo:
   759  007E                     btemp	set	126	;btemp
   760  007E                     wtemp0	set	126
   761                           
   762                           	psect	config
   763                           
   764                           ;Config register CONFIG1 @ 0x2007
   765                           ;	Oscillator Selection bits
   766                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   767                           ;	Watchdog Timer Enable bit
   768                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   769                           ;	Power-up Timer Enable bit
   770                           ;	PWRTE = OFF, PWRT disabled
   771                           ;	RE3/MCLR pin function select bit
   772                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   773                           ;	Code Protection bit
   774                           ;	CP = OFF, Program memory code protection is disabled
   775                           ;	Data Code Protection bit
   776                           ;	CPD = OFF, Data memory code protection is disabled
   777                           ;	Brown Out Reset Selection bits
   778                           ;	BOREN = OFF, BOR disabled
   779                           ;	Internal External Switchover bit
   780                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   781                           ;	Fail-Safe Clock Monitor Enabled bit
   782                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   783                           ;	Low Voltage Programming Enable bit
   784                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   785                           ;	In-Circuit Debugger Mode bit
   786                           ;	DEBUG = 0x1, unprogrammed default
   787  2007                     	org	8199
   788  2007  20D1               	dw	8401
   789                           
   790                           ;Config register CONFIG2 @ 0x2008
   791                           ;	Brown-out Reset Selection bit
   792                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   793                           ;	Flash Program Memory Self Write Enable bits
   794                           ;	WRT = OFF, Write protection off
   795  2008                     	org	8200
   796  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_semaforo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 COMMON     3     3      0
                           _semaforo
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _semaforo                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _semaforo
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Jan 24 12:18:47 2021

                     l41 0793                       l46 07D9                       l56 073A  
                     l49 07F0                       l59 0777                       u10 0783  
                     u11 0782                       u20 078D                       u21 078C  
                     u30 0799                       u31 0798                       u40 07B0  
                     u41 07AF                       u50 07B8                       u51 07B7  
                     u60 07CF                       u61 07CE                       u70 07D9  
                     u71 07D8                       u80 07E4                       u81 07E3  
                     u90 07ED                       u91 07EC                      l701 0783  
                    l711 07AB                      l703 0787                      l721 07CA  
                    l713 07B0                      l705 078D                      l651 0729  
                    l731 07E7                      l723 07CF                      l707 0799  
                    l715 07B4                      l661 0739                      l653 0732  
                    l733 07ED                      l717 07B8                      l709 07A5  
                    l725 07D3                      l671 074E                      l663 073B  
                    l655 0734                      l735 07F2                      l727 07DE  
                    l719 07C4                      l681 0753                      l673 074F  
                    l665 0748                      l657 0737                      l729 07E4  
                    l691 0772                      l683 075F                      l675 0750  
                    l667 074A                      l659 0738                      l693 0773  
                    l685 0762                      l677 0751                      l669 074D  
                    l695 0775                      l687 0763                      l679 0752  
                    l689 076F                      l697 0778                      l699 077D  
                    u107 079F                      u117 07BE                      u127 0741  
                    u137 0759                      u147 0769                      _win 0078  
                   _main 0778                     btemp 007E                     start 0000  
                  ?_main 0070                    _ANSEL 0188                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _setup 0729                    _start 0076  
                  status 0003                    wtemp0 007E          __initialization 07F8  
           __end_of_main 07F8                   ??_main 0073                   ?_setup 0070  
                 _ANSELH 0189         __end_of_semaforo 0778  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 073B                  ??_setup 0070  
             __pmaintext 0778                ?_semaforo 0070                  __ptext1 0729  
                __ptext2 073B     end_of_initialization 07FC               ??_semaforo 0070  
              _PORTBbits 0006      start_initialization 07F8              __pbssCOMMON 0076  
              ___latbits 0002        __size_of_semaforo 003D           __size_of_setup 0012  
          __size_of_main 0080                 _semaforo 073B  
