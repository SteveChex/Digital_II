

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 17 11:35:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  001E                     _ADRESH	set	30
   285  000B                     _INTCON	set	11
   286  000C                     _PIR1bits	set	12
   287  001F                     _ADCON0bits	set	31
   288  001F                     _ADCON0	set	31
   289  0006                     _PORTB	set	6
   290  0008                     _PORTD	set	8
   291  0066                     _ADIF	set	102
   292  008C                     _PIE1	set	140
   293  009F                     _ADCON1	set	159
   294  0088                     _TRISD	set	136
   295  0086                     _TRISB	set	134
   296  0189                     _ANSELH	set	393
   297                           
   298                           	psect	cinit
   299  0011                     start_initialization:	
   300                           ; #config settings
   301                           
   302  0011                     __initialization:
   303                           
   304                           ; Clear objects allocated to COMMON
   305  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   306  0012                     end_of_initialization:	
   307                           ;End of C runtime variable initialization code
   308                           
   309  0012                     __end_of__initialization:
   310  0012  0183               	clrf	3
   311  0013  120A  118A  284E   	ljmp	_main	;jump to C main() function
   312                           
   313                           	psect	bssCOMMON
   314  0077                     __pbssCOMMON:
   315  0077                     _temp_data:
   316  0077                     	ds	1
   317                           
   318                           	psect	cstackCOMMON
   319  0070                     __pcstackCOMMON:
   320  0070                     ?_setup:
   321  0070                     ?_adc_start:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_adc_lect:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ??_adc_lect:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_main:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_isr:	
   334                           ; 1 bytes @ 0x0
   335                           
   336                           
   337                           ; 1 bytes @ 0x0
   338  0070                     	ds	1
   339  0071                     adc_lect@data:
   340                           
   341                           ; 1 bytes @ 0x1
   342  0071                     	ds	1
   343  0072                     ??_isr:
   344                           
   345                           ; 1 bytes @ 0x2
   346  0072                     	ds	3
   347  0075                     ??_setup:
   348  0075                     ??_adc_start:	
   349                           ; 1 bytes @ 0x5
   350                           
   351                           
   352                           ; 1 bytes @ 0x5
   353  0075                     	ds	2
   354  0077                     ??_main:
   355                           
   356                           	psect	maintext
   357  004E                     __pmaintext:	
   358                           ; 1 bytes @ 0x7
   359 ;;
   360 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   361 ;;
   362 ;; *************** function _main *****************
   363 ;; Defined at:
   364 ;;		line 56 in file "mainE3.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, status,2, status,0, pclath, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : B00/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   378 ;;      Params:         0       0       0       0       0
   379 ;;      Locals:         0       0       0       0       0
   380 ;;      Temps:          0       0       0       0       0
   381 ;;      Totals:         0       0       0       0       0
   382 ;;Total ram usage:        0 bytes
   383 ;; Hardware stack levels required when called:    3
   384 ;; This function calls:
   385 ;;		_adc_start
   386 ;;		_setup
   387 ;; This function is called by:
   388 ;;		Startup code after reset
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           
   393                           ;psect for function _main
   394  004E                     _main:
   395  004E                     l684:	
   396                           ;incstack = 0
   397                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   398                           
   399                           
   400                           ;mainE3.c: 57:     setup();
   401  004E  120A  118A  2016  120A  118A  	fcall	_setup
   402  0053                     l37:	
   403                           ;mainE3.c: 58:     while (1) {
   404                           
   405                           
   406                           ;mainE3.c: 59:         adc_start();
   407  0053  120A  118A  2060  120A  118A  	fcall	_adc_start
   408  0058                     l686:
   409                           
   410                           ;mainE3.c: 60:         PORTD = temp_data;
   411  0058  0877               	movf	_temp_data,w
   412  0059  1283               	bcf	3,5	;RP0=0, select bank0
   413  005A  1303               	bcf	3,6	;RP1=0, select bank0
   414  005B  0088               	movwf	8	;volatile
   415  005C  2853               	goto	l37
   416  005D  120A  118A  280E   	ljmp	start
   417  0060                     __end_of_main:
   418                           
   419                           	psect	text1
   420  0016                     __ptext1:	
   421 ;; *************** function _setup *****************
   422 ;; Defined at:
   423 ;;		line 68 in file "mainE3.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, status,2, status,0
   432 ;; Tracked objects:
   433 ;;		On entry : 0/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   437 ;;      Params:         0       0       0       0       0
   438 ;;      Locals:         0       0       0       0       0
   439 ;;      Temps:          1       0       0       0       0
   440 ;;      Totals:         1       0       0       0       0
   441 ;;Total ram usage:        1 bytes
   442 ;; Hardware stack levels used:    1
   443 ;; Hardware stack levels required when called:    2
   444 ;; This function calls:
   445 ;;		Nothing
   446 ;; This function is called by:
   447 ;;		_main
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           
   452                           ;psect for function _setup
   453  0016                     _setup:
   454  0016                     l654:	
   455                           ;incstack = 0
   456                           ; Regs used in _setup: [wreg+status,2+status,0]
   457                           
   458                           
   459                           ;mainE3.c: 72:     TRISB &= 0B11111111;
   460  0016  1683               	bsf	3,5	;RP0=1, select bank1
   461  0017  1303               	bcf	3,6	;RP1=0, select bank1
   462  0018  0806               	movf	6,w	;volatile
   463  0019                     l656:
   464                           
   465                           ;mainE3.c: 73:     TRISD = 0;
   466  0019  0188               	clrf	8	;volatile
   467  001A                     l658:
   468                           
   469                           ;mainE3.c: 74:     ANSELH &= 0B00010000;
   470  001A  3010               	movlw	16
   471  001B  00F5               	movwf	??_setup
   472  001C  0875               	movf	??_setup,w
   473  001D  1683               	bsf	3,5	;RP0=1, select bank3
   474  001E  1703               	bsf	3,6	;RP1=1, select bank3
   475  001F  0589               	andwf	9,f	;volatile
   476  0020                     l660:
   477                           
   478                           ;mainE3.c: 75:     PORTD = 0;
   479  0020  1283               	bcf	3,5	;RP0=0, select bank0
   480  0021  1303               	bcf	3,6	;RP1=0, select bank0
   481  0022  0188               	clrf	8	;volatile
   482  0023                     l662:
   483                           
   484                           ;mainE3.c: 76:     PORTB = 0;
   485  0023  0186               	clrf	6	;volatile
   486  0024                     l664:
   487                           
   488                           ;mainE3.c: 80:     ADCON0 = 0B01110000;
   489  0024  3070               	movlw	112
   490  0025  009F               	movwf	31	;volatile
   491  0026                     l666:
   492                           
   493                           ;mainE3.c: 81:     ADCON1 = 0B00000000;
   494  0026  1683               	bsf	3,5	;RP0=1, select bank1
   495  0027  1303               	bcf	3,6	;RP1=0, select bank1
   496  0028  019F               	clrf	31	;volatile
   497  0029                     l668:
   498                           
   499                           ;mainE3.c: 82:     ADCON0bits.ADON = 1;
   500  0029  1283               	bcf	3,5	;RP0=0, select bank0
   501  002A  1303               	bcf	3,6	;RP1=0, select bank0
   502  002B  141F               	bsf	31,0	;volatile
   503  002C                     l670:
   504                           
   505                           ;mainE3.c: 86:     PIE1 = 0B01000000;
   506  002C  3040               	movlw	64
   507  002D  1683               	bsf	3,5	;RP0=1, select bank1
   508  002E  1303               	bcf	3,6	;RP1=0, select bank1
   509  002F  008C               	movwf	12	;volatile
   510  0030                     l672:
   511                           
   512                           ;mainE3.c: 87:     PIR1bits.ADIF = 0;
   513  0030  1283               	bcf	3,5	;RP0=0, select bank0
   514  0031  1303               	bcf	3,6	;RP1=0, select bank0
   515  0032  130C               	bcf	12,6	;volatile
   516  0033                     l674:
   517                           
   518                           ;mainE3.c: 88:     INTCON = 0B11001000;
   519  0033  30C8               	movlw	200
   520  0034  008B               	movwf	11	;volatile
   521  0035                     l43:
   522  0035  0008               	return
   523  0036                     __end_of_setup:
   524                           
   525                           	psect	text2
   526  0060                     __ptext2:	
   527 ;; *************** function _adc_start *****************
   528 ;; Defined at:
   529 ;;		line 19 in file "adclib2.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   543 ;;      Params:         0       0       0       0       0
   544 ;;      Locals:         0       0       0       0       0
   545 ;;      Temps:          2       0       0       0       0
   546 ;;      Totals:         2       0       0       0       0
   547 ;;Total ram usage:        2 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; Hardware stack levels required when called:    2
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _adc_start
   559  0060                     _adc_start:
   560  0060                     l676:	
   561                           ;incstack = 0
   562                           ; Regs used in _adc_start: [wreg]
   563                           
   564                           
   565                           ;adclib2.c: 20:     if (0 == ADCON0bits.GO_nDONE) {
   566  0060  1283               	bcf	3,5	;RP0=0, select bank0
   567  0061  1303               	bcf	3,6	;RP1=0, select bank0
   568  0062  189F               	btfsc	31,1	;volatile
   569  0063  2865               	goto	u11
   570  0064  2866               	goto	u10
   571  0065                     u11:
   572  0065  2871               	goto	l62
   573  0066                     u10:
   574  0066                     l678:
   575                           
   576                           ;adclib2.c: 21:         _delay((unsigned long)((5)*(4000000/4000.0)));
   577  0066  3007               	movlw	7
   578  0067  00F6               	movwf	??_adc_start+1
   579  0068  307D               	movlw	125
   580  0069  00F5               	movwf	??_adc_start
   581  006A                     u37:
   582  006A  0BF5               	decfsz	??_adc_start,f
   583  006B  286A               	goto	u37
   584  006C  0BF6               	decfsz	??_adc_start+1,f
   585  006D  286A               	goto	u37
   586  006E                     l680:
   587                           
   588                           ;adclib2.c: 22:         ADCON0bits.GO_nDONE = 1;
   589  006E  1283               	bcf	3,5	;RP0=0, select bank0
   590  006F  1303               	bcf	3,6	;RP1=0, select bank0
   591  0070  149F               	bsf	31,1	;volatile
   592  0071                     l62:
   593  0071  0008               	return
   594  0072                     __end_of_adc_start:
   595                           
   596                           	psect	text3
   597  0036                     __ptext3:	
   598 ;; *************** function _isr *****************
   599 ;; Defined at:
   600 ;;		line 100 in file "mainE3.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   614 ;;      Params:         0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0
   616 ;;      Temps:          3       0       0       0       0
   617 ;;      Totals:         3       0       0       0       0
   618 ;;Total ram usage:        3 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; Hardware stack levels required when called:    1
   621 ;; This function calls:
   622 ;;		_adc_lect
   623 ;; This function is called by:
   624 ;;		Interrupt level 1
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           
   629                           ;psect for function _isr
   630  0036                     _isr:
   631  0036                     i1l688:
   632                           
   633                           ;mainE3.c: 101:     if (1 == ADIF) {
   634  0036  1283               	bcf	3,5	;RP0=0, select bank0
   635  0037  1303               	bcf	3,6	;RP1=0, select bank0
   636  0038  1F0C               	btfss	12,6	;volatile
   637  0039  283B               	goto	u2_21
   638  003A  283C               	goto	u2_20
   639  003B                     u2_21:
   640  003B  2845               	goto	i1l49
   641  003C                     u2_20:
   642  003C                     i1l690:
   643                           
   644                           ;mainE3.c: 102:         adc_lect(&temp_data);
   645  003C  3077               	movlw	(low (_temp_data| 0))& (0+255)
   646  003D  120A  118A  2072  120A  118A  	fcall	_adc_lect
   647  0042                     i1l692:
   648                           
   649                           ;mainE3.c: 103:         ADIF = 0;
   650  0042  1283               	bcf	3,5	;RP0=0, select bank0
   651  0043  1303               	bcf	3,6	;RP1=0, select bank0
   652  0044  130C               	bcf	12,6	;volatile
   653  0045                     i1l49:
   654  0045  0874               	movf	??_isr+2,w
   655  0046  008A               	movwf	10
   656  0047  0873               	movf	??_isr+1,w
   657  0048  0084               	movwf	4
   658  0049  0E72               	swapf	??_isr,w
   659  004A  0083               	movwf	3
   660  004B  0EFE               	swapf	btemp,f
   661  004C  0E7E               	swapf	btemp,w
   662  004D  0009               	retfie
   663  004E                     __end_of_isr:
   664                           
   665                           	psect	intentry
   666  0004                     __pintentry:	
   667                           ;incstack = 0
   668                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   669                           
   670  0004                     interrupt_function:
   671  007E                     saved_w	set	btemp
   672  0004  00FE               	movwf	btemp
   673  0005  0E03               	swapf	3,w
   674  0006  00F2               	movwf	??_isr
   675  0007  0804               	movf	4,w
   676  0008  00F3               	movwf	??_isr+1
   677  0009  080A               	movf	10,w
   678  000A  00F4               	movwf	??_isr+2
   679  000B  120A  118A  2836   	ljmp	_isr
   680                           
   681                           	psect	text4
   682  0072                     __ptext4:	
   683 ;; *************** function _adc_lect *****************
   684 ;; Defined at:
   685 ;;		line 15 in file "adclib2.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;  data            1    wreg     PTR volatile unsigned ch
   688 ;;		 -> temp_data(1), 
   689 ;; Auto vars:     Size  Location     Type
   690 ;;  data            1    1[COMMON] PTR volatile unsigned ch
   691 ;;		 -> temp_data(1), 
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, fsr0l, fsr0h
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         0       0       0       0       0
   702 ;;      Locals:         1       0       0       0       0
   703 ;;      Temps:          1       0       0       0       0
   704 ;;      Totals:         2       0       0       0       0
   705 ;;Total ram usage:        2 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		_isr
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _adc_lect
   716  0072                     _adc_lect:
   717                           
   718                           ;incstack = 0
   719                           ; Regs used in _adc_lect: [wregfsr0]
   720                           ;adc_lect@data stored from wreg
   721  0072  00F1               	movwf	adc_lect@data
   722  0073                     i1l682:
   723                           
   724                           ;adclib2.c: 16:     *data = ADRESH;
   725  0073  1283               	bcf	3,5	;RP0=0, select bank0
   726  0074  1303               	bcf	3,6	;RP1=0, select bank0
   727  0075  081E               	movf	30,w	;volatile
   728  0076  00F0               	movwf	??_adc_lect
   729  0077  0871               	movf	adc_lect@data,w
   730  0078  0084               	movwf	4
   731  0079  0870               	movf	??_adc_lect,w
   732  007A  0080               	movwf	0
   733  007B                     i1l58:
   734  007B  0008               	return
   735  007C                     __end_of_adc_lect:
   736  007E                     btemp	set	126	;btemp
   737  007E                     wtemp0	set	126
   738                           
   739                           	psect	config
   740                           
   741                           ;Config register CONFIG1 @ 0x2007
   742                           ;	Oscillator Selection bits
   743                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   744                           ;	Watchdog Timer Enable bit
   745                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   746                           ;	Power-up Timer Enable bit
   747                           ;	PWRTE = OFF, PWRT disabled
   748                           ;	RE3/MCLR pin function select bit
   749                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   750                           ;	Code Protection bit
   751                           ;	CP = OFF, Program memory code protection is disabled
   752                           ;	Data Code Protection bit
   753                           ;	CPD = OFF, Data memory code protection is disabled
   754                           ;	Brown Out Reset Selection bits
   755                           ;	BOREN = OFF, BOR disabled
   756                           ;	Internal External Switchover bit
   757                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   758                           ;	Fail-Safe Clock Monitor Enabled bit
   759                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   760                           ;	Low Voltage Programming Enable bit
   761                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   762                           ;	In-Circuit Debugger Mode bit
   763                           ;	DEBUG = 0x1, unprogrammed default
   764  2007                     	org	8199
   765  2007  20D1               	dw	8401
   766                           
   767                           ;Config register CONFIG2 @ 0x2008
   768                           ;	Brown-out Reset Selection bit
   769                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   770                           ;	Flash Program Memory Self Write Enable bits
   771                           ;	WRT = OFF, Write protection off
   772  2008                     	org	8200
   773  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    adc_lect@data	PTR volatile unsigned char  size(1) Largest target is 1
		 -> temp_data(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_adc_start

Critical Paths under _isr in COMMON

    _isr->_adc_lect

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _adc_start
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_start                                            2     2      0       0
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      45
                                              2 COMMON     3     3      0
                           _adc_lect
 ---------------------------------------------------------------------------------
 (3) _adc_lect                                             2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_start
   _setup

 _isr (ROOT)
   _adc_lect

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 17 11:35:21 2021

                     l43 0035                       l37 0053                       l62 0071  
                     u10 0066                       u11 0065                       u37 006A  
                    l660 0020                      l670 002C                      l662 0023  
                    l654 0016                      l680 006E                      l672 0030  
                    l664 0024                      l656 0019                      l674 0033  
                    l666 0026                      l658 001A                      l676 0060  
                    l668 0029                      l684 004E                      l678 0066  
                    l686 0058                      _isr 0036                      fsr0 0004  
                    indf 0000                     _ADIF 0066                     ?_isr 0070  
                   _PIE1 008C                     i1l49 0045                     i1l58 007B  
                   u2_20 003C                     u2_21 003B                     _main 004E  
                   btemp 007E                     start 000E                    ??_isr 0072  
                  ?_main 0070                    i1l682 0073                    i1l690 003C  
                  i1l692 0042                    i1l688 0036                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _setup 0016                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0060  
                 ??_main 0077                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
       __end_of_adc_lect 007C                   _INTCON 000B                   saved_w 007E  
__end_of__initialization 0012       __size_of_adc_start 0012           __pcstackCOMMON 0070  
          __end_of_setup 0036                  ??_setup 0075             adc_lect@data 0071  
             __pmaintext 004E               __pintentry 0004                ?_adc_lect 0070  
      __end_of_adc_start 0072               ??_adc_lect 0070                  __ptext1 0016  
                __ptext2 0060                  __ptext3 0036                  __ptext4 0072  
           __size_of_isr 0018     end_of_initialization 0012      start_initialization 0011  
            __end_of_isr 004E        __size_of_adc_lect 000A              __pbssCOMMON 0077  
              ___latbits 0002                _adc_start 0060               ?_adc_start 0070  
         __size_of_setup 0020        interrupt_function 0004                 _PIR1bits 000C  
              _temp_data 0077               _ADCON0bits 001F                 _adc_lect 0072  
            ??_adc_start 0075            __size_of_main 0012                 intlevel1 0000  
