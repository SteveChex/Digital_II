

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 12:15:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  001E                     _ADRESH	set	30
   285  0013                     _SSPBUF	set	19
   286  000B                     _INTCON	set	11
   287  000C                     _PIR1bits	set	12
   288  0014                     _SSPCON	set	20
   289  001F                     _ADCON0bits	set	31
   290  001F                     _ADCON0	set	31
   291  0006                     _PORTB	set	6
   292  0008                     _PORTD	set	8
   293  0063                     _SSPIF	set	99
   294  0066                     _ADIF	set	102
   295  008C                     _PIE1	set	140
   296  0091                     _SSPCON2	set	145
   297  0094                     _SSPSTAT	set	148
   298  0087                     _TRISC	set	135
   299  0085                     _TRISA	set	133
   300  0085                     _TRISAbits	set	133
   301  009F                     _ADCON1	set	159
   302  0088                     _TRISD	set	136
   303  0086                     _TRISB	set	134
   304  0188                     _ANSELbits	set	392
   305  0189                     _ANSELH	set	393
   306                           
   307                           	psect	cinit
   308  0011                     start_initialization:	
   309                           ; #config settings
   310                           
   311  0011                     __initialization:
   312                           
   313                           ; Clear objects allocated to COMMON
   314  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   315  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   316  0013                     end_of_initialization:	
   317                           ;End of C runtime variable initialization code
   318                           
   319  0013                     __end_of__initialization:
   320  0013  0183               	clrf	3
   321  0014  120A  118A  2848   	ljmp	_main	;jump to C main() function
   322                           
   323                           	psect	bssCOMMON
   324  0078                     __pbssCOMMON:
   325  0078                     _spi_data:
   326  0078                     	ds	1
   327  0079                     _temp_data:
   328  0079                     	ds	1
   329                           
   330                           	psect	cstackCOMMON
   331  0070                     __pcstackCOMMON:
   332  0070                     ?_setup:
   333  0070                     ?_adc_start:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_adc_lect:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ??_adc_lect:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_main:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_isr:	
   346                           ; 1 bytes @ 0x0
   347                           
   348                           
   349                           ; 1 bytes @ 0x0
   350  0070                     	ds	1
   351  0071                     adc_lect@data:
   352                           
   353                           ; 1 bytes @ 0x1
   354  0071                     	ds	1
   355  0072                     ??_isr:
   356                           
   357                           ; 1 bytes @ 0x2
   358  0072                     	ds	4
   359  0076                     ??_setup:
   360  0076                     ??_adc_start:	
   361                           ; 1 bytes @ 0x6
   362                           
   363                           
   364                           ; 1 bytes @ 0x6
   365  0076                     	ds	2
   366  0078                     ??_main:
   367                           
   368                           	psect	maintext
   369  0048                     __pmaintext:	
   370                           ; 1 bytes @ 0x8
   371 ;;
   372 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   373 ;;
   374 ;; *************** function _main *****************
   375 ;; Defined at:
   376 ;;		line 58 in file "mainE3.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;		None
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, status,2, status,0, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : B00/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         0       0       0       0       0
   392 ;;      Temps:          0       0       0       0       0
   393 ;;      Totals:         0       0       0       0       0
   394 ;;Total ram usage:        0 bytes
   395 ;; Hardware stack levels required when called:    3
   396 ;; This function calls:
   397 ;;		_adc_start
   398 ;;		_setup
   399 ;; This function is called by:
   400 ;;		Startup code after reset
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           
   405                           ;psect for function _main
   406  0048                     _main:
   407  0048                     l724:	
   408                           ;incstack = 0
   409                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   410                           
   411                           
   412                           ;mainE3.c: 59:     setup();
   413  0048  120A  118A  2017  120A  118A  	fcall	_setup
   414  004D                     l57:	
   415                           ;mainE3.c: 60:     while (1) {
   416                           
   417                           
   418                           ;mainE3.c: 61:         adc_start();
   419  004D  120A  118A  209A  120A  118A  	fcall	_adc_start
   420  0052                     l726:
   421                           
   422                           ;mainE3.c: 62:         if (temp_data < 24) {
   423  0052  3018               	movlw	24
   424  0053  0279               	subwf	_temp_data,w
   425  0054  1803               	skipnc
   426  0055  2857               	goto	u21
   427  0056  2858               	goto	u20
   428  0057                     u21:
   429  0057  285D               	goto	l730
   430  0058                     u20:
   431  0058                     l728:
   432                           
   433                           ;mainE3.c: 63:             PORTD = 0B00000001;
   434  0058  3001               	movlw	1
   435  0059  1283               	bcf	3,5	;RP0=0, select bank0
   436  005A  1303               	bcf	3,6	;RP1=0, select bank0
   437  005B  0088               	movwf	8	;volatile
   438                           
   439                           ;mainE3.c: 64:         } else if (temp_data < 43) {
   440  005C  284D               	goto	l57
   441  005D                     l730:
   442  005D  302B               	movlw	43
   443  005E  0279               	subwf	_temp_data,w
   444  005F  1803               	skipnc
   445  0060  2862               	goto	u31
   446  0061  2863               	goto	u30
   447  0062                     u31:
   448  0062  2868               	goto	l734
   449  0063                     u30:
   450  0063                     l732:
   451                           
   452                           ;mainE3.c: 65:             PORTD = 0B00000010;
   453  0063  3002               	movlw	2
   454  0064  1283               	bcf	3,5	;RP0=0, select bank0
   455  0065  1303               	bcf	3,6	;RP1=0, select bank0
   456  0066  0088               	movwf	8	;volatile
   457                           
   458                           ;mainE3.c: 66:         } else if (temp_data >= 43) {
   459  0067  284D               	goto	l57
   460  0068                     l734:
   461  0068  302B               	movlw	43
   462  0069  0279               	subwf	_temp_data,w
   463  006A  1C03               	skipc
   464  006B  286D               	goto	u41
   465  006C  286E               	goto	u40
   466  006D                     u41:
   467  006D  2873               	goto	l59
   468  006E                     u40:
   469  006E                     l736:
   470                           
   471                           ;mainE3.c: 67:             PORTD = 0B00000100;
   472  006E  3004               	movlw	4
   473  006F  1283               	bcf	3,5	;RP0=0, select bank0
   474  0070  1303               	bcf	3,6	;RP1=0, select bank0
   475  0071  0088               	movwf	8	;volatile
   476  0072  284D               	goto	l57
   477  0073                     l59:
   478  0073  284D               	goto	l57
   479  0074  120A  118A  280E   	ljmp	start
   480  0077                     __end_of_main:
   481                           
   482                           	psect	text1
   483  0017                     __ptext1:	
   484 ;; *************** function _setup *****************
   485 ;; Defined at:
   486 ;;		line 76 in file "mainE3.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   500 ;;      Params:         0       0       0       0       0
   501 ;;      Locals:         0       0       0       0       0
   502 ;;      Temps:          1       0       0       0       0
   503 ;;      Totals:         1       0       0       0       0
   504 ;;Total ram usage:        1 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    2
   507 ;; This function calls:
   508 ;;		Nothing
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _setup
   516  0017                     _setup:
   517  0017                     l680:	
   518                           ;incstack = 0
   519                           ; Regs used in _setup: [wreg+status,2+status,0]
   520                           
   521                           
   522                           ;mainE3.c: 80:     TRISB &= 0B11111111;
   523  0017  1683               	bsf	3,5	;RP0=1, select bank1
   524  0018  1303               	bcf	3,6	;RP1=0, select bank1
   525  0019  0806               	movf	6,w	;volatile
   526  001A                     l682:
   527                           
   528                           ;mainE3.c: 81:     TRISD = 0;
   529  001A  0188               	clrf	8	;volatile
   530  001B                     l684:
   531                           
   532                           ;mainE3.c: 82:     ANSELH &= 0B00010000;
   533  001B  3010               	movlw	16
   534  001C  00F6               	movwf	??_setup
   535  001D  0876               	movf	??_setup,w
   536  001E  1683               	bsf	3,5	;RP0=1, select bank3
   537  001F  1703               	bsf	3,6	;RP1=1, select bank3
   538  0020  0589               	andwf	9,f	;volatile
   539  0021                     l686:
   540                           
   541                           ;mainE3.c: 83:     PORTD = 0;
   542  0021  1283               	bcf	3,5	;RP0=0, select bank0
   543  0022  1303               	bcf	3,6	;RP1=0, select bank0
   544  0023  0188               	clrf	8	;volatile
   545  0024                     l688:
   546                           
   547                           ;mainE3.c: 84:     PORTB = 0;
   548  0024  0186               	clrf	6	;volatile
   549  0025                     l690:
   550                           
   551                           ;mainE3.c: 88:     ADCON0 = 0B01110000;
   552  0025  3070               	movlw	112
   553  0026  009F               	movwf	31	;volatile
   554  0027                     l692:
   555                           
   556                           ;mainE3.c: 89:     ADCON1 = 0B00010000;
   557  0027  3010               	movlw	16
   558  0028  1683               	bsf	3,5	;RP0=1, select bank1
   559  0029  1303               	bcf	3,6	;RP1=0, select bank1
   560  002A  009F               	movwf	31	;volatile
   561  002B                     l694:
   562                           
   563                           ;mainE3.c: 90:     TRISAbits.TRISA3 = 1;
   564  002B  1585               	bsf	5,3	;volatile
   565  002C                     l696:
   566                           
   567                           ;mainE3.c: 91:     ANSELbits.ANS3 = 1;
   568  002C  1683               	bsf	3,5	;RP0=1, select bank3
   569  002D  1703               	bsf	3,6	;RP1=1, select bank3
   570  002E  1588               	bsf	8,3	;volatile
   571  002F                     l698:
   572                           
   573                           ;mainE3.c: 92:     ADCON0bits.ADON = 1;
   574  002F  1283               	bcf	3,5	;RP0=0, select bank0
   575  0030  1303               	bcf	3,6	;RP1=0, select bank0
   576  0031  141F               	bsf	31,0	;volatile
   577  0032                     l700:
   578                           
   579                           ;mainE3.c: 96:     TRISA = 0B00100000;
   580  0032  3020               	movlw	32
   581  0033  1683               	bsf	3,5	;RP0=1, select bank1
   582  0034  1303               	bcf	3,6	;RP1=0, select bank1
   583  0035  0085               	movwf	5	;volatile
   584  0036                     l702:
   585                           
   586                           ;mainE3.c: 97:     TRISC = 0B00011000;
   587  0036  3018               	movlw	24
   588  0037  0087               	movwf	7	;volatile
   589  0038                     l704:
   590                           
   591                           ;mainE3.c: 99:     SSPSTAT = 0B00000000;
   592  0038  0194               	clrf	20	;volatile
   593  0039                     l706:
   594                           
   595                           ;mainE3.c: 100:     SSPCON2 = 0;
   596  0039  0191               	clrf	17	;volatile
   597  003A                     l708:
   598                           
   599                           ;mainE3.c: 101:     SSPCON = 0B00110100;
   600  003A  3034               	movlw	52
   601  003B  1283               	bcf	3,5	;RP0=0, select bank0
   602  003C  1303               	bcf	3,6	;RP1=0, select bank0
   603  003D  0094               	movwf	20	;volatile
   604  003E                     l710:
   605                           
   606                           ;mainE3.c: 105:     PIE1 = 0B01001000;
   607  003E  3048               	movlw	72
   608  003F  1683               	bsf	3,5	;RP0=1, select bank1
   609  0040  1303               	bcf	3,6	;RP1=0, select bank1
   610  0041  008C               	movwf	12	;volatile
   611  0042                     l712:
   612                           
   613                           ;mainE3.c: 106:     PIR1bits.ADIF = 0;
   614  0042  1283               	bcf	3,5	;RP0=0, select bank0
   615  0043  1303               	bcf	3,6	;RP1=0, select bank0
   616  0044  130C               	bcf	12,6	;volatile
   617  0045                     l714:
   618                           
   619                           ;mainE3.c: 107:     INTCON = 0B11001000;
   620  0045  30C8               	movlw	200
   621  0046  008B               	movwf	11	;volatile
   622  0047                     l68:
   623  0047  0008               	return
   624  0048                     __end_of_setup:
   625                           
   626                           	psect	text2
   627  009A                     __ptext2:	
   628 ;; *************** function _adc_start *****************
   629 ;; Defined at:
   630 ;;		line 19 in file "adclib2.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          2       0       0       0       0
   647 ;;      Totals:         2       0       0       0       0
   648 ;;Total ram usage:        2 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    2
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           
   659                           ;psect for function _adc_start
   660  009A                     _adc_start:
   661  009A                     l716:	
   662                           ;incstack = 0
   663                           ; Regs used in _adc_start: [wreg]
   664                           
   665                           
   666                           ;adclib2.c: 20:     if (0 == ADCON0bits.GO_nDONE) {
   667  009A  1283               	bcf	3,5	;RP0=0, select bank0
   668  009B  1303               	bcf	3,6	;RP1=0, select bank0
   669  009C  189F               	btfsc	31,1	;volatile
   670  009D  289F               	goto	u11
   671  009E  28A0               	goto	u10
   672  009F                     u11:
   673  009F  28AB               	goto	l88
   674  00A0                     u10:
   675  00A0                     l718:
   676                           
   677                           ;adclib2.c: 21:         _delay((unsigned long)((5)*(4000000/4000.0)));
   678  00A0  3007               	movlw	7
   679  00A1  00F7               	movwf	??_adc_start+1
   680  00A2  307D               	movlw	125
   681  00A3  00F6               	movwf	??_adc_start
   682  00A4                     u77:
   683  00A4  0BF6               	decfsz	??_adc_start,f
   684  00A5  28A4               	goto	u77
   685  00A6  0BF7               	decfsz	??_adc_start+1,f
   686  00A7  28A4               	goto	u77
   687  00A8                     l720:
   688                           
   689                           ;adclib2.c: 22:         ADCON0bits.GO_nDONE = 1;
   690  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   691  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   692  00AA  149F               	bsf	31,1	;volatile
   693  00AB                     l88:
   694  00AB  0008               	return
   695  00AC                     __end_of_adc_start:
   696                           
   697                           	psect	text3
   698  0077                     __ptext3:	
   699 ;; *************** function _isr *****************
   700 ;; Defined at:
   701 ;;		line 119 in file "mainE3.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0
   717 ;;      Temps:          4       0       0       0       0
   718 ;;      Totals:         4       0       0       0       0
   719 ;;Total ram usage:        4 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    1
   722 ;; This function calls:
   723 ;;		_adc_lect
   724 ;; This function is called by:
   725 ;;		Interrupt level 1
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           
   730                           ;psect for function _isr
   731  0077                     _isr:
   732  0077                     i1l738:
   733                           
   734                           ;mainE3.c: 120:     if (1 == ADIF) {
   735  0077  1283               	bcf	3,5	;RP0=0, select bank0
   736  0078  1303               	bcf	3,6	;RP1=0, select bank0
   737  0079  1F0C               	btfss	12,6	;volatile
   738  007A  287C               	goto	u5_21
   739  007B  287D               	goto	u5_20
   740  007C                     u5_21:
   741  007C  2886               	goto	i1l744
   742  007D                     u5_20:
   743  007D                     i1l740:
   744                           
   745                           ;mainE3.c: 121:         adc_lect(&temp_data);
   746  007D  3079               	movlw	(low (_temp_data| 0))& (0+255)
   747  007E  120A  118A  20AC  120A  118A  	fcall	_adc_lect
   748  0083                     i1l742:
   749                           
   750                           ;mainE3.c: 122:         ADIF = 0;
   751  0083  1283               	bcf	3,5	;RP0=0, select bank0
   752  0084  1303               	bcf	3,6	;RP1=0, select bank0
   753  0085  130C               	bcf	12,6	;volatile
   754  0086                     i1l744:
   755                           
   756                           ;mainE3.c: 124:     if (1 == SSPIF) {
   757  0086  1D8C               	btfss	12,3	;volatile
   758  0087  2889               	goto	u6_21
   759  0088  288A               	goto	u6_20
   760  0089                     u6_21:
   761  0089  2891               	goto	i1l75
   762  008A                     u6_20:
   763  008A                     i1l746:
   764                           
   765                           ;mainE3.c: 125:         spi_data = SSPBUF;
   766  008A  0813               	movf	19,w	;volatile
   767  008B  00F2               	movwf	??_isr
   768  008C  0872               	movf	??_isr,w
   769  008D  00F8               	movwf	_spi_data
   770                           
   771                           ;mainE3.c: 126:         SSPBUF = temp_data;
   772  008E  0879               	movf	_temp_data,w
   773  008F  0093               	movwf	19	;volatile
   774  0090                     i1l748:
   775                           
   776                           ;mainE3.c: 127:         SSPIF = 0;
   777  0090  118C               	bcf	12,3	;volatile
   778  0091                     i1l75:
   779  0091  0875               	movf	??_isr+3,w
   780  0092  008A               	movwf	10
   781  0093  0874               	movf	??_isr+2,w
   782  0094  0084               	movwf	4
   783  0095  0E73               	swapf	??_isr+1,w
   784  0096  0083               	movwf	3
   785  0097  0EFE               	swapf	btemp,f
   786  0098  0E7E               	swapf	btemp,w
   787  0099  0009               	retfie
   788  009A                     __end_of_isr:
   789                           
   790                           	psect	intentry
   791  0004                     __pintentry:	
   792                           ;incstack = 0
   793                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   794                           
   795  0004                     interrupt_function:
   796  007E                     saved_w	set	btemp
   797  0004  00FE               	movwf	btemp
   798  0005  0E03               	swapf	3,w
   799  0006  00F3               	movwf	??_isr+1
   800  0007  0804               	movf	4,w
   801  0008  00F4               	movwf	??_isr+2
   802  0009  080A               	movf	10,w
   803  000A  00F5               	movwf	??_isr+3
   804  000B  120A  118A  2877   	ljmp	_isr
   805                           
   806                           	psect	text4
   807  00AC                     __ptext4:	
   808 ;; *************** function _adc_lect *****************
   809 ;; Defined at:
   810 ;;		line 15 in file "adclib2.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;  data            1    wreg     PTR volatile unsigned ch
   813 ;;		 -> temp_data(1), 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  data            1    1[COMMON] PTR volatile unsigned ch
   816 ;;		 -> temp_data(1), 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr0l, fsr0h
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         1       0       0       0       0
   828 ;;      Temps:          1       0       0       0       0
   829 ;;      Totals:         2       0       0       0       0
   830 ;;Total ram usage:        2 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; This function calls:
   833 ;;		Nothing
   834 ;; This function is called by:
   835 ;;		_isr
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           
   840                           ;psect for function _adc_lect
   841  00AC                     _adc_lect:
   842                           
   843                           ;incstack = 0
   844                           ; Regs used in _adc_lect: [wregfsr0]
   845                           ;adc_lect@data stored from wreg
   846  00AC  00F1               	movwf	adc_lect@data
   847  00AD                     i1l722:
   848                           
   849                           ;adclib2.c: 16:     *data = ADRESH;
   850  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   851  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   852  00AF  081E               	movf	30,w	;volatile
   853  00B0  00F0               	movwf	??_adc_lect
   854  00B1  0871               	movf	adc_lect@data,w
   855  00B2  0084               	movwf	4
   856  00B3  0870               	movf	??_adc_lect,w
   857  00B4  0080               	movwf	0
   858  00B5                     i1l84:
   859  00B5  0008               	return
   860  00B6                     __end_of_adc_lect:
   861  007E                     btemp	set	126	;btemp
   862  007E                     wtemp0	set	126
   863                           
   864                           	psect	config
   865                           
   866                           ;Config register CONFIG1 @ 0x2007
   867                           ;	Oscillator Selection bits
   868                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   869                           ;	Watchdog Timer Enable bit
   870                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   871                           ;	Power-up Timer Enable bit
   872                           ;	PWRTE = OFF, PWRT disabled
   873                           ;	RE3/MCLR pin function select bit
   874                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   875                           ;	Code Protection bit
   876                           ;	CP = OFF, Program memory code protection is disabled
   877                           ;	Data Code Protection bit
   878                           ;	CPD = OFF, Data memory code protection is disabled
   879                           ;	Brown Out Reset Selection bits
   880                           ;	BOREN = OFF, BOR disabled
   881                           ;	Internal External Switchover bit
   882                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   883                           ;	Fail-Safe Clock Monitor Enabled bit
   884                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   885                           ;	Low Voltage Programming Enable bit
   886                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   887                           ;	In-Circuit Debugger Mode bit
   888                           ;	DEBUG = 0x1, unprogrammed default
   889  2007                     	org	8199
   890  2007  20D1               	dw	8401
   891                           
   892                           ;Config register CONFIG2 @ 0x2008
   893                           ;	Brown-out Reset Selection bit
   894                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   895                           ;	Flash Program Memory Self Write Enable bits
   896                           ;	WRT = OFF, Write protection off
   897  2008                     	org	8200
   898  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    adc_lect@data	PTR volatile unsigned char  size(1) Largest target is 1
		 -> temp_data(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_adc_start

Critical Paths under _isr in COMMON

    _isr->_adc_lect

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _adc_start
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_start                                            2     2      0       0
                                              6 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0      45
                                              2 COMMON     4     4      0
                           _adc_lect
 ---------------------------------------------------------------------------------
 (3) _adc_lect                                             2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_start
   _setup

 _isr (ROOT)
   _adc_lect

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 12:15:56 2021

                     l57 004D                       l59 0073                       l68 0047  
                     l88 00AB                       u10 00A0                       u11 009F  
                     u20 0058                       u21 0057                       u30 0063  
                     u31 0062                       u40 006E                       u41 006D  
                     u77 00A4                      l700 0032                      l710 003E  
                    l702 0036                      l720 00A8                      l712 0042  
                    l704 0038                      l714 0045                      l706 0039  
                    l730 005D                      l716 009A                      l708 003A  
                    l732 0063                      l724 0048                      l718 00A0  
                    l734 0068                      l726 0052                      l680 0017  
                    l736 006E                      l728 0058                      l690 0025  
                    l682 001A                      l692 0027                      l684 001B  
                    l694 002B                      l686 0021                      l696 002C  
                    l688 0024                      l698 002F                      _isr 0077  
                    fsr0 0004                      indf 0000                     _ADIF 0066  
                   ?_isr 0070                     _PIE1 008C                     i1l75 0091  
                   i1l84 00B5                     u5_20 007D                     u5_21 007C  
                   u6_20 008A                     u6_21 0089                     _main 0048  
                   btemp 007E                     start 000E                    ??_isr 0072  
                  ?_main 0070                    i1l722 00AD                    i1l740 007D  
                  i1l742 0083                    i1l744 0086                    i1l746 008A  
                  i1l738 0077                    i1l748 0090                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _SSPIF 0063  
                  _setup 0017                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0077  
                 ??_main 0078                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
       __end_of_adc_lect 00B6                   _INTCON 000B                   _SSPCON 0014  
                 _SSPBUF 0013                   saved_w 007E  __end_of__initialization 0013  
     __size_of_adc_start 0012           __pcstackCOMMON 0070            __end_of_setup 0048  
                ??_setup 0076             adc_lect@data 0071               __pmaintext 0048  
             __pintentry 0004                ?_adc_lect 0070        __end_of_adc_start 00AC  
                _SSPCON2 0091                  _SSPSTAT 0094                _ANSELbits 0188  
             ??_adc_lect 0070                  __ptext1 0017                  __ptext2 009A  
                __ptext3 0077                  __ptext4 00AC             __size_of_isr 0023  
   end_of_initialization 0013                _TRISAbits 0085      start_initialization 0011  
            __end_of_isr 009A        __size_of_adc_lect 000A              __pbssCOMMON 0078  
              ___latbits 0002                _adc_start 009A               ?_adc_start 0070  
         __size_of_setup 0031        interrupt_function 0004                 _PIR1bits 000C  
              _temp_data 0079               _ADCON0bits 001F                 _adc_lect 00AC  
            ??_adc_start 0076            __size_of_main 002F                 _spi_data 0078  
               intlevel1 0000  
