

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 17 11:10:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0006                     _PORTBbits	set	6
   205  000B                     _INTCON	set	11
   206  0006                     _PORTB	set	6
   207  0008                     _PORTD	set	8
   208  0058                     _RBIF	set	88
   209  0096                     _IOCB	set	150
   210  0086                     _TRISB	set	134
   211  0088                     _TRISD	set	136
   212  0189                     _ANSELH	set	393
   213                           
   214                           	psect	cinit
   215  000F                     start_initialization:	
   216                           ; #config settings
   217                           
   218  000F                     __initialization:
   219                           
   220                           ; Clear objects allocated to COMMON
   221  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   222  0010                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225  0010                     __end_of__initialization:
   226  0010  0183               	clrf	3
   227  0011  120A  118A  2847   	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	bssCOMMON
   230  0073                     __pbssCOMMON:
   231  0073                     _cont:
   232  0073                     	ds	1
   233                           
   234                           	psect	cstackCOMMON
   235  0070                     __pcstackCOMMON:
   236  0070                     ?_setup:
   237  0070                     ?_main:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_isr:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ??_isr:	
   244                           ; 1 bytes @ 0x0
   245                           
   246                           
   247                           ; 1 bytes @ 0x0
   248  0070                     	ds	3
   249  0073                     ??_setup:
   250  0073                     ??_main:	
   251                           ; 1 bytes @ 0x3
   252                           
   253                           
   254                           	psect	maintext
   255  0047                     __pmaintext:	
   256                           ; 1 bytes @ 0x3
   257 ;;
   258 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   259 ;;
   260 ;; *************** function _main *****************
   261 ;; Defined at:
   262 ;;		line 55 in file "mainE2.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;		None
   267 ;; Return value:  Size  Location     Type
   268 ;;                  1    wreg      void 
   269 ;; Registers used:
   270 ;;		wreg, status,2, status,0, pclath, cstack
   271 ;; Tracked objects:
   272 ;;		On entry : B00/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   276 ;;      Params:         0       0       0       0       0
   277 ;;      Locals:         0       0       0       0       0
   278 ;;      Temps:          0       0       0       0       0
   279 ;;      Totals:         0       0       0       0       0
   280 ;;Total ram usage:        0 bytes
   281 ;; Hardware stack levels required when called:    2
   282 ;; This function calls:
   283 ;;		_setup
   284 ;; This function is called by:
   285 ;;		Startup code after reset
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           
   290                           ;psect for function _main
   291  0047                     _main:
   292  0047                     l643:	
   293                           ;incstack = 0
   294                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   295                           
   296                           
   297                           ;mainE2.c: 56:     setup();
   298  0047  120A  118A  2034  120A  118A  	fcall	_setup
   299  004C                     l27:	
   300                           ;mainE2.c: 57:     while (1) {
   301                           
   302  004C  0000               	nop	;# 
   303  004D  284C               	goto	l27
   304  004E  120A  118A  280C   	ljmp	start
   305  0051                     __end_of_main:
   306                           
   307                           	psect	text1
   308  0034                     __ptext1:	
   309 ;; *************** function _setup *****************
   310 ;; Defined at:
   311 ;;		line 66 in file "mainE2.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, status,2
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   325 ;;      Params:         0       0       0       0       0
   326 ;;      Locals:         0       0       0       0       0
   327 ;;      Temps:          0       0       0       0       0
   328 ;;      Totals:         0       0       0       0       0
   329 ;;Total ram usage:        0 bytes
   330 ;; Hardware stack levels used:    1
   331 ;; Hardware stack levels required when called:    1
   332 ;; This function calls:
   333 ;;		Nothing
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           
   340                           ;psect for function _setup
   341  0034                     _setup:
   342  0034                     l633:	
   343                           ;incstack = 0
   344                           ; Regs used in _setup: [wreg+status,2]
   345                           
   346                           
   347                           ;mainE2.c: 70:     TRISD = 0;
   348  0034  1683               	bsf	3,5	;RP0=1, select bank1
   349  0035  1303               	bcf	3,6	;RP1=0, select bank1
   350  0036  0188               	clrf	8	;volatile
   351  0037                     l635:
   352                           
   353                           ;mainE2.c: 71:     TRISB = 0B00000011;
   354  0037  3003               	movlw	3
   355  0038  0086               	movwf	6	;volatile
   356  0039                     l637:
   357                           
   358                           ;mainE2.c: 72:     ANSELH = 0;
   359  0039  1683               	bsf	3,5	;RP0=1, select bank3
   360  003A  1703               	bsf	3,6	;RP1=1, select bank3
   361  003B  0189               	clrf	9	;volatile
   362  003C                     l639:
   363                           
   364                           ;mainE2.c: 73:     PORTD = 0;
   365  003C  1283               	bcf	3,5	;RP0=0, select bank0
   366  003D  1303               	bcf	3,6	;RP1=0, select bank0
   367  003E  0188               	clrf	8	;volatile
   368  003F                     l641:
   369                           
   370                           ;mainE2.c: 74:     PORTB = 0;
   371  003F  0186               	clrf	6	;volatile
   372                           
   373                           ;mainE2.c: 78:     IOCB = 0B00000011;
   374  0040  3003               	movlw	3
   375  0041  1683               	bsf	3,5	;RP0=1, select bank1
   376  0042  1303               	bcf	3,6	;RP1=0, select bank1
   377  0043  0096               	movwf	22	;volatile
   378                           
   379                           ;mainE2.c: 79:     INTCON = 0B11001000;
   380  0044  30C8               	movlw	200
   381  0045  008B               	movwf	11	;volatile
   382  0046                     l33:
   383  0046  0008               	return
   384  0047                     __end_of_setup:
   385                           
   386                           	psect	text2
   387  0014                     __ptext2:	
   388 ;; *************** function _isr *****************
   389 ;; Defined at:
   390 ;;		line 92 in file "mainE2.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   404 ;;      Params:         0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0
   406 ;;      Temps:          3       0       0       0       0
   407 ;;      Totals:         3       0       0       0       0
   408 ;;Total ram usage:        3 bytes
   409 ;; Hardware stack levels used:    1
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		Interrupt level 1
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           
   418                           ;psect for function _isr
   419  0014                     _isr:
   420  0014                     i1l645:
   421                           
   422                           ;mainE2.c: 93:     if (1 == RBIF){
   423  0014  1C0B               	btfss	11,0	;volatile
   424  0015  2817               	goto	u1_21
   425  0016  2818               	goto	u1_20
   426  0017                     u1_21:
   427  0017  282D               	goto	i1l41
   428  0018                     u1_20:
   429  0018                     i1l647:
   430                           
   431                           ;mainE2.c: 94:         if(1 == PORTBbits.RB0){
   432  0018  1283               	bcf	3,5	;RP0=0, select bank0
   433  0019  1303               	bcf	3,6	;RP1=0, select bank0
   434  001A  1C06               	btfss	6,0	;volatile
   435  001B  281D               	goto	u2_21
   436  001C  281E               	goto	u2_20
   437  001D                     u2_21:
   438  001D  2822               	goto	i1l653
   439  001E                     u2_20:
   440  001E                     i1l649:
   441                           
   442                           ;mainE2.c: 95:             cont--;
   443  001E  3001               	movlw	1
   444  001F  02F3               	subwf	_cont,f
   445  0020                     i1l651:
   446                           
   447                           ;mainE2.c: 96:             PORTD = cont;
   448  0020  0873               	movf	_cont,w
   449  0021  0088               	movwf	8	;volatile
   450  0022                     i1l653:
   451                           
   452                           ;mainE2.c: 98:         if (1 == PORTBbits.RB1){
   453  0022  1C86               	btfss	6,1	;volatile
   454  0023  2825               	goto	u3_21
   455  0024  2826               	goto	u3_20
   456  0025                     u3_21:
   457  0025  282C               	goto	i1l659
   458  0026                     u3_20:
   459  0026                     i1l655:
   460                           
   461                           ;mainE2.c: 99:             cont++;
   462  0026  3001               	movlw	1
   463  0027  00F0               	movwf	??_isr
   464  0028  0870               	movf	??_isr,w
   465  0029  07F3               	addwf	_cont,f
   466  002A                     i1l657:
   467                           
   468                           ;mainE2.c: 100:             PORTD = cont;
   469  002A  0873               	movf	_cont,w
   470  002B  0088               	movwf	8	;volatile
   471  002C                     i1l659:
   472                           
   473                           ;mainE2.c: 102:         RBIF = 0;
   474  002C  100B               	bcf	11,0	;volatile
   475  002D                     i1l41:
   476  002D  0872               	movf	??_isr+2,w
   477  002E  008A               	movwf	10
   478  002F  0E71               	swapf	??_isr+1,w
   479  0030  0083               	movwf	3
   480  0031  0EFE               	swapf	btemp,f
   481  0032  0E7E               	swapf	btemp,w
   482  0033  0009               	retfie
   483  0034                     __end_of_isr:
   484  007E                     btemp	set	126	;btemp
   485  007E                     wtemp0	set	126
   486                           
   487                           	psect	intentry
   488  0004                     __pintentry:	
   489                           ;incstack = 0
   490                           ; Regs used in _isr: [wreg+status,2+status,0]
   491                           
   492  0004                     interrupt_function:
   493  007E                     saved_w	set	btemp
   494  0004  00FE               	movwf	btemp
   495  0005  0E03               	swapf	3,w
   496  0006  00F1               	movwf	??_isr+1
   497  0007  080A               	movf	10,w
   498  0008  00F2               	movwf	??_isr+2
   499  0009  120A  118A  2814   	ljmp	_isr
   500                           
   501                           	psect	config
   502                           
   503                           ;Config register CONFIG1 @ 0x2007
   504                           ;	Oscillator Selection bits
   505                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   506                           ;	Watchdog Timer Enable bit
   507                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   508                           ;	Power-up Timer Enable bit
   509                           ;	PWRTE = OFF, PWRT disabled
   510                           ;	RE3/MCLR pin function select bit
   511                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   512                           ;	Code Protection bit
   513                           ;	CP = OFF, Program memory code protection is disabled
   514                           ;	Data Code Protection bit
   515                           ;	CPD = OFF, Data memory code protection is disabled
   516                           ;	Brown Out Reset Selection bits
   517                           ;	BOREN = OFF, BOR disabled
   518                           ;	Internal External Switchover bit
   519                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   520                           ;	Fail-Safe Clock Monitor Enabled bit
   521                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   522                           ;	Low Voltage Programming Enable bit
   523                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   524                           ;	In-Circuit Debugger Mode bit
   525                           ;	DEBUG = 0x1, unprogrammed default
   526  2007                     	org	8199
   527  2007  20D1               	dw	8401
   528                           
   529                           ;Config register CONFIG2 @ 0x2008
   530                           ;	Brown-out Reset Selection bit
   531                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   532                           ;	Flash Program Memory Self Write Enable bits
   533                           ;	WRT = OFF, Write protection off
   534  2008                     	org	8200
   535  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 17 11:10:28 2021

                     l33 0046                       l27 004C                      l641 003F  
                    l633 0034                      l635 0037                      l643 0047  
                    l637 0039                      l639 003C                      _isr 0014  
                   ?_isr 0070                     _IOCB 0096                     _RBIF 0058  
                   i1l41 002D                     u1_20 0018                     u1_21 0017  
                   u2_20 001E                     u2_21 001D                     u3_20 0026  
                   u3_21 0025                     _cont 0073                     _main 0047  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    i1l651 0020                    i1l653 0022  
                  i1l645 0014                    i1l655 0026                    i1l647 0018  
                  i1l657 002A                    i1l649 001E                    i1l659 002C  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _setup 0034                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0051                   ??_main 0073                   ?_setup 0070  
                 _ANSELH 0189                   _INTCON 000B                   saved_w 007E  
__end_of__initialization 0010           __pcstackCOMMON 0070            __end_of_setup 0047  
                ??_setup 0073               __pmaintext 0047               __pintentry 0004  
                __ptext1 0034                  __ptext2 0014             __size_of_isr 0020  
   end_of_initialization 0010                _PORTBbits 0006      start_initialization 000F  
            __end_of_isr 0034              __pbssCOMMON 0073                ___latbits 0002  
         __size_of_setup 0013        interrupt_function 0004            __size_of_main 000A  
               intlevel1 0000  
