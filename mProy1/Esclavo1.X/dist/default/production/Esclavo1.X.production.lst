

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 10:28:46 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0013                     _SSPBUF	set	19
   285  000B                     _INTCON	set	11
   286  000C                     _PIR1bits	set	12
   287  0014                     _SSPCON	set	20
   288  001F                     _ADCON0	set	31
   289  0007                     _PORTC	set	7
   290  0006                     _PORTB	set	6
   291  0008                     _PORTD	set	8
   292  001F                     _ADCON0bits	set	31
   293  001E                     _ADRESH	set	30
   294  0063                     _SSPIF	set	99
   295  0066                     _ADIF	set	102
   296  005F                     _GIE	set	95
   297  008C                     _PIE1	set	140
   298  0091                     _SSPCON2	set	145
   299  0094                     _SSPSTAT	set	148
   300  0087                     _TRISC	set	135
   301  0085                     _TRISA	set	133
   302  009F                     _ADCON1	set	159
   303  0088                     _TRISD	set	136
   304  0086                     _TRISB	set	134
   305  0189                     _ANSELH	set	393
   306                           
   307                           	psect	cinit
   308  0011                     start_initialization:	
   309                           ; #config settings
   310                           
   311  0011                     __initialization:
   312                           
   313                           ; Clear objects allocated to COMMON
   314  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   315  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   316  0013                     end_of_initialization:	
   317                           ;End of C runtime variable initialization code
   318                           
   319  0013                     __end_of__initialization:
   320  0013  0183               	clrf	3
   321  0014  120A  118A  2869   	ljmp	_main	;jump to C main() function
   322                           
   323                           	psect	bssCOMMON
   324  0078                     __pbssCOMMON:
   325  0078                     _spi_data:
   326  0078                     	ds	1
   327  0079                     _adc_data:
   328  0079                     	ds	1
   329                           
   330                           	psect	cstackCOMMON
   331  0070                     __pcstackCOMMON:
   332  0070                     ?_setup:
   333  0070                     ?_adc_lect:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ??_adc_lect:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_adc_start:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_main:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_isr:	
   346                           ; 1 bytes @ 0x0
   347                           
   348                           
   349                           ; 1 bytes @ 0x0
   350  0070                     	ds	1
   351  0071                     adc_lect@data:
   352                           
   353                           ; 1 bytes @ 0x1
   354  0071                     	ds	1
   355  0072                     ??_isr:
   356                           
   357                           ; 1 bytes @ 0x2
   358  0072                     	ds	4
   359  0076                     ??_setup:
   360  0076                     ??_adc_start:	
   361                           ; 1 bytes @ 0x6
   362                           
   363                           
   364                           ; 1 bytes @ 0x6
   365  0076                     	ds	2
   366  0078                     ??_main:
   367                           
   368                           	psect	maintext
   369  0069                     __pmaintext:	
   370                           ; 1 bytes @ 0x8
   371 ;;
   372 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   373 ;;
   374 ;; *************** function _main *****************
   375 ;; Defined at:
   376 ;;		line 57 in file "mainE1.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;		None
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, status,2, status,0, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : B00/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         0       0       0       0       0
   392 ;;      Temps:          0       0       0       0       0
   393 ;;      Totals:         0       0       0       0       0
   394 ;;Total ram usage:        0 bytes
   395 ;; Hardware stack levels required when called:    3
   396 ;; This function calls:
   397 ;;		_adc_start
   398 ;;		_setup
   399 ;; This function is called by:
   400 ;;		Startup code after reset
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           
   405                           ;psect for function _main
   406  0069                     _main:
   407  0069                     l717:	
   408                           ;incstack = 0
   409                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   410                           
   411                           
   412                           ;mainE1.c: 58:     setup();
   413  0069  120A  118A  2017  120A  118A  	fcall	_setup
   414  006E                     l70:	
   415                           ;mainE1.c: 59:     while (1) {
   416                           
   417                           
   418                           ;mainE1.c: 60:         adc_start();
   419  006E  120A  118A  207B  120A  118A  	fcall	_adc_start
   420  0073                     l719:
   421                           
   422                           ;mainE1.c: 61:         PORTD = adc_data;
   423  0073  0879               	movf	_adc_data,w
   424  0074  1283               	bcf	3,5	;RP0=0, select bank0
   425  0075  1303               	bcf	3,6	;RP1=0, select bank0
   426  0076  0088               	movwf	8	;volatile
   427  0077  286E               	goto	l70
   428  0078  120A  118A  280E   	ljmp	start
   429  007B                     __end_of_main:
   430                           
   431                           	psect	text1
   432  0017                     __ptext1:	
   433 ;; *************** function _setup *****************
   434 ;; Defined at:
   435 ;;		line 69 in file "mainE1.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, status,2, status,0
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   449 ;;      Params:         0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0
   451 ;;      Temps:          1       0       0       0       0
   452 ;;      Totals:         1       0       0       0       0
   453 ;;Total ram usage:        1 bytes
   454 ;; Hardware stack levels used:    1
   455 ;; Hardware stack levels required when called:    2
   456 ;; This function calls:
   457 ;;		Nothing
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           
   464                           ;psect for function _setup
   465  0017                     _setup:
   466  0017                     l683:	
   467                           ;incstack = 0
   468                           ; Regs used in _setup: [wreg+status,2+status,0]
   469                           
   470                           
   471                           ;mainE1.c: 73:     TRISB &= 0B11111111;
   472  0017  1683               	bsf	3,5	;RP0=1, select bank1
   473  0018  1303               	bcf	3,6	;RP1=0, select bank1
   474  0019  0806               	movf	6,w	;volatile
   475  001A                     l685:
   476                           
   477                           ;mainE1.c: 74:     TRISD &= 0;
   478  001A  0188               	clrf	8	;volatile
   479  001B                     l687:
   480                           
   481                           ;mainE1.c: 75:     ANSELH &= 0B00010000;
   482  001B  3010               	movlw	16
   483  001C  00F6               	movwf	??_setup
   484  001D  0876               	movf	??_setup,w
   485  001E  1683               	bsf	3,5	;RP0=1, select bank3
   486  001F  1703               	bsf	3,6	;RP1=1, select bank3
   487  0020  0589               	andwf	9,f	;volatile
   488  0021                     l689:
   489                           
   490                           ;mainE1.c: 76:     PORTD = 0;
   491  0021  1283               	bcf	3,5	;RP0=0, select bank0
   492  0022  1303               	bcf	3,6	;RP1=0, select bank0
   493  0023  0188               	clrf	8	;volatile
   494  0024                     l691:
   495                           
   496                           ;mainE1.c: 77:     PORTB = 0;
   497  0024  0186               	clrf	6	;volatile
   498  0025                     l693:
   499                           
   500                           ;mainE1.c: 78:     PORTC = 0;
   501  0025  0187               	clrf	7	;volatile
   502  0026                     l695:
   503                           
   504                           ;mainE1.c: 82:     ADCON0 = 0B01110000;
   505  0026  3070               	movlw	112
   506  0027  009F               	movwf	31	;volatile
   507  0028                     l697:
   508                           
   509                           ;mainE1.c: 83:     ADCON1 = 0B00000000;
   510  0028  1683               	bsf	3,5	;RP0=1, select bank1
   511  0029  1303               	bcf	3,6	;RP1=0, select bank1
   512  002A  019F               	clrf	31	;volatile
   513  002B                     l699:
   514                           
   515                           ;mainE1.c: 84:     ADCON0bits.ADON = 1;
   516  002B  1283               	bcf	3,5	;RP0=0, select bank0
   517  002C  1303               	bcf	3,6	;RP1=0, select bank0
   518  002D  141F               	bsf	31,0	;volatile
   519  002E                     l701:
   520                           
   521                           ;mainE1.c: 88:     TRISA = 0B00100000;
   522  002E  3020               	movlw	32
   523  002F  1683               	bsf	3,5	;RP0=1, select bank1
   524  0030  1303               	bcf	3,6	;RP1=0, select bank1
   525  0031  0085               	movwf	5	;volatile
   526  0032                     l703:
   527                           
   528                           ;mainE1.c: 89:     TRISC = 0B00011000;
   529  0032  3018               	movlw	24
   530  0033  0087               	movwf	7	;volatile
   531  0034                     l705:
   532                           
   533                           ;mainE1.c: 91:     SSPSTAT = 0B00000000;
   534  0034  0194               	clrf	20	;volatile
   535  0035                     l707:
   536                           
   537                           ;mainE1.c: 92:     SSPCON2 = 0;
   538  0035  0191               	clrf	17	;volatile
   539  0036                     l709:
   540                           
   541                           ;mainE1.c: 93:     SSPCON = 0B00110100;
   542  0036  3034               	movlw	52
   543  0037  1283               	bcf	3,5	;RP0=0, select bank0
   544  0038  1303               	bcf	3,6	;RP1=0, select bank0
   545  0039  0094               	movwf	20	;volatile
   546  003A                     l711:
   547                           
   548                           ;mainE1.c: 97:     PIE1 = 0B01001000;
   549  003A  3048               	movlw	72
   550  003B  1683               	bsf	3,5	;RP0=1, select bank1
   551  003C  1303               	bcf	3,6	;RP1=0, select bank1
   552  003D  008C               	movwf	12	;volatile
   553  003E                     l713:
   554                           
   555                           ;mainE1.c: 98:     PIR1bits.ADIF = 0;
   556  003E  1283               	bcf	3,5	;RP0=0, select bank0
   557  003F  1303               	bcf	3,6	;RP1=0, select bank0
   558  0040  130C               	bcf	12,6	;volatile
   559  0041                     l715:
   560                           
   561                           ;mainE1.c: 99:     INTCON = 0B11001000;
   562  0041  30C8               	movlw	200
   563  0042  008B               	movwf	11	;volatile
   564  0043                     l76:
   565  0043  0008               	return
   566  0044                     __end_of_setup:
   567                           
   568                           	psect	text2
   569  007B                     __ptext2:	
   570 ;; *************** function _adc_start *****************
   571 ;; Defined at:
   572 ;;		line 19 in file "adclib.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   586 ;;      Params:         0       0       0       0       0
   587 ;;      Locals:         0       0       0       0       0
   588 ;;      Temps:          2       0       0       0       0
   589 ;;      Totals:         2       0       0       0       0
   590 ;;Total ram usage:        2 bytes
   591 ;; Hardware stack levels used:    1
   592 ;; Hardware stack levels required when called:    2
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		_main
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           
   601                           ;psect for function _adc_start
   602  007B                     _adc_start:
   603  007B                     l677:	
   604                           ;incstack = 0
   605                           ; Regs used in _adc_start: [wreg]
   606                           
   607                           
   608                           ;adclib.c: 20:     if (0 == ADCON0bits.GO_nDONE) {
   609  007B  1283               	bcf	3,5	;RP0=0, select bank0
   610  007C  1303               	bcf	3,6	;RP1=0, select bank0
   611  007D  189F               	btfsc	31,1	;volatile
   612  007E  2880               	goto	u11
   613  007F  2881               	goto	u10
   614  0080                     u11:
   615  0080  288C               	goto	l13
   616  0081                     u10:
   617  0081                     l679:
   618                           
   619                           ;adclib.c: 21:         _delay((unsigned long)((5)*(4000000/4000.0)));
   620  0081  3007               	movlw	7
   621  0082  00F7               	movwf	??_adc_start+1
   622  0083  307D               	movlw	125
   623  0084  00F6               	movwf	??_adc_start
   624  0085                     u47:
   625  0085  0BF6               	decfsz	??_adc_start,f
   626  0086  2885               	goto	u47
   627  0087  0BF7               	decfsz	??_adc_start+1,f
   628  0088  2885               	goto	u47
   629  0089                     l681:
   630                           
   631                           ;adclib.c: 22:         ADCON0bits.GO_nDONE = 1;
   632  0089  1283               	bcf	3,5	;RP0=0, select bank0
   633  008A  1303               	bcf	3,6	;RP1=0, select bank0
   634  008B  149F               	bsf	31,1	;volatile
   635  008C                     l13:
   636  008C  0008               	return
   637  008D                     __end_of_adc_start:
   638                           
   639                           	psect	text3
   640  0044                     __ptext3:	
   641 ;; *************** function _isr *****************
   642 ;; Defined at:
   643 ;;		line 111 in file "mainE1.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   657 ;;      Params:         0       0       0       0       0
   658 ;;      Locals:         0       0       0       0       0
   659 ;;      Temps:          4       0       0       0       0
   660 ;;      Totals:         4       0       0       0       0
   661 ;;Total ram usage:        4 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; Hardware stack levels required when called:    1
   664 ;; This function calls:
   665 ;;		_adc_lect
   666 ;; This function is called by:
   667 ;;		Interrupt level 1
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           
   672                           ;psect for function _isr
   673  0044                     _isr:
   674  0044                     i1l721:
   675                           
   676                           ;mainE1.c: 112:     GIE = 0;
   677  0044  138B               	bcf	11,7	;volatile
   678                           
   679                           ;mainE1.c: 113:     if (1 == ADIF) {
   680  0045  1283               	bcf	3,5	;RP0=0, select bank0
   681  0046  1303               	bcf	3,6	;RP1=0, select bank0
   682  0047  1F0C               	btfss	12,6	;volatile
   683  0048  284A               	goto	u2_21
   684  0049  284B               	goto	u2_20
   685  004A                     u2_21:
   686  004A  2854               	goto	i1l727
   687  004B                     u2_20:
   688  004B                     i1l723:
   689                           
   690                           ;mainE1.c: 114:         adc_lect(&adc_data);
   691  004B  3079               	movlw	(low (_adc_data| 0))& (0+255)
   692  004C  120A  118A  208D  120A  118A  	fcall	_adc_lect
   693  0051                     i1l725:
   694                           
   695                           ;mainE1.c: 115:         ADIF = 0;
   696  0051  1283               	bcf	3,5	;RP0=0, select bank0
   697  0052  1303               	bcf	3,6	;RP1=0, select bank0
   698  0053  130C               	bcf	12,6	;volatile
   699  0054                     i1l727:
   700                           
   701                           ;mainE1.c: 117:     if (1 == SSPIF) {
   702  0054  1D8C               	btfss	12,3	;volatile
   703  0055  2857               	goto	u3_21
   704  0056  2858               	goto	u3_20
   705  0057                     u3_21:
   706  0057  285F               	goto	i1l733
   707  0058                     u3_20:
   708  0058                     i1l729:
   709                           
   710                           ;mainE1.c: 118:         spi_data = SSPBUF;
   711  0058  0813               	movf	19,w	;volatile
   712  0059  00F2               	movwf	??_isr
   713  005A  0872               	movf	??_isr,w
   714  005B  00F8               	movwf	_spi_data
   715                           
   716                           ;mainE1.c: 119:         SSPBUF = adc_data;
   717  005C  0879               	movf	_adc_data,w
   718  005D  0093               	movwf	19	;volatile
   719  005E                     i1l731:
   720                           
   721                           ;mainE1.c: 120:         SSPIF = 0;
   722  005E  118C               	bcf	12,3	;volatile
   723  005F                     i1l733:
   724                           
   725                           ;mainE1.c: 122:     GIE = 1;
   726  005F  178B               	bsf	11,7	;volatile
   727  0060                     i1l83:
   728  0060  0875               	movf	??_isr+3,w
   729  0061  008A               	movwf	10
   730  0062  0874               	movf	??_isr+2,w
   731  0063  0084               	movwf	4
   732  0064  0E73               	swapf	??_isr+1,w
   733  0065  0083               	movwf	3
   734  0066  0EFE               	swapf	btemp,f
   735  0067  0E7E               	swapf	btemp,w
   736  0068  0009               	retfie
   737  0069                     __end_of_isr:
   738                           
   739                           	psect	intentry
   740  0004                     __pintentry:	
   741                           ;incstack = 0
   742                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   743                           
   744  0004                     interrupt_function:
   745  007E                     saved_w	set	btemp
   746  0004  00FE               	movwf	btemp
   747  0005  0E03               	swapf	3,w
   748  0006  00F3               	movwf	??_isr+1
   749  0007  0804               	movf	4,w
   750  0008  00F4               	movwf	??_isr+2
   751  0009  080A               	movf	10,w
   752  000A  00F5               	movwf	??_isr+3
   753  000B  120A  118A  2844   	ljmp	_isr
   754                           
   755                           	psect	text4
   756  008D                     __ptext4:	
   757 ;; *************** function _adc_lect *****************
   758 ;; Defined at:
   759 ;;		line 15 in file "adclib.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;  data            1    wreg     PTR volatile unsigned ch
   762 ;;		 -> adc_data(1), 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  data            1    1[COMMON] PTR volatile unsigned ch
   765 ;;		 -> adc_data(1), 
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, fsr0l, fsr0h
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   775 ;;      Params:         0       0       0       0       0
   776 ;;      Locals:         1       0       0       0       0
   777 ;;      Temps:          1       0       0       0       0
   778 ;;      Totals:         2       0       0       0       0
   779 ;;Total ram usage:        2 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_isr
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           
   789                           ;psect for function _adc_lect
   790  008D                     _adc_lect:
   791                           
   792                           ;incstack = 0
   793                           ; Regs used in _adc_lect: [wregfsr0]
   794                           ;adc_lect@data stored from wreg
   795  008D  00F1               	movwf	adc_lect@data
   796  008E                     i1l675:
   797                           
   798                           ;adclib.c: 16:     *data = ADRESH;
   799  008E  1283               	bcf	3,5	;RP0=0, select bank0
   800  008F  1303               	bcf	3,6	;RP1=0, select bank0
   801  0090  081E               	movf	30,w	;volatile
   802  0091  00F0               	movwf	??_adc_lect
   803  0092  0871               	movf	adc_lect@data,w
   804  0093  0084               	movwf	4
   805  0094  0870               	movf	??_adc_lect,w
   806  0095  0080               	movwf	0
   807  0096                     i1l9:
   808  0096  0008               	return
   809  0097                     __end_of_adc_lect:
   810  007E                     btemp	set	126	;btemp
   811  007E                     wtemp0	set	126
   812                           
   813                           	psect	config
   814                           
   815                           ;Config register CONFIG1 @ 0x2007
   816                           ;	Oscillator Selection bits
   817                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   818                           ;	Watchdog Timer Enable bit
   819                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   820                           ;	Power-up Timer Enable bit
   821                           ;	PWRTE = OFF, PWRT disabled
   822                           ;	RE3/MCLR pin function select bit
   823                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   824                           ;	Code Protection bit
   825                           ;	CP = OFF, Program memory code protection is disabled
   826                           ;	Data Code Protection bit
   827                           ;	CPD = OFF, Data memory code protection is disabled
   828                           ;	Brown Out Reset Selection bits
   829                           ;	BOREN = OFF, BOR disabled
   830                           ;	Internal External Switchover bit
   831                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   832                           ;	Fail-Safe Clock Monitor Enabled bit
   833                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   834                           ;	Low Voltage Programming Enable bit
   835                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   836                           ;	In-Circuit Debugger Mode bit
   837                           ;	DEBUG = 0x1, unprogrammed default
   838  2007                     	org	8199
   839  2007  20D1               	dw	8401
   840                           
   841                           ;Config register CONFIG2 @ 0x2008
   842                           ;	Brown-out Reset Selection bit
   843                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   844                           ;	Flash Program Memory Self Write Enable bits
   845                           ;	WRT = OFF, Write protection off
   846  2008                     	org	8200
   847  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    adc_lect@data	PTR volatile unsigned char  size(1) Largest target is 1
		 -> adc_data(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_adc_start

Critical Paths under _isr in COMMON

    _isr->_adc_lect

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _adc_start
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_start                                            2     2      0       0
                                              6 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0      45
                                              2 COMMON     4     4      0
                           _adc_lect
 ---------------------------------------------------------------------------------
 (3) _adc_lect                                             2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_start
   _setup

 _isr (ROOT)
   _adc_lect

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 10:28:46 2021

                     l13 008C                       l70 006E                       l76 0043  
                     u10 0081                       u11 0080                       u47 0085  
                    l701 002E                      l711 003A                      l703 0032  
                    l713 003E                      l705 0034                      l715 0041  
                    l707 0035                      l709 0036                      l717 0069  
                    l719 0073                      l681 0089                      l691 0024  
                    l683 0017                      l677 007B                      l693 0025  
                    l685 001A                      l679 0081                      l695 0026  
                    l687 001B                      l697 0028                      l689 0021  
                    l699 002B                      _GIE 005F                      i1l9 0096  
                    _isr 0044                      fsr0 0004                      indf 0000  
                   _ADIF 0066                     ?_isr 0070                     _PIE1 008C  
                   i1l83 0060                     u2_20 004B                     u2_21 004A  
                   u3_20 0058                     u3_21 0057                     _main 0069  
                   btemp 007E                     start 000E                    ??_isr 0072  
                  ?_main 0070                    i1l721 0044                    i1l731 005E  
                  i1l723 004B                    i1l733 005F                    i1l725 0051  
                  i1l727 0054                    i1l729 0058                    i1l675 008E  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _SSPIF 0063                    _setup 0017  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 007B                   ??_main 0078  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189         __end_of_adc_lect 0097  
                 _INTCON 000B                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E  __end_of__initialization 0013       __size_of_adc_start 0012  
         __pcstackCOMMON 0070            __end_of_setup 0044                  ??_setup 0076  
           adc_lect@data 0071               __pmaintext 0069               __pintentry 0004  
              ?_adc_lect 0070        __end_of_adc_start 008D                  _SSPCON2 0091  
                _SSPSTAT 0094               ??_adc_lect 0070                  __ptext1 0017  
                __ptext2 007B                  __ptext3 0044                  __ptext4 008D  
           __size_of_isr 0025     end_of_initialization 0013      start_initialization 0011  
            __end_of_isr 0069        __size_of_adc_lect 000A              __pbssCOMMON 0078  
              ___latbits 0002                _adc_start 007B               ?_adc_start 0070  
         __size_of_setup 002D        interrupt_function 0004                 _PIR1bits 000C  
             _ADCON0bits 001F                 _adc_data 0079                 _adc_lect 008D  
            ??_adc_start 0076            __size_of_main 0012                 _spi_data 0078  
               intlevel1 0000  
