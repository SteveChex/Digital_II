

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 17 10:23:15 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  000B                     _INTCON	set	11
   285  000C                     _PIR1bits	set	12
   286  001F                     _ADCON0	set	31
   287  0006                     _PORTB	set	6
   288  0008                     _PORTD	set	8
   289  001F                     _ADCON0bits	set	31
   290  001E                     _ADRESH	set	30
   291  0066                     _ADIF	set	102
   292  008C                     _PIE1	set	140
   293  009F                     _ADCON1	set	159
   294  0088                     _TRISD	set	136
   295  0086                     _TRISB	set	134
   296  0189                     _ANSELH	set	393
   297                           
   298                           	psect	cinit
   299  0011                     start_initialization:	
   300                           ; #config settings
   301                           
   302  0011                     __initialization:
   303                           
   304                           ; Clear objects allocated to COMMON
   305  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   306  0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   307  0013                     end_of_initialization:	
   308                           ;End of C runtime variable initialization code
   309                           
   310  0013                     __end_of__initialization:
   311  0013  0183               	clrf	3
   312  0014  120A  118A  284F   	ljmp	_main	;jump to C main() function
   313                           
   314                           	psect	bssCOMMON
   315  0077                     __pbssCOMMON:
   316  0077                     _spi_data:
   317  0077                     	ds	1
   318  0078                     _adc_data:
   319  0078                     	ds	1
   320                           
   321                           	psect	cstackCOMMON
   322  0070                     __pcstackCOMMON:
   323  0070                     ?_setup:
   324  0070                     ?_adc_lect:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ??_adc_lect:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_adc_start:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_main:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_isr:	
   337                           ; 1 bytes @ 0x0
   338                           
   339                           
   340                           ; 1 bytes @ 0x0
   341  0070                     	ds	1
   342  0071                     adc_lect@data:
   343                           
   344                           ; 1 bytes @ 0x1
   345  0071                     	ds	1
   346  0072                     ??_isr:
   347                           
   348                           ; 1 bytes @ 0x2
   349  0072                     	ds	3
   350  0075                     ??_setup:
   351  0075                     ??_adc_start:	
   352                           ; 1 bytes @ 0x5
   353                           
   354                           
   355                           ; 1 bytes @ 0x5
   356  0075                     	ds	2
   357  0077                     ??_main:
   358                           
   359                           	psect	maintext
   360  004F                     __pmaintext:	
   361                           ; 1 bytes @ 0x7
   362 ;;
   363 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   364 ;;
   365 ;; *************** function _main *****************
   366 ;; Defined at:
   367 ;;		line 57 in file "main.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, status,2, status,0, pclath, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : B00/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   381 ;;      Params:         0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0
   384 ;;      Totals:         0       0       0       0       0
   385 ;;Total ram usage:        0 bytes
   386 ;; Hardware stack levels required when called:    3
   387 ;; This function calls:
   388 ;;		_adc_start
   389 ;;		_setup
   390 ;; This function is called by:
   391 ;;		Startup code after reset
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           
   396                           ;psect for function _main
   397  004F                     _main:
   398  004F                     l686:	
   399                           ;incstack = 0
   400                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   401                           
   402                           
   403                           ;main.c: 58:     setup();
   404  004F  120A  118A  2017  120A  118A  	fcall	_setup
   405  0054                     l52:	
   406                           ;main.c: 59:     while (1) {
   407                           
   408                           
   409                           ;main.c: 60:         adc_start();
   410  0054  120A  118A  2061  120A  118A  	fcall	_adc_start
   411  0059                     l688:
   412                           
   413                           ;main.c: 61:         PORTD = adc_data;
   414  0059  0878               	movf	_adc_data,w
   415  005A  1283               	bcf	3,5	;RP0=0, select bank0
   416  005B  1303               	bcf	3,6	;RP1=0, select bank0
   417  005C  0088               	movwf	8	;volatile
   418  005D  2854               	goto	l52
   419  005E  120A  118A  280E   	ljmp	start
   420  0061                     __end_of_main:
   421                           
   422                           	psect	text1
   423  0017                     __ptext1:	
   424 ;; *************** function _setup *****************
   425 ;; Defined at:
   426 ;;		line 69 in file "main.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, status,2, status,0
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   440 ;;      Params:         0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0
   442 ;;      Temps:          1       0       0       0       0
   443 ;;      Totals:         1       0       0       0       0
   444 ;;Total ram usage:        1 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; Hardware stack levels required when called:    2
   447 ;; This function calls:
   448 ;;		Nothing
   449 ;; This function is called by:
   450 ;;		_main
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           
   455                           ;psect for function _setup
   456  0017                     _setup:
   457  0017                     l664:	
   458                           ;incstack = 0
   459                           ; Regs used in _setup: [wreg+status,2+status,0]
   460                           
   461                           
   462                           ;main.c: 73:     TRISB &= 0B11111111;
   463  0017  1683               	bsf	3,5	;RP0=1, select bank1
   464  0018  1303               	bcf	3,6	;RP1=0, select bank1
   465  0019  0806               	movf	6,w	;volatile
   466  001A                     l666:
   467                           
   468                           ;main.c: 74:     TRISD &= 0;
   469  001A  0188               	clrf	8	;volatile
   470  001B                     l668:
   471                           
   472                           ;main.c: 75:     ANSELH &= 0B00010000;
   473  001B  3010               	movlw	16
   474  001C  00F5               	movwf	??_setup
   475  001D  0875               	movf	??_setup,w
   476  001E  1683               	bsf	3,5	;RP0=1, select bank3
   477  001F  1703               	bsf	3,6	;RP1=1, select bank3
   478  0020  0589               	andwf	9,f	;volatile
   479  0021                     l670:
   480                           
   481                           ;main.c: 76:     PORTD = 0;
   482  0021  1283               	bcf	3,5	;RP0=0, select bank0
   483  0022  1303               	bcf	3,6	;RP1=0, select bank0
   484  0023  0188               	clrf	8	;volatile
   485  0024                     l672:
   486                           
   487                           ;main.c: 77:     PORTB = 0;
   488  0024  0186               	clrf	6	;volatile
   489  0025                     l674:
   490                           
   491                           ;main.c: 81:     ADCON0 = 0B01110000;
   492  0025  3070               	movlw	112
   493  0026  009F               	movwf	31	;volatile
   494  0027                     l676:
   495                           
   496                           ;main.c: 82:     ADCON1 = 0B00000000;
   497  0027  1683               	bsf	3,5	;RP0=1, select bank1
   498  0028  1303               	bcf	3,6	;RP1=0, select bank1
   499  0029  019F               	clrf	31	;volatile
   500  002A                     l678:
   501                           
   502                           ;main.c: 83:     ADCON0bits.ADON = 1;
   503  002A  1283               	bcf	3,5	;RP0=0, select bank0
   504  002B  1303               	bcf	3,6	;RP1=0, select bank0
   505  002C  141F               	bsf	31,0	;volatile
   506  002D                     l680:
   507                           
   508                           ;main.c: 87:     PIE1 = 0B01000000;
   509  002D  3040               	movlw	64
   510  002E  1683               	bsf	3,5	;RP0=1, select bank1
   511  002F  1303               	bcf	3,6	;RP1=0, select bank1
   512  0030  008C               	movwf	12	;volatile
   513  0031                     l682:
   514                           
   515                           ;main.c: 88:     PIR1bits.ADIF = 0;
   516  0031  1283               	bcf	3,5	;RP0=0, select bank0
   517  0032  1303               	bcf	3,6	;RP1=0, select bank0
   518  0033  130C               	bcf	12,6	;volatile
   519  0034                     l684:
   520                           
   521                           ;main.c: 89:     INTCON = 0B11001000;
   522  0034  30C8               	movlw	200
   523  0035  008B               	movwf	11	;volatile
   524  0036                     l58:
   525  0036  0008               	return
   526  0037                     __end_of_setup:
   527                           
   528                           	psect	text2
   529  0061                     __ptext2:	
   530 ;; *************** function _adc_start *****************
   531 ;; Defined at:
   532 ;;		line 19 in file "adclib.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0
   548 ;;      Temps:          2       0       0       0       0
   549 ;;      Totals:         2       0       0       0       0
   550 ;;Total ram usage:        2 bytes
   551 ;; Hardware stack levels used:    1
   552 ;; Hardware stack levels required when called:    2
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           
   561                           ;psect for function _adc_start
   562  0061                     _adc_start:
   563  0061                     l658:	
   564                           ;incstack = 0
   565                           ; Regs used in _adc_start: [wreg]
   566                           
   567                           
   568                           ;adclib.c: 20:     if (0 == ADCON0bits.GO_nDONE) {
   569  0061  1283               	bcf	3,5	;RP0=0, select bank0
   570  0062  1303               	bcf	3,6	;RP1=0, select bank0
   571  0063  189F               	btfsc	31,1	;volatile
   572  0064  2866               	goto	u11
   573  0065  2867               	goto	u10
   574  0066                     u11:
   575  0066  2872               	goto	l13
   576  0067                     u10:
   577  0067                     l660:
   578                           
   579                           ;adclib.c: 21:         _delay((unsigned long)((5)*(4000000/4000.0)));
   580  0067  3007               	movlw	7
   581  0068  00F6               	movwf	??_adc_start+1
   582  0069  307D               	movlw	125
   583  006A  00F5               	movwf	??_adc_start
   584  006B                     u37:
   585  006B  0BF5               	decfsz	??_adc_start,f
   586  006C  286B               	goto	u37
   587  006D  0BF6               	decfsz	??_adc_start+1,f
   588  006E  286B               	goto	u37
   589  006F                     l662:
   590                           
   591                           ;adclib.c: 22:         ADCON0bits.GO_nDONE = 1;
   592  006F  1283               	bcf	3,5	;RP0=0, select bank0
   593  0070  1303               	bcf	3,6	;RP1=0, select bank0
   594  0071  149F               	bsf	31,1	;volatile
   595  0072                     l13:
   596  0072  0008               	return
   597  0073                     __end_of_adc_start:
   598                           
   599                           	psect	text3
   600  0037                     __ptext3:	
   601 ;; *************** function _isr *****************
   602 ;; Defined at:
   603 ;;		line 101 in file "main.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   617 ;;      Params:         0       0       0       0       0
   618 ;;      Locals:         0       0       0       0       0
   619 ;;      Temps:          3       0       0       0       0
   620 ;;      Totals:         3       0       0       0       0
   621 ;;Total ram usage:        3 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; Hardware stack levels required when called:    1
   624 ;; This function calls:
   625 ;;		_adc_lect
   626 ;; This function is called by:
   627 ;;		Interrupt level 1
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function _isr
   633  0037                     _isr:
   634  0037                     i1l690:
   635                           
   636                           ;main.c: 102:     if (1 == ADIF){
   637  0037  1283               	bcf	3,5	;RP0=0, select bank0
   638  0038  1303               	bcf	3,6	;RP1=0, select bank0
   639  0039  1F0C               	btfss	12,6	;volatile
   640  003A  283C               	goto	u2_21
   641  003B  283D               	goto	u2_20
   642  003C                     u2_21:
   643  003C  2846               	goto	i1l64
   644  003D                     u2_20:
   645  003D                     i1l692:
   646                           
   647                           ;main.c: 103:         adc_lect(&adc_data);
   648  003D  3078               	movlw	(low (_adc_data| 0))& (0+255)
   649  003E  120A  118A  2073  120A  118A  	fcall	_adc_lect
   650  0043                     i1l694:
   651                           
   652                           ;main.c: 104:         ADIF = 0;
   653  0043  1283               	bcf	3,5	;RP0=0, select bank0
   654  0044  1303               	bcf	3,6	;RP1=0, select bank0
   655  0045  130C               	bcf	12,6	;volatile
   656  0046                     i1l64:
   657  0046  0874               	movf	??_isr+2,w
   658  0047  008A               	movwf	10
   659  0048  0873               	movf	??_isr+1,w
   660  0049  0084               	movwf	4
   661  004A  0E72               	swapf	??_isr,w
   662  004B  0083               	movwf	3
   663  004C  0EFE               	swapf	btemp,f
   664  004D  0E7E               	swapf	btemp,w
   665  004E  0009               	retfie
   666  004F                     __end_of_isr:
   667                           
   668                           	psect	intentry
   669  0004                     __pintentry:	
   670                           ;incstack = 0
   671                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   672                           
   673  0004                     interrupt_function:
   674  007E                     saved_w	set	btemp
   675  0004  00FE               	movwf	btemp
   676  0005  0E03               	swapf	3,w
   677  0006  00F2               	movwf	??_isr
   678  0007  0804               	movf	4,w
   679  0008  00F3               	movwf	??_isr+1
   680  0009  080A               	movf	10,w
   681  000A  00F4               	movwf	??_isr+2
   682  000B  120A  118A  2837   	ljmp	_isr
   683                           
   684                           	psect	text4
   685  0073                     __ptext4:	
   686 ;; *************** function _adc_lect *****************
   687 ;; Defined at:
   688 ;;		line 15 in file "adclib.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  data            1    wreg     PTR volatile unsigned ch
   691 ;;		 -> adc_data(1), 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  data            1    1[COMMON] PTR volatile unsigned ch
   694 ;;		 -> adc_data(1), 
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, fsr0l, fsr0h
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         0       0       0       0       0
   705 ;;      Locals:         1       0       0       0       0
   706 ;;      Temps:          1       0       0       0       0
   707 ;;      Totals:         2       0       0       0       0
   708 ;;Total ram usage:        2 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; This function calls:
   711 ;;		Nothing
   712 ;; This function is called by:
   713 ;;		_isr
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           
   718                           ;psect for function _adc_lect
   719  0073                     _adc_lect:
   720                           
   721                           ;incstack = 0
   722                           ; Regs used in _adc_lect: [wregfsr0]
   723                           ;adc_lect@data stored from wreg
   724  0073  00F1               	movwf	adc_lect@data
   725  0074                     i1l656:
   726                           
   727                           ;adclib.c: 16:     *data = ADRESH;
   728  0074  1283               	bcf	3,5	;RP0=0, select bank0
   729  0075  1303               	bcf	3,6	;RP1=0, select bank0
   730  0076  081E               	movf	30,w	;volatile
   731  0077  00F0               	movwf	??_adc_lect
   732  0078  0871               	movf	adc_lect@data,w
   733  0079  0084               	movwf	4
   734  007A  0870               	movf	??_adc_lect,w
   735  007B  0080               	movwf	0
   736  007C                     i1l9:
   737  007C  0008               	return
   738  007D                     __end_of_adc_lect:
   739  007E                     btemp	set	126	;btemp
   740  007E                     wtemp0	set	126
   741                           
   742                           	psect	config
   743                           
   744                           ;Config register CONFIG1 @ 0x2007
   745                           ;	Oscillator Selection bits
   746                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   747                           ;	Watchdog Timer Enable bit
   748                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   749                           ;	Power-up Timer Enable bit
   750                           ;	PWRTE = OFF, PWRT disabled
   751                           ;	RE3/MCLR pin function select bit
   752                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   753                           ;	Code Protection bit
   754                           ;	CP = OFF, Program memory code protection is disabled
   755                           ;	Data Code Protection bit
   756                           ;	CPD = OFF, Data memory code protection is disabled
   757                           ;	Brown Out Reset Selection bits
   758                           ;	BOREN = OFF, BOR disabled
   759                           ;	Internal External Switchover bit
   760                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   761                           ;	Fail-Safe Clock Monitor Enabled bit
   762                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   763                           ;	Low Voltage Programming Enable bit
   764                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   765                           ;	In-Circuit Debugger Mode bit
   766                           ;	DEBUG = 0x1, unprogrammed default
   767  2007                     	org	8199
   768  2007  20D1               	dw	8401
   769                           
   770                           ;Config register CONFIG2 @ 0x2008
   771                           ;	Brown-out Reset Selection bit
   772                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   773                           ;	Flash Program Memory Self Write Enable bits
   774                           ;	WRT = OFF, Write protection off
   775  2008                     	org	8200
   776  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    adc_lect@data	PTR volatile unsigned char  size(1) Largest target is 1
		 -> adc_data(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_adc_start

Critical Paths under _isr in COMMON

    _isr->_adc_lect

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _adc_start
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_start                                            2     2      0       0
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      45
                                              2 COMMON     3     3      0
                           _adc_lect
 ---------------------------------------------------------------------------------
 (3) _adc_lect                                             2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_start
   _setup

 _isr (ROOT)
   _adc_lect

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 17 10:23:15 2021

                     l13 0072                       l52 0054                       l58 0036  
                     u10 0067                       u11 0066                       u37 006B  
                    l660 0067                      l662 006F                      l670 0021  
                    l680 002D                      l672 0024                      l664 0017  
                    l658 0061                      l682 0031                      l674 0025  
                    l666 001A                      l684 0034                      l676 0027  
                    l668 001B                      l678 002A                      l686 004F  
                    l688 0059                      i1l9 007C                      _isr 0037  
                    fsr0 0004                      indf 0000                     _ADIF 0066  
                   ?_isr 0070                     _PIE1 008C                     i1l64 0046  
                   u2_20 003D                     u2_21 003C                     _main 004F  
                   btemp 007E                     start 000E                    ??_isr 0072  
                  ?_main 0070                    i1l656 0074                    i1l690 0037  
                  i1l692 003D                    i1l694 0043                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _setup 0017                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0061  
                 ??_main 0077                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
       __end_of_adc_lect 007D                   _INTCON 000B                   saved_w 007E  
__end_of__initialization 0013       __size_of_adc_start 0012           __pcstackCOMMON 0070  
          __end_of_setup 0037                  ??_setup 0075             adc_lect@data 0071  
             __pmaintext 004F               __pintentry 0004                ?_adc_lect 0070  
      __end_of_adc_start 0073               ??_adc_lect 0070                  __ptext1 0017  
                __ptext2 0061                  __ptext3 0037                  __ptext4 0073  
           __size_of_isr 0018     end_of_initialization 0013      start_initialization 0011  
            __end_of_isr 004F        __size_of_adc_lect 000A              __pbssCOMMON 0077  
              ___latbits 0002                _adc_start 0061               ?_adc_start 0070  
         __size_of_setup 0020        interrupt_function 0004                 _PIR1bits 000C  
             _ADCON0bits 001F                 _adc_data 0078                 _adc_lect 0073  
            ??_adc_start 0075            __size_of_main 0012                 _spi_data 0077  
               intlevel1 0000  
