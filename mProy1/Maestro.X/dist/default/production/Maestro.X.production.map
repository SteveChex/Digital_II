Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.31\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\Maestro.X.production.sym \
  --cmf=dist/default/production\Maestro.X.production.cmf -z -Q16F887 \
  -oC:\Users\edgar\AppData\Local\Temp\s5vo.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Maestro.X.production.map -E1 -ver=XC8 Compiler \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\edgar\AppData\Local\Temp\s5vo.o \
  dist/default/production\Maestro.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\edgar\AppData\Local\Temp\s5vo.o
                end_init                              C        C        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2        0       4
dist/default/production\Maestro.X.production.o
                cinit                                 F        F        7        8       0
                intentry                              4        4        8        8       0
                config                             2007     2007        2        0       4
                text14                              2DC      2DC       15      2F8       0
                text13                              1C6      1C6       3E      2F8       0
                text12                              2AC      2AC       1A      2F8       0
                text11                              17C      17C       4A      2F8       0
                text10                              32C      32C        B      2F8       0
                text9                               320      320        C      2F8       0
                text8                                16       16      108        8       0
                text7                               286      286       26      2F8       0
                text6                               2C6      2C6       16      2F8       0
                text5                               311      311        F      2F8       0
                text4                               235      235       29      2F8       0
                text3                               302      302        F      2F8       0
                text2                               2F1      2F1       11      2F8       0
                text1                               25E      25E       28      2F8       0
                maintext                            204      204       31      2F8       0
                cstackBANK0                          20       20        5       20       1
                cstackCOMMON                         70       70        8       70       1
                bssCOMMON                            78       78        3       70       1
                strings                             11E      11E       5E      23C       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        3         0
                cinit                                 F        F        7         0
                intentry                              4        4        8         0
                reset_vec                             0        0        3         0
                text14                              2DC      2DC       15         0
                text13                              1C6      1C6       3E         0
                text12                              2AC      2AC       1A         0
                text11                              17C      17C       4A         0
                text10                              32C      32C        B         0
                text9                               320      320        C         0
                text8                                16       16      108         0
                text7                               286      286       26         0
                text6                               2C6      2C6       16         0
                text5                               311      311        F         0
                text4                               235      235       29         0
                text3                               302      302        F         0
                text2                               2F1      2F1       11         0
                text1                               25E      25E       28         0
                maintext                            204      204       31         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             11E      11E       5E         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        8         1
                bssCOMMON                            78       78        3         1

        CLASS   BANK0          
                cstackBANK0                          20       20        5         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  00011A  00011E         8       0  CODE        2
                cstackBANK0                    000020  000005  000025        20       1  BANK0       1
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                strings                        00011E  00005E  00017C       23C       0  STRING      2
                text11                         00017C  0001BB  000337       2F8       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0025-006F             4B           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         0337-1FFF            800
        COMMON           007B-007D              3           1
        CONST            0003-0003              1           2
                         0337-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         0337-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0025-006F             4B           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         0337-1FFF           1CC9
        STRING           0003-0003              1           2
                         0337-1FFF            100

                                  Symbol Table

Lcd_Cmd@a                    cstackCOMMON 0076
Lcd_Port@a                   cstackCOMMON 0073
Lcd_Set_Cursor@a             cstackBANK0  0021
Lcd_Set_Cursor@b             cstackCOMMON 0077
Lcd_Set_Cursor@temp          cstackBANK0  0022
Lcd_Write_Char@a             cstackCOMMON 0075
Lcd_Write_String@a           cstackBANK0  0022
Lcd_Write_String@i           cstackBANK0  0020
_ANSELH                      (abs)        0189
_BAUDCTL                     (abs)        0187
_GIE                         (abs)        005F
_INTCON                      (abs)        000B
_Lcd_Cmd                     text12       02AC
_Lcd_Init                    text11       017C
_Lcd_Port                    text13       01C6
_Lcd_Set_Cursor              text7        0286
_Lcd_Write_Char              text6        02C6
_Lcd_Write_String            text4        0235
_PIE1                        (abs)        008C
_PIR1bits                    (abs)        000C
_PORTB                       (abs)        0006
_PORTBbits                   (abs)        0006
_PORTC                       (abs)        0007
_PORTD                       (abs)        0008
_RC0                         (abs)        0038
_RC1                         (abs)        0039
_RCREG                       (abs)        001A
_RCSTA                       (abs)        0018
_RD0                         (abs)        0040
_RD1                         (abs)        0041
_RD2                         (abs)        0042
_RD3                         (abs)        0043
_RD4                         (abs)        0044
_RD5                         (abs)        0045
_RD6                         (abs)        0046
_RD7                         (abs)        0047
_SPBRG                       (abs)        0099
_SPBRGH                      (abs)        009A
_SSPBUF                      (abs)        0013
_SSPCON                      (abs)        0014
_SSPCON2                     (abs)        0091
_SSPIF                       (abs)        0063
_SSPSTAT                     (abs)        0094
_TRISB                       (abs)        0086
_TRISC                       (abs)        0087
_TRISD                       (abs)        0088
_TXREG                       (abs)        0019
_TXSTA                       (abs)        0098
_TXSTAbits                   (abs)        0098
__Habs1                      abs1         0000
__Hbank0                     bank0        0000
__Hbank1                     bank1        0000
__Hbank2                     bank2        0000
__Hbank3                     bank3        0000
__HbssCOMMON                 bssCOMMON    0000
__Hcinit                     cinit        0016
__Hclrtext                   clrtext      0000
__Hcode                      code         0000
__Hcommon                    common       0000
__Hconfig                    config       2009
__HcstackBANK0               cstackBANK0  0000
__HcstackCOMMON              cstackCOMMON 0000
__Heeprom_data               eeprom_data  0000
__Hend_init                  end_init     000F
__Hfunctab                   functab      0000
__Hinit                      init         000C
__Hintentry                  intentry     000C
__Hmaintext                  maintext     0000
__Hpowerup                   powerup      0000
__Hram                       ram          0000
__Hreset_vec                 reset_vec    0003
__Hsfr0                      sfr0         0000
__Hsfr1                      sfr1         0000
__Hsfr2                      sfr2         0000
__Hsfr3                      sfr3         0000
__Hspace_0                   (abs)        0337
__Hspace_1                   (abs)        007B
__Hspace_2                   (abs)        0000
__Hspace_3                   (abs)        0000
__Hspace_4                   (abs)        4010
__Hstack                     stack        0000
__Hstrings                   strings      0000
__Htext                      text         0000
__Labs1                      abs1         0000
__Lbank0                     bank0        0000
__Lbank1                     bank1        0000
__Lbank2                     bank2        0000
__Lbank3                     bank3        0000
__LbssCOMMON                 bssCOMMON    0000
__Lcinit                     cinit        000F
__Lclrtext                   clrtext      0000
__Lcode                      code         0000
__Lcommon                    common       0000
__Lconfig                    config       0000
__LcstackBANK0               cstackBANK0  0000
__LcstackCOMMON              cstackCOMMON 0000
__Leeprom_data               eeprom_data  0000
__Lend_init                  end_init     000C
__Lfunctab                   functab      0000
__Linit                      init         000C
__Lintentry                  intentry     0004
__Lmaintext                  maintext     0000
__Lpowerup                   powerup      0000
__Lram                       ram          0000
__Lreset_vec                 reset_vec    0000
__Lsfr0                      sfr0         0000
__Lsfr1                      sfr1         0000
__Lsfr2                      sfr2         0000
__Lsfr3                      sfr3         0000
__Lspace_0                   (abs)        0000
__Lspace_1                   (abs)        0000
__Lspace_2                   (abs)        0000
__Lspace_3                   (abs)        0000
__Lspace_4                   (abs)        0000
__Lstack                     stack        0000
__Lstrings                   strings      0000
__Ltext                      text         0000
__S0                         (abs)        0337
__S1                         (abs)        007B
__S2                         (abs)        0000
__S3                         (abs)        0000
___int_sp                    stack        0000
___latbits                   (abs)        0002
___sp                        stack        0000
___stackhi                   (abs)        0000
___stacklo                   (abs)        0000
__end_of_Lcd_Cmd             text12       02C6
__end_of_Lcd_Init            text11       01C6
__end_of_Lcd_Port            text13       0204
__end_of_Lcd_Set_Cursor      text7        02AC
__end_of_Lcd_Write_Char      text6        02DC
__end_of_Lcd_Write_String    text4        025E
__end_of__initialization     cinit        0012
__end_of__stringtab          strings      0124
__end_of_encabezado_usart    text8        011E
__end_of_isr                 text14       02F1
__end_of_main                maintext     0235
__end_of_mostrar_dato        text5        0320
__end_of_mostrar_titulo_lcd  text3        0311
__end_of_setup               text1        0286
__end_of_usart_T_nl          text10       0337
__end_of_usart_T_virt        text9        032C
__end_of_usart_conf          text2        0302
__initialization             cinit        000F
__pbssCOMMON                 bssCOMMON    0078
__pcstackBANK0               cstackBANK0  0020
__pcstackCOMMON              cstackCOMMON 0070
__pintentry                  intentry     0004
__pmaintext                  maintext     0204
__pstrings                   strings      011E
__ptext1                     text1        025E
__ptext10                    text10       032C
__ptext11                    text11       017C
__ptext12                    text12       02AC
__ptext13                    text13       01C6
__ptext14                    text14       02DC
__ptext2                     text2        02F1
__ptext3                     text3        0302
__ptext4                     text4        0235
__ptext5                     text5        0311
__ptext6                     text6        02C6
__ptext7                     text7        0286
__ptext8                     text8        0016
__ptext9                     text9        0320
__size_of_Lcd_Cmd            (abs)        0000
__size_of_Lcd_Init           (abs)        0000
__size_of_Lcd_Port           (abs)        0000
__size_of_Lcd_Set_Cursor     (abs)        0000
__size_of_Lcd_Write_Char     (abs)        0000
__size_of_Lcd_Write_String   (abs)        0000
__size_of_encabezado_usart   (abs)        0000
__size_of_isr                (abs)        0000
__size_of_main               (abs)        0000
__size_of_mostrar_dato       (abs)        0000
__size_of_mostrar_titulo_lcd (abs)        0000
__size_of_setup              (abs)        0000
__size_of_usart_T_nl         (abs)        0000
__size_of_usart_T_virt       (abs)        0000
__size_of_usart_conf         (abs)        0000
__stringbase                 strings      0123
__stringtab                  strings      011E
_encabezado_usart            text8        0016
_isr                         text14       02DC
_main                        maintext     0204
_mostrar_dato                text5        0311
_mostrar_titulo_lcd          text3        0302
_pot                         bssCOMMON    007A
_setup                       text1        025E
_usart_T_nl                  text10       032C
_usart_T_virt                text9        0320
_usart_conf                  text2        02F1
btemp                        (abs)        007E
end_of_initialization        cinit        0012
interrupt_function           intentry     0004
intlevel0                    functab      0000
intlevel1                    functab      0000
intlevel2                    functab      0000
intlevel3                    functab      0000
intlevel4                    functab      0000
intlevel5                    functab      0000
reset_vec                    reset_vec    0000
saved_w                      (abs)        007E
start                        init         000C
start_initialization         cinit        000F
usart_T_virt@t_data          cstackCOMMON 0073
wtemp0                       (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 61 in file "mainMaster.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Init
		_encabezado_usart
		_mostrar_dato
		_mostrar_titulo_lcd
		_setup
		_usart_T_nl
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _setup *****************
 Defined at:
		line 80 in file "mainMaster.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_usart_conf
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _usart_conf *****************
 Defined at:
		line 16 in file "USART.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _mostrar_titulo_lcd *****************
 Defined at:
		line 114 in file "mainMaster.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Set_Cursor
		_Lcd_Write_String
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 132 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_6(20), STR_5(12), STR_4(13), STR_3(10), 
		 -> STR_2(16), STR_1(17), 
 Auto vars:     Size  Location     Type
  a               1    2[BANK0 ] PTR unsigned char 
		 -> STR_6(20), STR_5(12), STR_4(13), STR_3(10), 
		 -> STR_2(16), STR_1(17), 
  i               2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_mostrar_titulo_lcd
		_Lcd_Credits
 This function uses a non-reentrant model


 *************** function _mostrar_dato *****************
 Defined at:
		line 169 in file "mainMaster.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Set_Cursor
		_Lcd_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 111 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Port
 This function is called by:
		_mostrar_dato
		_Lcd_Write_String
		_Lcd_Credits
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 74 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    7[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    1[BANK0 ] unsigned char 
  temp            1    2[BANK0 ] unsigned char 
  y               1    0        unsigned char 
  z               1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         1       3       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_mostrar_titulo_lcd
		_mostrar_dato
		_Lcd_Credits
 This function uses a non-reentrant model


 *************** function _encabezado_usart *****************
 Defined at:
		line 120 in file "mainMaster.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_usart_T_nl
		_usart_T_virt
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _usart_T_virt *****************
 Defined at:
		line 50 in file "USART.c"
 Parameters:    Size  Location     Type
  t_data          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  t_data          1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_encabezado_usart
		_usart_T_string
 This function uses a non-reentrant model


 *************** function _usart_T_nl *****************
 Defined at:
		line 56 in file "USART.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_encabezado_usart
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 97 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Cmd
		_Lcd_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 62 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Set_Cursor
		_Lcd_Init
		_Lcd_Clear
		_Lcd_Shift_Right
		_Lcd_Shift_Left
 This function uses a non-reentrant model


 *************** function _Lcd_Port *****************
 Defined at:
		line 27 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Cmd
		_Lcd_Init
		_Lcd_Write_Char
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 179 in file "mainMaster.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
USART.c
		_usart_T_nl    		CODE           	032C	0000	11
		_usart_T_virt  		CODE           	0320	0000	12
		_usart_conf    		CODE           	02F1	0000	17

USART.c estimated size: 40

mainMaster.c
		_mostrar_dato  		CODE           	0311	0000	15
		_mostrar_titulo_lcd		CODE           	0302	0000	15
		_main          		CODE           	0204	0000	49
		_isr           		CODE           	02DC	0000	21
		_setup         		CODE           	025E	0000	40
		_encabezado_usart		CODE           	0016	0000	264

mainMaster.c estimated size: 404

shared
		__stringtab    		STRING         	011E	0000	6
		__initialization		CODE           	000F	0000	3

shared estimated size: 9

lcd.c
		_Lcd_Write_String		CODE           	0235	0000	41
		_Lcd_Init      		CODE           	017C	0000	74
		_Lcd_Write_Char		CODE           	02C6	0000	22
		_Lcd_Cmd       		CODE           	02AC	0000	26
		_Lcd_Set_Cursor		CODE           	0286	0000	38
		_Lcd_Port      		CODE           	01C6	0000	62

lcd.c estimated size: 263

