

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 12:01:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386                           
   387                           	psect	idataBANK0
   388  077F                     __pidataBANK0:
   389                           
   390                           ;initializer for _cont
   391  077F  3427               	retlw	39
   392                           
   393                           ;initializer for _pot
   394  0780  3427               	retlw	39
   395  001A                     _RCREG	set	26
   396  000C                     _PIR1bits	set	12
   397  0019                     _TXREG	set	25
   398  0018                     _RCSTA	set	24
   399  0013                     _SSPBUF	set	19
   400  0006                     _PORTBbits	set	6
   401  000B                     _INTCON	set	11
   402  0014                     _SSPCON	set	20
   403  0006                     _PORTB	set	6
   404  0007                     _PORTC	set	7
   405  0008                     _PORTD	set	8
   406  0005                     _PORTA	set	5
   407  0038                     _RC0	set	56
   408  0039                     _RC1	set	57
   409  0047                     _RD7	set	71
   410  0046                     _RD6	set	70
   411  0045                     _RD5	set	69
   412  0044                     _RD4	set	68
   413  0043                     _RD3	set	67
   414  0042                     _RD2	set	66
   415  0041                     _RD1	set	65
   416  0040                     _RD0	set	64
   417  0063                     _SSPIF	set	99
   418  005F                     _GIE	set	95
   419  0098                     _TXSTAbits	set	152
   420  0098                     _TXSTA	set	152
   421  009A                     _SPBRGH	set	154
   422  0099                     _SPBRG	set	153
   423  008C                     _PIE1	set	140
   424  0091                     _SSPCON2	set	145
   425  0094                     _SSPSTAT	set	148
   426  0087                     _TRISC	set	135
   427  0086                     _TRISB	set	134
   428  0088                     _TRISD	set	136
   429  0085                     _TRISA	set	133
   430  0187                     _BAUDCTL	set	391
   431  0189                     _ANSELH	set	393
   432  0188                     _ANSEL	set	392
   433                           
   434                           	psect	strings
   435  0482                     __pstrings:
   436  0482                     stringtab:
   437  0482                     __stringtab:
   438  0482                     stringcode:	
   439                           ;	String table - string pointers are 1 byte each
   440                           
   441  0482                     stringdir:
   442  0482  3004               	movlw	high stringdir
   443  0483  008A               	movwf	10
   444  0484  0804               	movf	4,w
   445  0485  0A84               	incf	4,f
   446  0486  0782               	addwf	2,f
   447  0487                     __stringbase:
   448  0487  3400               	retlw	0
   449  0488                     __end_of__stringtab:
   450  0488                     STR_8:
   451  0488  3477               	retlw	119	;'w'
   452  0489  3477               	retlw	119	;'w'
   453  048A  3477               	retlw	119	;'w'
   454  048B  342E               	retlw	46	;'.'
   455  048C  3465               	retlw	101	;'e'
   456  048D  346C               	retlw	108	;'l'
   457  048E  3465               	retlw	101	;'e'
   458  048F  3463               	retlw	99	;'c'
   459  0490  3474               	retlw	116	;'t'
   460  0491  3472               	retlw	114	;'r'
   461  0492  346F               	retlw	111	;'o'
   462  0493  3453               	retlw	83	;'S'
   463  0494  346F               	retlw	111	;'o'
   464  0495  346D               	retlw	109	;'m'
   465  0496  3465               	retlw	101	;'e'
   466  0497  342E               	retlw	46	;'.'
   467  0498  3463               	retlw	99	;'c'
   468  0499  346F               	retlw	111	;'o'
   469  049A  346D               	retlw	109	;'m'
   470  049B  3400               	retlw	0
   471  049C                     STR_1:
   472  049C  3453               	retlw	83	;'S'
   473  049D  3431               	retlw	49	;'1'
   474  049E  343A               	retlw	58	;':'
   475  049F  3420               	retlw	32	;' '
   476  04A0  3420               	retlw	32	;' '
   477  04A1  3420               	retlw	32	;' '
   478  04A2  3420               	retlw	32	;' '
   479  04A3  3453               	retlw	83	;'S'
   480  04A4  3432               	retlw	50	;'2'
   481  04A5  343A               	retlw	58	;':'
   482  04A6  3420               	retlw	32	;' '
   483  04A7  3420               	retlw	32	;' '
   484  04A8  3453               	retlw	83	;'S'
   485  04A9  3433               	retlw	51	;'3'
   486  04AA  343A               	retlw	58	;':'
   487  04AB  3420               	retlw	32	;' '
   488  04AC  3400               	retlw	0
   489  04AD                     STR_4:
   490  04AD  344C               	retlw	76	;'L'
   491  04AE  3443               	retlw	67	;'C'
   492  04AF  3444               	retlw	68	;'D'
   493  04B0  3420               	retlw	32	;' '
   494  04B1  344C               	retlw	76	;'L'
   495  04B2  3469               	retlw	105	;'i'
   496  04B3  3462               	retlw	98	;'b'
   497  04B4  3472               	retlw	114	;'r'
   498  04B5  3461               	retlw	97	;'a'
   499  04B6  3472               	retlw	114	;'r'
   500  04B7  3479               	retlw	121	;'y'
   501  04B8  3420               	retlw	32	;' '
   502  04B9  3466               	retlw	102	;'f'
   503  04BA  346F               	retlw	111	;'o'
   504  04BB  3472               	retlw	114	;'r'
   505  04BC  3400               	retlw	0
   506  04BD                     STR_6:
   507  04BD  3444               	retlw	68	;'D'
   508  04BE  3465               	retlw	101	;'e'
   509  04BF  3476               	retlw	118	;'v'
   510  04C0  3465               	retlw	101	;'e'
   511  04C1  346C               	retlw	108	;'l'
   512  04C2  346F               	retlw	111	;'o'
   513  04C3  3470               	retlw	112	;'p'
   514  04C4  3465               	retlw	101	;'e'
   515  04C5  3464               	retlw	100	;'d'
   516  04C6  3420               	retlw	32	;' '
   517  04C7  3442               	retlw	66	;'B'
   518  04C8  3479               	retlw	121	;'y'
   519  04C9  3400               	retlw	0
   520  04CA                     STR_7:
   521  04CA  3465               	retlw	101	;'e'
   522  04CB  346C               	retlw	108	;'l'
   523  04CC  3465               	retlw	101	;'e'
   524  04CD  3463               	retlw	99	;'c'
   525  04CE  3474               	retlw	116	;'t'
   526  04CF  3472               	retlw	114	;'r'
   527  04D0  346F               	retlw	111	;'o'
   528  04D1  3453               	retlw	83	;'S'
   529  04D2  346F               	retlw	111	;'o'
   530  04D3  346D               	retlw	109	;'m'
   531  04D4  3465               	retlw	101	;'e'
   532  04D5  3400               	retlw	0
   533  04D6                     STR_5:
   534  04D6  344D               	retlw	77	;'M'
   535  04D7  3450               	retlw	80	;'P'
   536  04D8  344C               	retlw	76	;'L'
   537  04D9  3441               	retlw	65	;'A'
   538  04DA  3442               	retlw	66	;'B'
   539  04DB  3420               	retlw	32	;' '
   540  04DC  3458               	retlw	88	;'X'
   541  04DD  3443               	retlw	67	;'C'
   542  04DE  3438               	retlw	56	;'8'
   543  04DF  3400               	retlw	0
   544  04E0                     STR_2:
   545  04E0  3420               	retlw	32	;' '
   546  04E1  3420               	retlw	32	;' '
   547  04E2  3400               	retlw	0
   548  04E0                     
   549                           	psect	cinit
   550  000F                     start_initialization:	
   551                           ; #config settings
   552                           
   553  000F                     __initialization:
   554                           
   555                           ; Initialize objects allocated to BANK0
   556  000F  120A  118A  277F  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   557  0014  00BE               	movwf	__pdataBANK0& (0+127)
   558  0015  120A  118A  2780  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   559  001A  00BF               	movwf	(__pdataBANK0+1)& (0+127)
   560                           
   561                           ; Clear objects allocated to BANK0
   562  001B  01B7               	clrf	__pbssBANK0& (0+127)
   563  001C  01B8               	clrf	(__pbssBANK0+1)& (0+127)
   564  001D  01B9               	clrf	(__pbssBANK0+2)& (0+127)
   565  001E  01BA               	clrf	(__pbssBANK0+3)& (0+127)
   566  001F  01BB               	clrf	(__pbssBANK0+4)& (0+127)
   567  0020  01BC               	clrf	(__pbssBANK0+5)& (0+127)
   568  0021  01BD               	clrf	(__pbssBANK0+6)& (0+127)
   569                           
   570                           ; Clear objects allocated to COMMON
   571  0022  01F8               	clrf	__pbssCOMMON& (0+127)
   572  0023  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   573  0024  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   574  0025                     end_of_initialization:	
   575                           ;End of C runtime variable initialization code
   576                           
   577  0025                     __end_of__initialization:
   578  0025  0183               	clrf	3
   579  0026  120A  118A  2B22   	ljmp	_main	;jump to C main() function
   580                           
   581                           	psect	bssCOMMON
   582  0078                     __pbssCOMMON:
   583  0078                     _sdata:
   584  0078                     	ds	1
   585  0079                     _cont_d:
   586  0079                     	ds	1
   587  007A                     _cont_u:
   588  007A                     	ds	1
   589                           
   590                           	psect	bssBANK0
   591  0037                     __pbssBANK0:
   592  0037                     _aux:
   593  0037                     	ds	1
   594  0038                     _temp:
   595  0038                     	ds	1
   596  0039                     _cont_c:
   597  0039                     	ds	1
   598  003A                     _temp_m:
   599  003A                     	ds	1
   600  003B                     _pot_d2:
   601  003B                     	ds	1
   602  003C                     _pot_d1:
   603  003C                     	ds	1
   604  003D                     _pot_u:
   605  003D                     	ds	1
   606                           
   607                           	psect	dataBANK0
   608  003E                     __pdataBANK0:
   609  003E                     _cont:
   610  003E                     	ds	1
   611  003F                     _pot:
   612  003F                     	ds	1
   613                           
   614                           	psect	cstackCOMMON
   615  0070                     __pcstackCOMMON:
   616  0070                     ?_setup:
   617  0070                     ?_Lcd_Init:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_encabezado_usart:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_spi_pot:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_spi_count:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_spi_temp:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_mostrar_titulo_lcd:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_mostrar_dato:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_usart_T_nl:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_usart_conf:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_Lcd_Write_String:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_usart_T_virt:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_Lcd_Write_Char:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_main:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_isr:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ??_isr:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_Lcd_Port:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_Lcd_Cmd:	
   666                           ; 1 bytes @ 0x0
   667                           
   668                           
   669                           ; 1 bytes @ 0x0
   670  0070                     	ds	3
   671  0073                     ??_setup:
   672  0073                     ??_spi_pot:	
   673                           ; 1 bytes @ 0x3
   674                           
   675  0073                     ??_spi_count:	
   676                           ; 1 bytes @ 0x3
   677                           
   678  0073                     ??_spi_temp:	
   679                           ; 1 bytes @ 0x3
   680                           
   681  0073                     ?_voltaje:	
   682                           ; 1 bytes @ 0x3
   683                           
   684  0073                     ??_usart_T_nl:	
   685                           ; 1 bytes @ 0x3
   686                           
   687  0073                     ??_usart_conf:	
   688                           ; 1 bytes @ 0x3
   689                           
   690  0073                     ??_usart_T_virt:	
   691                           ; 1 bytes @ 0x3
   692                           
   693  0073                     ?_num_ascii:	
   694                           ; 1 bytes @ 0x3
   695                           
   696  0073                     ?_conts:	
   697                           ; 1 bytes @ 0x3
   698                           
   699  0073                     ??_Lcd_Port:	
   700                           ; 1 bytes @ 0x3
   701                           
   702  0073                     ?___wmul:	
   703                           ; 1 bytes @ 0x3
   704                           
   705  0073                     voltaje@volt_u:	
   706                           ; 2 bytes @ 0x3
   707                           
   708  0073                     conts@uni:	
   709                           ; 1 bytes @ 0x3
   710                           
   711  0073                     usart_T_virt@t_data:	
   712                           ; 1 bytes @ 0x3
   713                           
   714  0073                     num_ascii@code:	
   715                           ; 1 bytes @ 0x3
   716                           
   717  0073                     Lcd_Port@a:	
   718                           ; 1 bytes @ 0x3
   719                           
   720  0073                     ___wmul@multiplier:	
   721                           ; 1 bytes @ 0x3
   722                           
   723                           
   724                           ; 2 bytes @ 0x3
   725  0073                     	ds	1
   726  0074                     ??_encabezado_usart:
   727  0074                     ??_num_ascii:	
   728                           ; 1 bytes @ 0x4
   729                           
   730  0074                     ??_Lcd_Write_Char:	
   731                           ; 1 bytes @ 0x4
   732                           
   733  0074                     ??_Lcd_Cmd:	
   734                           ; 1 bytes @ 0x4
   735                           
   736  0074                     voltaje@volt_d1:	
   737                           ; 1 bytes @ 0x4
   738                           
   739  0074                     conts@dec:	
   740                           ; 1 bytes @ 0x4
   741                           
   742                           
   743                           ; 1 bytes @ 0x4
   744  0074                     	ds	1
   745  0075                     voltaje@volt_d2:
   746  0075                     conts@cent:	
   747                           ; 1 bytes @ 0x5
   748                           
   749  0075                     Lcd_Write_Char@a:	
   750                           ; 1 bytes @ 0x5
   751                           
   752  0075                     ___wmul@multiplicand:	
   753                           ; 1 bytes @ 0x5
   754                           
   755                           
   756                           ; 2 bytes @ 0x5
   757  0075                     	ds	1
   758  0076                     ??_voltaje:
   759  0076                     ??_Lcd_Write_String:	
   760                           ; 1 bytes @ 0x6
   761                           
   762  0076                     ??_conts:	
   763                           ; 1 bytes @ 0x6
   764                           
   765  0076                     num_ascii@value:	
   766                           ; 1 bytes @ 0x6
   767                           
   768  0076                     Lcd_Cmd@a:	
   769                           ; 1 bytes @ 0x6
   770                           
   771                           
   772                           ; 1 bytes @ 0x6
   773  0076                     	ds	1
   774  0077                     ?_Lcd_Set_Cursor:
   775  0077                     ??___wmul:	
   776                           ; 1 bytes @ 0x7
   777                           
   778  0077                     ??___awdiv:	
   779                           ; 1 bytes @ 0x7
   780                           
   781  0077                     voltaje@data_in:	
   782                           ; 1 bytes @ 0x7
   783                           
   784  0077                     conts@data_in:	
   785                           ; 1 bytes @ 0x7
   786                           
   787  0077                     Lcd_Set_Cursor@b:	
   788                           ; 1 bytes @ 0x7
   789                           
   790                           
   791                           ; 1 bytes @ 0x7
   792  0077                     	ds	1
   793  0078                     ??_mostrar_titulo_lcd:
   794                           
   795                           	psect	cstackBANK0
   796  0020                     __pcstackBANK0:	
   797                           ; 1 bytes @ 0x8
   798                           
   799  0020                     ??_Lcd_Init:
   800  0020                     ??_Lcd_Set_Cursor:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0020                     Lcd_Write_String@i:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0020                     ___wmul@product:	
   807                           ; 2 bytes @ 0x0
   808                           
   809                           
   810                           ; 2 bytes @ 0x0
   811  0020                     	ds	1
   812  0021                     Lcd_Set_Cursor@a:
   813                           
   814                           ; 1 bytes @ 0x1
   815  0021                     	ds	1
   816  0022                     ?___awdiv:
   817  0022                     Lcd_Set_Cursor@temp:	
   818                           ; 2 bytes @ 0x2
   819                           
   820  0022                     Lcd_Write_String@a:	
   821                           ; 1 bytes @ 0x2
   822                           
   823  0022                     ___awdiv@divisor:	
   824                           ; 1 bytes @ 0x2
   825                           
   826                           
   827                           ; 2 bytes @ 0x2
   828  0022                     	ds	1
   829  0023                     ??_mostrar_dato:
   830                           
   831                           ; 1 bytes @ 0x3
   832  0023                     	ds	1
   833  0024                     ___awdiv@dividend:
   834                           
   835                           ; 2 bytes @ 0x4
   836  0024                     	ds	2
   837  0026                     ___awdiv@counter:
   838                           
   839                           ; 1 bytes @ 0x6
   840  0026                     	ds	1
   841  0027                     ___awdiv@sign:
   842                           
   843                           ; 1 bytes @ 0x7
   844  0027                     	ds	1
   845  0028                     ___awdiv@quotient:
   846                           
   847                           ; 2 bytes @ 0x8
   848  0028                     	ds	2
   849  002A                     ?_map_var:
   850  002A                     map_var@v_out:	
   851                           ; 1 bytes @ 0xA
   852                           
   853                           
   854                           ; 1 bytes @ 0xA
   855  002A                     	ds	1
   856  002B                     map_var@inMin:
   857                           
   858                           ; 1 bytes @ 0xB
   859  002B                     	ds	1
   860  002C                     map_var@inMax:
   861                           
   862                           ; 1 bytes @ 0xC
   863  002C                     	ds	1
   864  002D                     map_var@outMin:
   865                           
   866                           ; 1 bytes @ 0xD
   867  002D                     	ds	1
   868  002E                     map_var@outMax:
   869                           
   870                           ; 1 bytes @ 0xE
   871  002E                     	ds	1
   872  002F                     ??_map_var:
   873                           
   874                           ; 1 bytes @ 0xF
   875  002F                     	ds	3
   876  0032                     map_var@v_in:
   877                           
   878                           ; 1 bytes @ 0x12
   879  0032                     	ds	1
   880  0033                     ??_main:
   881                           
   882                           ; 1 bytes @ 0x13
   883  0033                     	ds	4
   884                           
   885                           	psect	maintext
   886  0322                     __pmaintext:	
   887 ;;
   888 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   889 ;;
   890 ;; *************** function _main *****************
   891 ;; Defined at:
   892 ;;		line 74 in file "mainMaster.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : B00/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906 ;;      Params:         0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0
   908 ;;      Temps:          0       4       0       0       0
   909 ;;      Totals:         0       4       0       0       0
   910 ;;Total ram usage:        4 bytes
   911 ;; Hardware stack levels required when called:    5
   912 ;; This function calls:
   913 ;;		_Lcd_Init
   914 ;;		_encabezado_usart
   915 ;;		_map_var
   916 ;;		_mostrar_dato
   917 ;;		_mostrar_titulo_lcd
   918 ;;		_setup
   919 ;;		_spi_count
   920 ;;		_spi_pot
   921 ;;		_spi_temp
   922 ;;		_usart_T_nl
   923 ;;		_voltaje
   924 ;; This function is called by:
   925 ;;		Startup code after reset
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           
   930                           ;psect for function _main
   931  0322                     _main:
   932  0322                     l2200:	
   933                           ;incstack = 0
   934                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   935                           
   936                           
   937                           ;mainMaster.c: 75:     setup();
   938  0322  120A  118A  2616  120A  118A  	fcall	_setup
   939                           
   940                           ;mainMaster.c: 76:     Lcd_Init();
   941  0327  120A  118A  24E3  120A  118A  	fcall	_Lcd_Init
   942                           
   943                           ;mainMaster.c: 77:     encabezado_usart();
   944  032C  120A  118A  221A  120A  118A  	fcall	_encabezado_usart
   945  0331                     l105:	
   946                           ;mainMaster.c: 78:     while (1) {
   947                           
   948                           
   949                           ;mainMaster.c: 79:         spi_pot();
   950  0331  120A  118A  274C  120A  118A  	fcall	_spi_pot
   951  0336                     l2202:
   952                           
   953                           ;mainMaster.c: 80:         _delay((unsigned long)((5)*(4000000/4000.0)));
   954  0336  3007               	movlw	7
   955  0337  1283               	bcf	3,5	;RP0=0, select bank0
   956  0338  1303               	bcf	3,6	;RP1=0, select bank0
   957  0339  00B4               	movwf	??_main+1
   958  033A  307C               	movlw	124
   959  033B  00B3               	movwf	??_main
   960  033C                     u1067:
   961  033C  0BB3               	decfsz	??_main,f
   962  033D  2B3C               	goto	u1067
   963  033E  0BB4               	decfsz	??_main+1,f
   964  033F  2B3C               	goto	u1067
   965  0340  0000               	nop
   966  0341                     l2204:
   967                           
   968                           ;mainMaster.c: 81:         spi_count();
   969  0341  120A  118A  275A  120A  118A  	fcall	_spi_count
   970                           
   971                           ;mainMaster.c: 82:         _delay((unsigned long)((5)*(4000000/4000.0)));
   972  0346  3007               	movlw	7
   973  0347  1283               	bcf	3,5	;RP0=0, select bank0
   974  0348  1303               	bcf	3,6	;RP1=0, select bank0
   975  0349  00B4               	movwf	??_main+1
   976  034A  307C               	movlw	124
   977  034B  00B3               	movwf	??_main
   978  034C                     u1077:
   979  034C  0BB3               	decfsz	??_main,f
   980  034D  2B4C               	goto	u1077
   981  034E  0BB4               	decfsz	??_main+1,f
   982  034F  2B4C               	goto	u1077
   983  0350  0000               	nop
   984  0351                     l2206:
   985                           
   986                           ;mainMaster.c: 83:         spi_temp();
   987  0351  120A  118A  273E  120A  118A  	fcall	_spi_temp
   988  0356                     l2208:
   989                           
   990                           ;mainMaster.c: 84:         _delay((unsigned long)((5)*(4000000/4000.0)));
   991  0356  3007               	movlw	7
   992  0357  1283               	bcf	3,5	;RP0=0, select bank0
   993  0358  1303               	bcf	3,6	;RP1=0, select bank0
   994  0359  00B4               	movwf	??_main+1
   995  035A  307C               	movlw	124
   996  035B  00B3               	movwf	??_main
   997  035C                     u1087:
   998  035C  0BB3               	decfsz	??_main,f
   999  035D  2B5C               	goto	u1087
  1000  035E  0BB4               	decfsz	??_main+1,f
  1001  035F  2B5C               	goto	u1087
  1002  0360  0000               	nop
  1003  0361                     l2210:
  1004                           
  1005                           ;mainMaster.c: 85:         map_var(temp, &temp_m, 0, 255, 13, 150);
  1006  0361  303A               	movlw	(low (_temp_m| 0))& (0+255)
  1007  0362  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0363  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0364  00B3               	movwf	??_main
  1010  0365  0833               	movf	??_main,w
  1011  0366  00AA               	movwf	map_var@v_out
  1012  0367  01AB               	clrf	map_var@inMin
  1013  0368  30FF               	movlw	255
  1014  0369  00B4               	movwf	??_main+1
  1015  036A  0834               	movf	??_main+1,w
  1016  036B  00AC               	movwf	map_var@inMax
  1017  036C  300D               	movlw	13
  1018  036D  00B5               	movwf	??_main+2
  1019  036E  0835               	movf	??_main+2,w
  1020  036F  00AD               	movwf	map_var@outMin
  1021  0370  3096               	movlw	150
  1022  0371  00B6               	movwf	??_main+3
  1023  0372  0836               	movf	??_main+3,w
  1024  0373  00AE               	movwf	map_var@outMax
  1025  0374  0838               	movf	_temp,w
  1026  0375  120A  118A  25E2  120A  118A  	fcall	_map_var
  1027  037A                     l2212:
  1028                           
  1029                           ;mainMaster.c: 86:         voltaje(pot, &pot_u, &pot_d1, &pot_d2);
  1030  037A  303D               	movlw	(low (_pot_u| 0))& (0+255)
  1031  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1032  037C  1303               	bcf	3,6	;RP1=0, select bank0
  1033  037D  00B3               	movwf	??_main
  1034  037E  0833               	movf	??_main,w
  1035  037F  00F3               	movwf	voltaje@volt_u
  1036  0380  303C               	movlw	(low (_pot_d1| 0))& (0+255)
  1037  0381  00B4               	movwf	??_main+1
  1038  0382  0834               	movf	??_main+1,w
  1039  0383  00F4               	movwf	voltaje@volt_d1
  1040  0384  303B               	movlw	(low (_pot_d2| 0))& (0+255)
  1041  0385  00B5               	movwf	??_main+2
  1042  0386  0835               	movf	??_main+2,w
  1043  0387  00F5               	movwf	voltaje@volt_d2
  1044  0388  083F               	movf	_pot,w
  1045  0389  120A  118A  256B  120A  118A  	fcall	_voltaje
  1046  038E                     l2214:
  1047                           
  1048                           ;mainMaster.c: 87:         mostrar_titulo_lcd();
  1049  038E  120A  118A  272F  120A  118A  	fcall	_mostrar_titulo_lcd
  1050  0393                     l2216:
  1051                           
  1052                           ;mainMaster.c: 88:         mostrar_dato();
  1053  0393  120A  118A  2029  120A  118A  	fcall	_mostrar_dato
  1054                           
  1055                           ;mainMaster.c: 90:         usart_T_nl();
  1056  0398  120A  118A  2774  120A  118A  	fcall	_usart_T_nl
  1057  039D  2B31               	goto	l105
  1058  039E  120A  118A  280C   	ljmp	start
  1059  03A1                     __end_of_main:
  1060                           
  1061                           	psect	text1
  1062  056B                     __ptext1:	
  1063 ;; *************** function _voltaje *****************
  1064 ;; Defined at:
  1065 ;;		line 291 in file "mainMaster.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;  data_in         1    wreg     unsigned char 
  1068 ;;  volt_u          1    3[COMMON] PTR unsigned char 
  1069 ;;		 -> pot_u(1), 
  1070 ;;  volt_d1         1    4[COMMON] PTR unsigned char 
  1071 ;;		 -> pot_d1(1), 
  1072 ;;  volt_d2         1    5[COMMON] PTR unsigned char 
  1073 ;;		 -> pot_d2(1), 
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  data_in         1    7[COMMON] unsigned char 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1085 ;;      Params:         3       0       0       0       0
  1086 ;;      Locals:         1       0       0       0       0
  1087 ;;      Temps:          1       0       0       0       0
  1088 ;;      Totals:         5       0       0       0       0
  1089 ;;Total ram usage:        5 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; Hardware stack levels required when called:    1
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_main
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function _voltaje
  1101  056B                     _voltaje:
  1102                           
  1103                           ;incstack = 0
  1104                           ; Regs used in _voltaje: [wreg-fsr0h+status,2+status,0]
  1105                           ;voltaje@data_in stored from wreg
  1106  056B  00F7               	movwf	voltaje@data_in
  1107  056C                     l1710:
  1108                           
  1109                           ;mainMaster.c: 297:     while (data_in > 49) {
  1110  056C  2D78               	goto	l1714
  1111  056D                     l1712:
  1112                           
  1113                           ;mainMaster.c: 298:         data_in = data_in - 50;
  1114  056D  0877               	movf	voltaje@data_in,w
  1115  056E  3ECE               	addlw	206
  1116  056F  00F6               	movwf	??_voltaje
  1117  0570  0876               	movf	??_voltaje,w
  1118  0571  00F7               	movwf	voltaje@data_in
  1119                           
  1120                           ;mainMaster.c: 299:         aux++;
  1121  0572  3001               	movlw	1
  1122  0573  00F6               	movwf	??_voltaje
  1123  0574  0876               	movf	??_voltaje,w
  1124  0575  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0576  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0577  07B7               	addwf	_aux,f
  1127  0578                     l1714:
  1128                           
  1129                           ;mainMaster.c: 297:     while (data_in > 49) {
  1130  0578  3032               	movlw	50
  1131  0579  0277               	subwf	voltaje@data_in,w
  1132  057A  1803               	skipnc
  1133  057B  2D7D               	goto	u701
  1134  057C  2D7E               	goto	u700
  1135  057D                     u701:
  1136  057D  2D6D               	goto	l1712
  1137  057E                     u700:
  1138  057E                     l1716:
  1139                           
  1140                           ;mainMaster.c: 301:     *volt_u = aux;
  1141  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1142  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0580  0837               	movf	_aux,w
  1144  0581  00F6               	movwf	??_voltaje
  1145  0582  0873               	movf	voltaje@volt_u,w
  1146  0583  0084               	movwf	4
  1147  0584  0876               	movf	??_voltaje,w
  1148  0585  1383               	bcf	3,7	;select IRP bank0
  1149  0586  0080               	movwf	0
  1150  0587                     l1718:
  1151                           
  1152                           ;mainMaster.c: 302:     aux = 0;
  1153  0587  01B7               	clrf	_aux
  1154                           
  1155                           ;mainMaster.c: 304:     while (data_in > 9) {
  1156  0588  2D92               	goto	l1722
  1157  0589                     l1720:
  1158                           
  1159                           ;mainMaster.c: 305:         data_in = data_in - 10;
  1160  0589  0877               	movf	voltaje@data_in,w
  1161  058A  3EF6               	addlw	246
  1162  058B  00F6               	movwf	??_voltaje
  1163  058C  0876               	movf	??_voltaje,w
  1164  058D  00F7               	movwf	voltaje@data_in
  1165                           
  1166                           ;mainMaster.c: 306:         aux++;
  1167  058E  3001               	movlw	1
  1168  058F  00F6               	movwf	??_voltaje
  1169  0590  0876               	movf	??_voltaje,w
  1170  0591  07B7               	addwf	_aux,f
  1171  0592                     l1722:
  1172                           
  1173                           ;mainMaster.c: 304:     while (data_in > 9) {
  1174  0592  300A               	movlw	10
  1175  0593  0277               	subwf	voltaje@data_in,w
  1176  0594  1803               	skipnc
  1177  0595  2D97               	goto	u711
  1178  0596  2D98               	goto	u710
  1179  0597                     u711:
  1180  0597  2D89               	goto	l1720
  1181  0598                     u710:
  1182  0598                     l1724:
  1183                           
  1184                           ;mainMaster.c: 308:     *volt_d1 = aux;
  1185  0598  0837               	movf	_aux,w
  1186  0599  00F6               	movwf	??_voltaje
  1187  059A  0874               	movf	voltaje@volt_d1,w
  1188  059B  0084               	movwf	4
  1189  059C  0876               	movf	??_voltaje,w
  1190  059D  1383               	bcf	3,7	;select IRP bank0
  1191  059E  0080               	movwf	0
  1192                           
  1193                           ;mainMaster.c: 309:     *volt_d2 = data_in;
  1194  059F  0877               	movf	voltaje@data_in,w
  1195  05A0  00F6               	movwf	??_voltaje
  1196  05A1  0875               	movf	voltaje@volt_d2,w
  1197  05A2  0084               	movwf	4
  1198  05A3  0876               	movf	??_voltaje,w
  1199  05A4  0080               	movwf	0
  1200  05A5                     l1726:
  1201                           
  1202                           ;mainMaster.c: 310:     aux = 0;
  1203  05A5  01B7               	clrf	_aux
  1204  05A6                     l141:
  1205  05A6  0008               	return
  1206  05A7                     __end_of_voltaje:
  1207                           
  1208                           	psect	text2
  1209  073E                     __ptext2:	
  1210 ;; *************** function _spi_temp *****************
  1211 ;; Defined at:
  1212 ;;		line 275 in file "mainMaster.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0
  1228 ;;      Temps:          1       0       0       0       0
  1229 ;;      Totals:         1       0       0       0       0
  1230 ;;Total ram usage:        1 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    1
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _spi_temp
  1242  073E                     _spi_temp:
  1243  073E                     l1702:	
  1244                           ;incstack = 0
  1245                           ; Regs used in _spi_temp: [wreg+status,2]
  1246                           
  1247                           
  1248                           ;mainMaster.c: 276:     PORTBbits.RB5 = 0;
  1249  073E  1283               	bcf	3,5	;RP0=0, select bank0
  1250  073F  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0740  1286               	bcf	6,5	;volatile
  1252  0741                     l1704:
  1253                           
  1254                           ;mainMaster.c: 277:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1255  0741  30C7               	movlw	199
  1256  0742  00F3               	movwf	??_spi_temp
  1257  0743                     u1097:
  1258  0743  2F44               	nop2
  1259  0744  0BF3               	decfsz	??_spi_temp,f
  1260  0745  2F43               	goto	u1097
  1261  0746  2F47               	nop2
  1262  0747  2F48               	nop2
  1263  0748                     l1706:
  1264                           
  1265                           ;mainMaster.c: 278:     SSPBUF = 0;
  1266  0748  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0749  1303               	bcf	3,6	;RP1=0, select bank0
  1268  074A  0193               	clrf	19	;volatile
  1269  074B                     l129:
  1270  074B  0008               	return
  1271  074C                     __end_of_spi_temp:
  1272                           
  1273                           	psect	text3
  1274  074C                     __ptext3:	
  1275 ;; *************** function _spi_pot *****************
  1276 ;; Defined at:
  1277 ;;		line 263 in file "mainMaster.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, status,2
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1291 ;;      Params:         0       0       0       0       0
  1292 ;;      Locals:         0       0       0       0       0
  1293 ;;      Temps:          1       0       0       0       0
  1294 ;;      Totals:         1       0       0       0       0
  1295 ;;Total ram usage:        1 bytes
  1296 ;; Hardware stack levels used:    1
  1297 ;; Hardware stack levels required when called:    1
  1298 ;; This function calls:
  1299 ;;		Nothing
  1300 ;; This function is called by:
  1301 ;;		_main
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           
  1306                           ;psect for function _spi_pot
  1307  074C                     _spi_pot:
  1308  074C                     l1690:	
  1309                           ;incstack = 0
  1310                           ; Regs used in _spi_pot: [wreg+status,2]
  1311                           
  1312                           
  1313                           ;mainMaster.c: 264:     PORTBbits.RB7 = 0;
  1314  074C  1283               	bcf	3,5	;RP0=0, select bank0
  1315  074D  1303               	bcf	3,6	;RP1=0, select bank0
  1316  074E  1386               	bcf	6,7	;volatile
  1317  074F                     l1692:
  1318                           
  1319                           ;mainMaster.c: 265:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1320  074F  30C7               	movlw	199
  1321  0750  00F3               	movwf	??_spi_pot
  1322  0751                     u1107:
  1323  0751  2F52               	nop2
  1324  0752  0BF3               	decfsz	??_spi_pot,f
  1325  0753  2F51               	goto	u1107
  1326  0754  2F55               	nop2
  1327  0755  2F56               	nop2
  1328  0756                     l1694:
  1329                           
  1330                           ;mainMaster.c: 266:     SSPBUF = 0;
  1331  0756  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0757  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0758  0193               	clrf	19	;volatile
  1334  0759                     l123:
  1335  0759  0008               	return
  1336  075A                     __end_of_spi_pot:
  1337                           
  1338                           	psect	text4
  1339  075A                     __ptext4:	
  1340 ;; *************** function _spi_count *****************
  1341 ;; Defined at:
  1342 ;;		line 269 in file "mainMaster.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1356 ;;      Params:         0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0
  1358 ;;      Temps:          1       0       0       0       0
  1359 ;;      Totals:         1       0       0       0       0
  1360 ;;Total ram usage:        1 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    1
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_main
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           
  1371                           ;psect for function _spi_count
  1372  075A                     _spi_count:
  1373  075A                     l1696:	
  1374                           ;incstack = 0
  1375                           ; Regs used in _spi_count: [wreg+status,2]
  1376                           
  1377                           
  1378                           ;mainMaster.c: 270:     PORTBbits.RB6 = 0;
  1379  075A  1283               	bcf	3,5	;RP0=0, select bank0
  1380  075B  1303               	bcf	3,6	;RP1=0, select bank0
  1381  075C  1306               	bcf	6,6	;volatile
  1382  075D                     l1698:
  1383                           
  1384                           ;mainMaster.c: 271:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1385  075D  30C7               	movlw	199
  1386  075E  00F3               	movwf	??_spi_count
  1387  075F                     u1117:
  1388  075F  2F60               	nop2
  1389  0760  0BF3               	decfsz	??_spi_count,f
  1390  0761  2F5F               	goto	u1117
  1391  0762  2F63               	nop2
  1392  0763  2F64               	nop2
  1393  0764                     l1700:
  1394                           
  1395                           ;mainMaster.c: 272:     SSPBUF = 0;
  1396  0764  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0765  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0766  0193               	clrf	19	;volatile
  1399  0767                     l126:
  1400  0767  0008               	return
  1401  0768                     __end_of_spi_count:
  1402                           
  1403                           	psect	text5
  1404  0616                     __ptext5:	
  1405 ;; *************** function _setup *****************
  1406 ;; Defined at:
  1407 ;;		line 98 in file "mainMaster.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg, status,2, status,0, pclath, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1421 ;;      Params:         0       0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0
  1423 ;;      Temps:          0       0       0       0       0
  1424 ;;      Totals:         0       0       0       0       0
  1425 ;;Total ram usage:        0 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    2
  1428 ;; This function calls:
  1429 ;;		_usart_conf
  1430 ;; This function is called by:
  1431 ;;		_main
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           
  1436                           ;psect for function _setup
  1437  0616                     _setup:
  1438  0616                     l1612:	
  1439                           ;incstack = 0
  1440                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1441                           
  1442                           
  1443                           ;mainMaster.c: 102:     ANSEL = 0;
  1444  0616  1683               	bsf	3,5	;RP0=1, select bank3
  1445  0617  1703               	bsf	3,6	;RP1=1, select bank3
  1446  0618  0188               	clrf	8	;volatile
  1447                           
  1448                           ;mainMaster.c: 103:     TRISA = 0;
  1449  0619  1683               	bsf	3,5	;RP0=1, select bank1
  1450  061A  1303               	bcf	3,6	;RP1=0, select bank1
  1451  061B  0185               	clrf	5	;volatile
  1452                           
  1453                           ;mainMaster.c: 104:     PORTA = 0;
  1454  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1455  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1456  061E  0185               	clrf	5	;volatile
  1457                           
  1458                           ;mainMaster.c: 106:     ANSELH = 0;
  1459  061F  1683               	bsf	3,5	;RP0=1, select bank3
  1460  0620  1703               	bsf	3,6	;RP1=1, select bank3
  1461  0621  0189               	clrf	9	;volatile
  1462                           
  1463                           ;mainMaster.c: 107:     TRISD = 0;
  1464  0622  1683               	bsf	3,5	;RP0=1, select bank1
  1465  0623  1303               	bcf	3,6	;RP1=0, select bank1
  1466  0624  0188               	clrf	8	;volatile
  1467                           
  1468                           ;mainMaster.c: 109:     PORTD = 0;
  1469  0625  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0626  1303               	bcf	3,6	;RP1=0, select bank0
  1471  0627  0188               	clrf	8	;volatile
  1472                           
  1473                           ;mainMaster.c: 110:     PORTC = 0;
  1474  0628  0187               	clrf	7	;volatile
  1475  0629                     l1614:
  1476                           
  1477                           ;mainMaster.c: 114:     usart_conf();
  1478  0629  120A  118A  271E  120A  118A  	fcall	_usart_conf
  1479  062E                     l1616:
  1480                           
  1481                           ;mainMaster.c: 118:     TRISB = 0B00011111;
  1482  062E  301F               	movlw	31
  1483  062F  1683               	bsf	3,5	;RP0=1, select bank1
  1484  0630  1303               	bcf	3,6	;RP1=0, select bank1
  1485  0631  0086               	movwf	6	;volatile
  1486  0632                     l1618:
  1487                           
  1488                           ;mainMaster.c: 119:     PORTB = 0B11100000;
  1489  0632  30E0               	movlw	224
  1490  0633  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0634  1303               	bcf	3,6	;RP1=0, select bank0
  1492  0635  0086               	movwf	6	;volatile
  1493  0636                     l1620:
  1494                           
  1495                           ;mainMaster.c: 120:     TRISC = 0B00010000;
  1496  0636  3010               	movlw	16
  1497  0637  1683               	bsf	3,5	;RP0=1, select bank1
  1498  0638  1303               	bcf	3,6	;RP1=0, select bank1
  1499  0639  0087               	movwf	7	;volatile
  1500  063A                     l1622:
  1501                           
  1502                           ;mainMaster.c: 122:     SSPSTAT = 0B00000000;
  1503  063A  0194               	clrf	20	;volatile
  1504  063B                     l1624:
  1505                           
  1506                           ;mainMaster.c: 123:     SSPCON2 = 0;
  1507  063B  0191               	clrf	17	;volatile
  1508  063C                     l1626:
  1509                           
  1510                           ;mainMaster.c: 124:     SSPCON = 0B00110000;
  1511  063C  3030               	movlw	48
  1512  063D  1283               	bcf	3,5	;RP0=0, select bank0
  1513  063E  1303               	bcf	3,6	;RP1=0, select bank0
  1514  063F  0094               	movwf	20	;volatile
  1515  0640                     l1628:
  1516                           
  1517                           ;mainMaster.c: 128:     PIE1 = 0B00001000;
  1518  0640  3008               	movlw	8
  1519  0641  1683               	bsf	3,5	;RP0=1, select bank1
  1520  0642  1303               	bcf	3,6	;RP1=0, select bank1
  1521  0643  008C               	movwf	12	;volatile
  1522  0644                     l1630:
  1523                           
  1524                           ;mainMaster.c: 129:     INTCON = 0B11000000;
  1525  0644  30C0               	movlw	192
  1526  0645  008B               	movwf	11	;volatile
  1527  0646                     l111:
  1528  0646  0008               	return
  1529  0647                     __end_of_setup:
  1530                           
  1531                           	psect	text6
  1532  071E                     __ptext6:	
  1533 ;; *************** function _usart_conf *****************
  1534 ;; Defined at:
  1535 ;;		line 16 in file "USART.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1549 ;;      Params:         0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0
  1552 ;;      Totals:         0       0       0       0       0
  1553 ;;Total ram usage:        0 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    1
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_setup
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           
  1564                           ;psect for function _usart_conf
  1565  071E                     _usart_conf:
  1566  071E                     l1474:	
  1567                           ;incstack = 0
  1568                           ; Regs used in _usart_conf: [wreg+status,2]
  1569                           
  1570                           
  1571                           ;USART.c: 18:     SPBRG = 25;
  1572  071E  3019               	movlw	25
  1573  071F  1683               	bsf	3,5	;RP0=1, select bank1
  1574  0720  1303               	bcf	3,6	;RP1=0, select bank1
  1575  0721  0099               	movwf	25	;volatile
  1576  0722                     l1476:
  1577                           
  1578                           ;USART.c: 19:     SPBRGH = 0;
  1579  0722  019A               	clrf	26	;volatile
  1580  0723                     l1478:
  1581                           
  1582                           ;USART.c: 20:     BAUDCTL = 0B00000000;
  1583  0723  1683               	bsf	3,5	;RP0=1, select bank3
  1584  0724  1703               	bsf	3,6	;RP1=1, select bank3
  1585  0725  0187               	clrf	7	;volatile
  1586                           
  1587                           ;USART.c: 29:     TXSTA = 0B00100100;
  1588  0726  3024               	movlw	36
  1589  0727  1683               	bsf	3,5	;RP0=1, select bank1
  1590  0728  1303               	bcf	3,6	;RP1=0, select bank1
  1591  0729  0098               	movwf	24	;volatile
  1592                           
  1593                           ;USART.c: 39:     RCSTA = 0B10010000;
  1594  072A  3090               	movlw	144
  1595  072B  1283               	bcf	3,5	;RP0=0, select bank0
  1596  072C  1303               	bcf	3,6	;RP1=0, select bank0
  1597  072D  0098               	movwf	24	;volatile
  1598  072E                     l184:
  1599  072E  0008               	return
  1600  072F                     __end_of_usart_conf:
  1601                           
  1602                           	psect	text7
  1603  072F                     __ptext7:	
  1604 ;; *************** function _mostrar_titulo_lcd *****************
  1605 ;; Defined at:
  1606 ;;		line 136 in file "mainMaster.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0
  1622 ;;      Temps:          0       0       0       0       0
  1623 ;;      Totals:         0       0       0       0       0
  1624 ;;Total ram usage:        0 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    4
  1627 ;; This function calls:
  1628 ;;		_Lcd_Set_Cursor
  1629 ;;		_Lcd_Write_String
  1630 ;; This function is called by:
  1631 ;;		_main
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           
  1636                           ;psect for function _mostrar_titulo_lcd
  1637  072F                     _mostrar_titulo_lcd:
  1638  072F                     l2092:	
  1639                           ;incstack = 0
  1640                           ; Regs used in _mostrar_titulo_lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1641                           
  1642                           
  1643                           ;mainMaster.c: 137:     Lcd_Set_Cursor(1, 1);
  1644  072F  01F7               	clrf	Lcd_Set_Cursor@b
  1645  0730  0AF7               	incf	Lcd_Set_Cursor@b,f
  1646  0731  3001               	movlw	1
  1647  0732  120A  118A  26C8  120A  118A  	fcall	_Lcd_Set_Cursor
  1648  0737                     l2094:
  1649                           
  1650                           ;mainMaster.c: 139:     Lcd_Write_String("S1:    S2:  S3: ");
  1651  0737  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1652  0738  120A  118A  269F  120A  118A  	fcall	_Lcd_Write_String
  1653  073D                     l114:
  1654  073D  0008               	return
  1655  073E                     __end_of_mostrar_titulo_lcd:
  1656                           
  1657                           	psect	text8
  1658  0029                     __ptext8:	
  1659 ;; *************** function _mostrar_dato *****************
  1660 ;; Defined at:
  1661 ;;		line 191 in file "mainMaster.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1675 ;;      Params:         0       0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0
  1677 ;;      Temps:          0       3       0       0       0
  1678 ;;      Totals:         0       3       0       0       0
  1679 ;;Total ram usage:        3 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    4
  1682 ;; This function calls:
  1683 ;;		_Lcd_Set_Cursor
  1684 ;;		_Lcd_Write_Char
  1685 ;;		_Lcd_Write_String
  1686 ;;		_conts
  1687 ;;		_num_ascii
  1688 ;;		_usart_T_virt
  1689 ;; This function is called by:
  1690 ;;		_main
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           
  1695                           ;psect for function _mostrar_dato
  1696  0029                     _mostrar_dato:
  1697  0029                     l2096:	
  1698                           ;incstack = 0
  1699                           ; Regs used in _mostrar_dato: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1700                           
  1701                           
  1702                           ;mainMaster.c: 192:     Lcd_Set_Cursor(2, 1);
  1703  0029  01F7               	clrf	Lcd_Set_Cursor@b
  1704  002A  0AF7               	incf	Lcd_Set_Cursor@b,f
  1705  002B  3002               	movlw	2
  1706  002C  120A  118A  26C8  120A  118A  	fcall	_Lcd_Set_Cursor
  1707  0031                     l2098:
  1708                           
  1709                           ;mainMaster.c: 198:     num_ascii(pot_u, &sdata);
  1710  0031  3078               	movlw	(low (_sdata| 0))& (0+255)
  1711  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0034  00A3               	movwf	??_mostrar_dato
  1714  0035  0823               	movf	??_mostrar_dato,w
  1715  0036  00F3               	movwf	num_ascii@code
  1716  0037  083D               	movf	_pot_u,w
  1717  0038  120A  118A  23A1  120A  118A  	fcall	_num_ascii
  1718  003D                     l2100:
  1719                           
  1720                           ;mainMaster.c: 199:     Lcd_Write_Char(sdata);
  1721  003D  0878               	movf	_sdata,w
  1722  003E  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_Char
  1723  0043                     l2102:
  1724                           
  1725                           ;mainMaster.c: 200:     usart_T_virt(sdata);
  1726  0043  0878               	movf	_sdata,w
  1727  0044  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  1728  0049                     l2104:
  1729                           
  1730                           ;mainMaster.c: 201:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1731  0049  3003               	movlw	3
  1732  004A  1283               	bcf	3,5	;RP0=0, select bank0
  1733  004B  1303               	bcf	3,6	;RP1=0, select bank0
  1734  004C  00A4               	movwf	??_mostrar_dato+1
  1735  004D  3097               	movlw	151
  1736  004E  00A3               	movwf	??_mostrar_dato
  1737  004F                     u1127:
  1738  004F  0BA3               	decfsz	??_mostrar_dato,f
  1739  0050  284F               	goto	u1127
  1740  0051  0BA4               	decfsz	??_mostrar_dato+1,f
  1741  0052  284F               	goto	u1127
  1742  0053                     l2106:
  1743                           
  1744                           ;mainMaster.c: 202:     Lcd_Write_Char(46);
  1745  0053  302E               	movlw	46
  1746  0054  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_Char
  1747  0059                     l2108:
  1748                           
  1749                           ;mainMaster.c: 203:     usart_T_virt(46);
  1750  0059  302E               	movlw	46
  1751  005A  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  1752  005F                     l2110:
  1753                           
  1754                           ;mainMaster.c: 204:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1755  005F  3003               	movlw	3
  1756  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1757  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1758  0062  00A4               	movwf	??_mostrar_dato+1
  1759  0063  3097               	movlw	151
  1760  0064  00A3               	movwf	??_mostrar_dato
  1761  0065                     u1137:
  1762  0065  0BA3               	decfsz	??_mostrar_dato,f
  1763  0066  2865               	goto	u1137
  1764  0067  0BA4               	decfsz	??_mostrar_dato+1,f
  1765  0068  2865               	goto	u1137
  1766  0069                     l2112:
  1767                           
  1768                           ;mainMaster.c: 205:     num_ascii(pot_d1, &sdata);
  1769  0069  3078               	movlw	(low (_sdata| 0))& (0+255)
  1770  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1771  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1772  006C  00A3               	movwf	??_mostrar_dato
  1773  006D  0823               	movf	??_mostrar_dato,w
  1774  006E  00F3               	movwf	num_ascii@code
  1775  006F  083C               	movf	_pot_d1,w
  1776  0070  120A  118A  23A1  120A  118A  	fcall	_num_ascii
  1777                           
  1778                           ;mainMaster.c: 206:     Lcd_Write_Char(sdata);
  1779  0075  0878               	movf	_sdata,w
  1780  0076  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_Char
  1781                           
  1782                           ;mainMaster.c: 207:     usart_T_virt(sdata);
  1783  007B  0878               	movf	_sdata,w
  1784  007C  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  1785  0081                     l2114:
  1786                           
  1787                           ;mainMaster.c: 208:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1788  0081  3003               	movlw	3
  1789  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1790  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1791  0084  00A4               	movwf	??_mostrar_dato+1
  1792  0085  3097               	movlw	151
  1793  0086  00A3               	movwf	??_mostrar_dato
  1794  0087                     u1147:
  1795  0087  0BA3               	decfsz	??_mostrar_dato,f
  1796  0088  2887               	goto	u1147
  1797  0089  0BA4               	decfsz	??_mostrar_dato+1,f
  1798  008A  2887               	goto	u1147
  1799  008B                     l2116:
  1800                           
  1801                           ;mainMaster.c: 209:     num_ascii(pot_d2, &sdata);
  1802  008B  3078               	movlw	(low (_sdata| 0))& (0+255)
  1803  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1804  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1805  008E  00A3               	movwf	??_mostrar_dato
  1806  008F  0823               	movf	??_mostrar_dato,w
  1807  0090  00F3               	movwf	num_ascii@code
  1808  0091  083B               	movf	_pot_d2,w
  1809  0092  120A  118A  23A1  120A  118A  	fcall	_num_ascii
  1810  0097                     l2118:
  1811                           
  1812                           ;mainMaster.c: 210:     Lcd_Write_Char(sdata);
  1813  0097  0878               	movf	_sdata,w
  1814  0098  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_Char
  1815  009D                     l2120:
  1816                           
  1817                           ;mainMaster.c: 211:     usart_T_virt(sdata);
  1818  009D  0878               	movf	_sdata,w
  1819  009E  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  1820  00A3                     l2122:
  1821                           
  1822                           ;mainMaster.c: 212:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1823  00A3  3003               	movlw	3
  1824  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1825  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1826  00A6  00A4               	movwf	??_mostrar_dato+1
  1827  00A7  3097               	movlw	151
  1828  00A8  00A3               	movwf	??_mostrar_dato
  1829  00A9                     u1157:
  1830  00A9  0BA3               	decfsz	??_mostrar_dato,f
  1831  00AA  28A9               	goto	u1157
  1832  00AB  0BA4               	decfsz	??_mostrar_dato+1,f
  1833  00AC  28A9               	goto	u1157
  1834  00AD                     l2124:
  1835                           
  1836                           ;mainMaster.c: 213:     Lcd_Write_Char(86);
  1837  00AD  3056               	movlw	86
  1838  00AE  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_Char
  1839  00B3                     l2126:
  1840                           
  1841                           ;mainMaster.c: 214:     usart_T_virt(86);
  1842  00B3  3056               	movlw	86
  1843  00B4  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  1844  00B9                     l2128:
  1845                           
  1846                           ;mainMaster.c: 215:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1847  00B9  3003               	movlw	3
  1848  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1849  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1850  00BC  00A4               	movwf	??_mostrar_dato+1
  1851  00BD  3097               	movlw	151
  1852  00BE  00A3               	movwf	??_mostrar_dato
  1853  00BF                     u1167:
  1854  00BF  0BA3               	decfsz	??_mostrar_dato,f
  1855  00C0  28BF               	goto	u1167
  1856  00C1  0BA4               	decfsz	??_mostrar_dato+1,f
  1857  00C2  28BF               	goto	u1167
  1858  00C3                     l2130:
  1859                           
  1860                           ;mainMaster.c: 217:     Lcd_Write_String("  ");
  1861  00C3  3059               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1862  00C4  120A  118A  269F  120A  118A  	fcall	_Lcd_Write_String
  1863  00C9                     l2132:
  1864                           
  1865                           ;mainMaster.c: 218:     usart_T_virt(32);
  1866  00C9  3020               	movlw	32
  1867  00CA  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  1868                           
  1869                           ;mainMaster.c: 219:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1870  00CF  3003               	movlw	3
  1871  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1872  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1873  00D2  00A4               	movwf	??_mostrar_dato+1
  1874  00D3  3097               	movlw	151
  1875  00D4  00A3               	movwf	??_mostrar_dato
  1876  00D5                     u1177:
  1877  00D5  0BA3               	decfsz	??_mostrar_dato,f
  1878  00D6  28D5               	goto	u1177
  1879  00D7  0BA4               	decfsz	??_mostrar_dato+1,f
  1880  00D8  28D5               	goto	u1177
  1881  00D9                     l2134:
  1882                           
  1883                           ;mainMaster.c: 220:     usart_T_virt(32);
  1884  00D9  3020               	movlw	32
  1885  00DA  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  1886  00DF                     l2136:
  1887                           
  1888                           ;mainMaster.c: 221:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1889  00DF  3003               	movlw	3
  1890  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1891  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1892  00E2  00A4               	movwf	??_mostrar_dato+1
  1893  00E3  3097               	movlw	151
  1894  00E4  00A3               	movwf	??_mostrar_dato
  1895  00E5                     u1187:
  1896  00E5  0BA3               	decfsz	??_mostrar_dato,f
  1897  00E6  28E5               	goto	u1187
  1898  00E7  0BA4               	decfsz	??_mostrar_dato+1,f
  1899  00E8  28E5               	goto	u1187
  1900  00E9                     l2138:
  1901                           
  1902                           ;mainMaster.c: 224:     conts(cont, &cont_u, &cont_d, &cont_c);
  1903  00E9  307A               	movlw	(low (_cont_u| 0))& (0+255)
  1904  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1905  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1906  00EC  00A3               	movwf	??_mostrar_dato
  1907  00ED  0823               	movf	??_mostrar_dato,w
  1908  00EE  00F3               	movwf	conts@uni
  1909  00EF  3079               	movlw	(low (_cont_d| 0))& (0+255)
  1910  00F0  00A4               	movwf	??_mostrar_dato+1
  1911  00F1  0824               	movf	??_mostrar_dato+1,w
  1912  00F2  00F4               	movwf	conts@dec
  1913  00F3  3039               	movlw	(low (_cont_c| 0))& (0+255)
  1914  00F4  00A5               	movwf	??_mostrar_dato+2
  1915  00F5  0825               	movf	??_mostrar_dato+2,w
  1916  00F6  00F5               	movwf	conts@cent
  1917  00F7  083E               	movf	_cont,w
  1918  00F8  120A  118A  25A7  120A  118A  	fcall	_conts
  1919  00FD                     l2140:
  1920                           
  1921                           ;mainMaster.c: 225:     num_ascii(cont_c, &sdata);
  1922  00FD  3078               	movlw	(low (_sdata| 0))& (0+255)
  1923  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1924  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1925  0100  00A3               	movwf	??_mostrar_dato
  1926  0101  0823               	movf	??_mostrar_dato,w
  1927  0102  00F3               	movwf	num_ascii@code
  1928  0103  0839               	movf	_cont_c,w
  1929  0104  120A  118A  23A1  120A  118A  	fcall	_num_ascii
  1930                           
  1931                           ;mainMaster.c: 226:     Lcd_Write_Char(sdata);
  1932  0109  0878               	movf	_sdata,w
  1933  010A  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_Char
  1934                           
  1935                           ;mainMaster.c: 227:     usart_T_virt(sdata);
  1936  010F  0878               	movf	_sdata,w
  1937  0110  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  1938  0115                     l2142:
  1939                           
  1940                           ;mainMaster.c: 228:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1941  0115  3003               	movlw	3
  1942  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0118  00A4               	movwf	??_mostrar_dato+1
  1945  0119  3097               	movlw	151
  1946  011A  00A3               	movwf	??_mostrar_dato
  1947  011B                     u1197:
  1948  011B  0BA3               	decfsz	??_mostrar_dato,f
  1949  011C  291B               	goto	u1197
  1950  011D  0BA4               	decfsz	??_mostrar_dato+1,f
  1951  011E  291B               	goto	u1197
  1952  011F                     l2144:
  1953                           
  1954                           ;mainMaster.c: 229:     num_ascii(cont_d, &sdata);
  1955  011F  3078               	movlw	(low (_sdata| 0))& (0+255)
  1956  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1957  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1958  0122  00A3               	movwf	??_mostrar_dato
  1959  0123  0823               	movf	??_mostrar_dato,w
  1960  0124  00F3               	movwf	num_ascii@code
  1961  0125  0879               	movf	_cont_d,w
  1962  0126  120A  118A  23A1  120A  118A  	fcall	_num_ascii
  1963  012B                     l2146:
  1964                           
  1965                           ;mainMaster.c: 230:     Lcd_Write_Char(sdata);
  1966  012B  0878               	movf	_sdata,w
  1967  012C  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_Char
  1968  0131                     l2148:
  1969                           
  1970                           ;mainMaster.c: 231:     usart_T_virt(sdata);
  1971  0131  0878               	movf	_sdata,w
  1972  0132  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  1973  0137                     l2150:
  1974                           
  1975                           ;mainMaster.c: 232:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1976  0137  3003               	movlw	3
  1977  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1979  013A  00A4               	movwf	??_mostrar_dato+1
  1980  013B  3097               	movlw	151
  1981  013C  00A3               	movwf	??_mostrar_dato
  1982  013D                     u1207:
  1983  013D  0BA3               	decfsz	??_mostrar_dato,f
  1984  013E  293D               	goto	u1207
  1985  013F  0BA4               	decfsz	??_mostrar_dato+1,f
  1986  0140  293D               	goto	u1207
  1987  0141                     l2152:
  1988                           
  1989                           ;mainMaster.c: 233:     num_ascii(cont_u, &sdata);
  1990  0141  3078               	movlw	(low (_sdata| 0))& (0+255)
  1991  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1992  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1993  0144  00A3               	movwf	??_mostrar_dato
  1994  0145  0823               	movf	??_mostrar_dato,w
  1995  0146  00F3               	movwf	num_ascii@code
  1996  0147  087A               	movf	_cont_u,w
  1997  0148  120A  118A  23A1  120A  118A  	fcall	_num_ascii
  1998                           
  1999                           ;mainMaster.c: 234:     Lcd_Write_Char(sdata);
  2000  014D  0878               	movf	_sdata,w
  2001  014E  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_Char
  2002                           
  2003                           ;mainMaster.c: 235:     usart_T_virt(sdata);
  2004  0153  0878               	movf	_sdata,w
  2005  0154  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  2006  0159                     l2154:
  2007                           
  2008                           ;mainMaster.c: 236:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2009  0159  3003               	movlw	3
  2010  015A  1283               	bcf	3,5	;RP0=0, select bank0
  2011  015B  1303               	bcf	3,6	;RP1=0, select bank0
  2012  015C  00A4               	movwf	??_mostrar_dato+1
  2013  015D  3097               	movlw	151
  2014  015E  00A3               	movwf	??_mostrar_dato
  2015  015F                     u1217:
  2016  015F  0BA3               	decfsz	??_mostrar_dato,f
  2017  0160  295F               	goto	u1217
  2018  0161  0BA4               	decfsz	??_mostrar_dato+1,f
  2019  0162  295F               	goto	u1217
  2020  0163                     l2156:
  2021                           
  2022                           ;mainMaster.c: 238:     Lcd_Write_String("  ");
  2023  0163  3059               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2024  0164  120A  118A  269F  120A  118A  	fcall	_Lcd_Write_String
  2025  0169                     l2158:
  2026                           
  2027                           ;mainMaster.c: 239:     usart_T_virt(32);
  2028  0169  3020               	movlw	32
  2029  016A  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  2030  016F                     l2160:
  2031                           
  2032                           ;mainMaster.c: 240:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2033  016F  3003               	movlw	3
  2034  0170  1283               	bcf	3,5	;RP0=0, select bank0
  2035  0171  1303               	bcf	3,6	;RP1=0, select bank0
  2036  0172  00A4               	movwf	??_mostrar_dato+1
  2037  0173  3097               	movlw	151
  2038  0174  00A3               	movwf	??_mostrar_dato
  2039  0175                     u1227:
  2040  0175  0BA3               	decfsz	??_mostrar_dato,f
  2041  0176  2975               	goto	u1227
  2042  0177  0BA4               	decfsz	??_mostrar_dato+1,f
  2043  0178  2975               	goto	u1227
  2044  0179                     l2162:
  2045                           
  2046                           ;mainMaster.c: 241:     usart_T_virt(32);
  2047  0179  3020               	movlw	32
  2048  017A  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  2049  017F                     l2164:
  2050                           
  2051                           ;mainMaster.c: 242:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2052  017F  3003               	movlw	3
  2053  0180  1283               	bcf	3,5	;RP0=0, select bank0
  2054  0181  1303               	bcf	3,6	;RP1=0, select bank0
  2055  0182  00A4               	movwf	??_mostrar_dato+1
  2056  0183  3097               	movlw	151
  2057  0184  00A3               	movwf	??_mostrar_dato
  2058  0185                     u1237:
  2059  0185  0BA3               	decfsz	??_mostrar_dato,f
  2060  0186  2985               	goto	u1237
  2061  0187  0BA4               	decfsz	??_mostrar_dato+1,f
  2062  0188  2985               	goto	u1237
  2063  0189                     l2166:
  2064                           
  2065                           ;mainMaster.c: 245:     conts(temp_m, &cont_u, &cont_d, &cont_c);
  2066  0189  307A               	movlw	(low (_cont_u| 0))& (0+255)
  2067  018A  1283               	bcf	3,5	;RP0=0, select bank0
  2068  018B  1303               	bcf	3,6	;RP1=0, select bank0
  2069  018C  00A3               	movwf	??_mostrar_dato
  2070  018D  0823               	movf	??_mostrar_dato,w
  2071  018E  00F3               	movwf	conts@uni
  2072  018F  3079               	movlw	(low (_cont_d| 0))& (0+255)
  2073  0190  00A4               	movwf	??_mostrar_dato+1
  2074  0191  0824               	movf	??_mostrar_dato+1,w
  2075  0192  00F4               	movwf	conts@dec
  2076  0193  3039               	movlw	(low (_cont_c| 0))& (0+255)
  2077  0194  00A5               	movwf	??_mostrar_dato+2
  2078  0195  0825               	movf	??_mostrar_dato+2,w
  2079  0196  00F5               	movwf	conts@cent
  2080  0197  083A               	movf	_temp_m,w
  2081  0198  120A  118A  25A7  120A  118A  	fcall	_conts
  2082  019D                     l2168:
  2083                           
  2084                           ;mainMaster.c: 246:     num_ascii(cont_c, &sdata);
  2085  019D  3078               	movlw	(low (_sdata| 0))& (0+255)
  2086  019E  1283               	bcf	3,5	;RP0=0, select bank0
  2087  019F  1303               	bcf	3,6	;RP1=0, select bank0
  2088  01A0  00A3               	movwf	??_mostrar_dato
  2089  01A1  0823               	movf	??_mostrar_dato,w
  2090  01A2  00F3               	movwf	num_ascii@code
  2091  01A3  0839               	movf	_cont_c,w
  2092  01A4  120A  118A  23A1  120A  118A  	fcall	_num_ascii
  2093  01A9                     l2170:
  2094                           
  2095                           ;mainMaster.c: 247:     Lcd_Write_Char(sdata);
  2096  01A9  0878               	movf	_sdata,w
  2097  01AA  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_Char
  2098  01AF                     l2172:
  2099                           
  2100                           ;mainMaster.c: 248:     usart_T_virt(sdata);
  2101  01AF  0878               	movf	_sdata,w
  2102  01B0  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  2103  01B5                     l2174:
  2104                           
  2105                           ;mainMaster.c: 249:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2106  01B5  3003               	movlw	3
  2107  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  2108  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  2109  01B8  00A4               	movwf	??_mostrar_dato+1
  2110  01B9  3097               	movlw	151
  2111  01BA  00A3               	movwf	??_mostrar_dato
  2112  01BB                     u1247:
  2113  01BB  0BA3               	decfsz	??_mostrar_dato,f
  2114  01BC  29BB               	goto	u1247
  2115  01BD  0BA4               	decfsz	??_mostrar_dato+1,f
  2116  01BE  29BB               	goto	u1247
  2117  01BF                     l2176:
  2118                           
  2119                           ;mainMaster.c: 250:     num_ascii(cont_d, &sdata);
  2120  01BF  3078               	movlw	(low (_sdata| 0))& (0+255)
  2121  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  2122  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  2123  01C2  00A3               	movwf	??_mostrar_dato
  2124  01C3  0823               	movf	??_mostrar_dato,w
  2125  01C4  00F3               	movwf	num_ascii@code
  2126  01C5  0879               	movf	_cont_d,w
  2127  01C6  120A  118A  23A1  120A  118A  	fcall	_num_ascii
  2128                           
  2129                           ;mainMaster.c: 251:     Lcd_Write_Char(sdata);
  2130  01CB  0878               	movf	_sdata,w
  2131  01CC  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_Char
  2132                           
  2133                           ;mainMaster.c: 252:     usart_T_virt(sdata);
  2134  01D1  0878               	movf	_sdata,w
  2135  01D2  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  2136  01D7                     l2178:
  2137                           
  2138                           ;mainMaster.c: 253:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2139  01D7  3003               	movlw	3
  2140  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2141  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2142  01DA  00A4               	movwf	??_mostrar_dato+1
  2143  01DB  3097               	movlw	151
  2144  01DC  00A3               	movwf	??_mostrar_dato
  2145  01DD                     u1257:
  2146  01DD  0BA3               	decfsz	??_mostrar_dato,f
  2147  01DE  29DD               	goto	u1257
  2148  01DF  0BA4               	decfsz	??_mostrar_dato+1,f
  2149  01E0  29DD               	goto	u1257
  2150  01E1                     l2180:
  2151                           
  2152                           ;mainMaster.c: 254:     num_ascii(cont_u, &sdata);
  2153  01E1  3078               	movlw	(low (_sdata| 0))& (0+255)
  2154  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2155  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2156  01E4  00A3               	movwf	??_mostrar_dato
  2157  01E5  0823               	movf	??_mostrar_dato,w
  2158  01E6  00F3               	movwf	num_ascii@code
  2159  01E7  087A               	movf	_cont_u,w
  2160  01E8  120A  118A  23A1  120A  118A  	fcall	_num_ascii
  2161  01ED                     l2182:
  2162                           
  2163                           ;mainMaster.c: 255:     Lcd_Write_Char(sdata);
  2164  01ED  0878               	movf	_sdata,w
  2165  01EE  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_Char
  2166  01F3                     l2184:
  2167                           
  2168                           ;mainMaster.c: 256:     usart_T_virt(sdata);
  2169  01F3  0878               	movf	_sdata,w
  2170  01F4  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  2171  01F9                     l2186:
  2172                           
  2173                           ;mainMaster.c: 257:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2174  01F9  3003               	movlw	3
  2175  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2176  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2177  01FC  00A4               	movwf	??_mostrar_dato+1
  2178  01FD  3097               	movlw	151
  2179  01FE  00A3               	movwf	??_mostrar_dato
  2180  01FF                     u1267:
  2181  01FF  0BA3               	decfsz	??_mostrar_dato,f
  2182  0200  29FF               	goto	u1267
  2183  0201  0BA4               	decfsz	??_mostrar_dato+1,f
  2184  0202  29FF               	goto	u1267
  2185  0203                     l2188:
  2186                           
  2187                           ;mainMaster.c: 258:     Lcd_Write_Char(67);
  2188  0203  3043               	movlw	67
  2189  0204  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_Char
  2190  0209                     l2190:
  2191                           
  2192                           ;mainMaster.c: 259:     usart_T_virt(67);
  2193  0209  3043               	movlw	67
  2194  020A  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  2195  020F                     l2192:
  2196                           
  2197                           ;mainMaster.c: 260:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2198  020F  3003               	movlw	3
  2199  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0212  00A4               	movwf	??_mostrar_dato+1
  2202  0213  3097               	movlw	151
  2203  0214  00A3               	movwf	??_mostrar_dato
  2204  0215                     u1277:
  2205  0215  0BA3               	decfsz	??_mostrar_dato,f
  2206  0216  2A15               	goto	u1277
  2207  0217  0BA4               	decfsz	??_mostrar_dato+1,f
  2208  0218  2A15               	goto	u1277
  2209  0219                     l120:
  2210  0219  0008               	return
  2211  021A                     __end_of_mostrar_dato:
  2212                           
  2213                           	psect	text9
  2214  03A1                     __ptext9:	
  2215 ;; *************** function _num_ascii *****************
  2216 ;; Defined at:
  2217 ;;		line 74 in file "USART.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  value           1    wreg     unsigned char 
  2220 ;;  code            1    3[COMMON] PTR unsigned char 
  2221 ;;		 -> sdata(1), 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  value           1    6[COMMON] unsigned char 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2233 ;;      Params:         1       0       0       0       0
  2234 ;;      Locals:         1       0       0       0       0
  2235 ;;      Temps:          2       0       0       0       0
  2236 ;;      Totals:         4       0       0       0       0
  2237 ;;Total ram usage:        4 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    1
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_mostrar_dato
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           
  2248                           ;psect for function _num_ascii
  2249  03A1                     _num_ascii:
  2250                           
  2251                           ;incstack = 0
  2252                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  2253                           ;num_ascii@value stored from wreg
  2254  03A1  00F6               	movwf	num_ascii@value
  2255  03A2                     l1504:
  2256                           
  2257                           ;USART.c: 75:     switch (value) {
  2258  03A2  2BF0               	goto	l1530
  2259  03A3                     l1506:
  2260                           
  2261                           ;USART.c: 77:             *code = 48;
  2262  03A3  3030               	movlw	48
  2263  03A4  00F4               	movwf	??_num_ascii
  2264  03A5  0873               	movf	num_ascii@code,w
  2265  03A6  0084               	movwf	4
  2266  03A7  0874               	movf	??_num_ascii,w
  2267  03A8  0080               	movwf	0
  2268                           
  2269                           ;USART.c: 78:             break;
  2270  03A9  2C18               	goto	l216
  2271  03AA                     l1508:
  2272                           
  2273                           ;USART.c: 80:             *code = 49;
  2274  03AA  3031               	movlw	49
  2275  03AB  00F4               	movwf	??_num_ascii
  2276  03AC  0873               	movf	num_ascii@code,w
  2277  03AD  0084               	movwf	4
  2278  03AE  0874               	movf	??_num_ascii,w
  2279  03AF  0080               	movwf	0
  2280                           
  2281                           ;USART.c: 81:             break;
  2282  03B0  2C18               	goto	l216
  2283  03B1                     l1510:
  2284                           
  2285                           ;USART.c: 83:             *code = 50;
  2286  03B1  3032               	movlw	50
  2287  03B2  00F4               	movwf	??_num_ascii
  2288  03B3  0873               	movf	num_ascii@code,w
  2289  03B4  0084               	movwf	4
  2290  03B5  0874               	movf	??_num_ascii,w
  2291  03B6  0080               	movwf	0
  2292                           
  2293                           ;USART.c: 84:             break;
  2294  03B7  2C18               	goto	l216
  2295  03B8                     l1512:
  2296                           
  2297                           ;USART.c: 86:             *code = 51;
  2298  03B8  3033               	movlw	51
  2299  03B9  00F4               	movwf	??_num_ascii
  2300  03BA  0873               	movf	num_ascii@code,w
  2301  03BB  0084               	movwf	4
  2302  03BC  0874               	movf	??_num_ascii,w
  2303  03BD  0080               	movwf	0
  2304                           
  2305                           ;USART.c: 87:             break;
  2306  03BE  2C18               	goto	l216
  2307  03BF                     l1514:
  2308                           
  2309                           ;USART.c: 89:             *code = 52;
  2310  03BF  3034               	movlw	52
  2311  03C0  00F4               	movwf	??_num_ascii
  2312  03C1  0873               	movf	num_ascii@code,w
  2313  03C2  0084               	movwf	4
  2314  03C3  0874               	movf	??_num_ascii,w
  2315  03C4  0080               	movwf	0
  2316                           
  2317                           ;USART.c: 90:             break;
  2318  03C5  2C18               	goto	l216
  2319  03C6                     l1516:
  2320                           
  2321                           ;USART.c: 92:             *code = 53;
  2322  03C6  3035               	movlw	53
  2323  03C7  00F4               	movwf	??_num_ascii
  2324  03C8  0873               	movf	num_ascii@code,w
  2325  03C9  0084               	movwf	4
  2326  03CA  0874               	movf	??_num_ascii,w
  2327  03CB  0080               	movwf	0
  2328                           
  2329                           ;USART.c: 93:             break;
  2330  03CC  2C18               	goto	l216
  2331  03CD                     l1518:
  2332                           
  2333                           ;USART.c: 95:             *code = 54;
  2334  03CD  3036               	movlw	54
  2335  03CE  00F4               	movwf	??_num_ascii
  2336  03CF  0873               	movf	num_ascii@code,w
  2337  03D0  0084               	movwf	4
  2338  03D1  0874               	movf	??_num_ascii,w
  2339  03D2  0080               	movwf	0
  2340                           
  2341                           ;USART.c: 96:             break;
  2342  03D3  2C18               	goto	l216
  2343  03D4                     l1520:
  2344                           
  2345                           ;USART.c: 98:             *code = 55;
  2346  03D4  3037               	movlw	55
  2347  03D5  00F4               	movwf	??_num_ascii
  2348  03D6  0873               	movf	num_ascii@code,w
  2349  03D7  0084               	movwf	4
  2350  03D8  0874               	movf	??_num_ascii,w
  2351  03D9  0080               	movwf	0
  2352                           
  2353                           ;USART.c: 99:             break;
  2354  03DA  2C18               	goto	l216
  2355  03DB                     l1522:
  2356                           
  2357                           ;USART.c: 101:             *code = 56;
  2358  03DB  3038               	movlw	56
  2359  03DC  00F4               	movwf	??_num_ascii
  2360  03DD  0873               	movf	num_ascii@code,w
  2361  03DE  0084               	movwf	4
  2362  03DF  0874               	movf	??_num_ascii,w
  2363  03E0  0080               	movwf	0
  2364                           
  2365                           ;USART.c: 102:             break;
  2366  03E1  2C18               	goto	l216
  2367  03E2                     l1524:
  2368                           
  2369                           ;USART.c: 104:             *code = 57;
  2370  03E2  3039               	movlw	57
  2371  03E3  00F4               	movwf	??_num_ascii
  2372  03E4  0873               	movf	num_ascii@code,w
  2373  03E5  0084               	movwf	4
  2374  03E6  0874               	movf	??_num_ascii,w
  2375  03E7  0080               	movwf	0
  2376                           
  2377                           ;USART.c: 105:             break;
  2378  03E8  2C18               	goto	l216
  2379  03E9                     l1526:
  2380                           
  2381                           ;USART.c: 107:             *code = 63;
  2382  03E9  303F               	movlw	63
  2383  03EA  00F4               	movwf	??_num_ascii
  2384  03EB  0873               	movf	num_ascii@code,w
  2385  03EC  0084               	movwf	4
  2386  03ED  0874               	movf	??_num_ascii,w
  2387  03EE  0080               	movwf	0
  2388                           
  2389                           ;USART.c: 108:             break;
  2390  03EF  2C18               	goto	l216
  2391  03F0                     l1530:
  2392  03F0  0876               	movf	num_ascii@value,w
  2393  03F1  00F4               	movwf	??_num_ascii
  2394  03F2  01F5               	clrf	??_num_ascii+1
  2395                           
  2396                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2397                           ; Switch size 1, requested type "simple"
  2398                           ; Number of cases is 1, Range of values is 0 to 0
  2399                           ; switch strategies available:
  2400                           ; Name         Instructions Cycles
  2401                           ; simple_byte            4     3 (average)
  2402                           ; direct_byte           11     8 (fixed)
  2403                           ; jumptable            260     6 (fixed)
  2404                           ;	Chosen strategy is simple_byte
  2405  03F3  0875               	movf	??_num_ascii+1,w
  2406  03F4  3A00               	xorlw	0	; case 0
  2407  03F5  1903               	skipnz
  2408  03F6  2BF8               	goto	l2298
  2409  03F7  2BE9               	goto	l1526
  2410  03F8                     l2298:
  2411                           
  2412                           ; Switch size 1, requested type "simple"
  2413                           ; Number of cases is 10, Range of values is 0 to 9
  2414                           ; switch strategies available:
  2415                           ; Name         Instructions Cycles
  2416                           ; simple_byte           31    16 (average)
  2417                           ; direct_byte           38     8 (fixed)
  2418                           ; jumptable            260     6 (fixed)
  2419                           ;	Chosen strategy is simple_byte
  2420  03F8  0874               	movf	??_num_ascii,w
  2421  03F9  3A00               	xorlw	0	; case 0
  2422  03FA  1903               	skipnz
  2423  03FB  2BA3               	goto	l1506
  2424  03FC  3A01               	xorlw	1	; case 1
  2425  03FD  1903               	skipnz
  2426  03FE  2BAA               	goto	l1508
  2427  03FF  3A03               	xorlw	3	; case 2
  2428  0400  1903               	skipnz
  2429  0401  2BB1               	goto	l1510
  2430  0402  3A01               	xorlw	1	; case 3
  2431  0403  1903               	skipnz
  2432  0404  2BB8               	goto	l1512
  2433  0405  3A07               	xorlw	7	; case 4
  2434  0406  1903               	skipnz
  2435  0407  2BBF               	goto	l1514
  2436  0408  3A01               	xorlw	1	; case 5
  2437  0409  1903               	skipnz
  2438  040A  2BC6               	goto	l1516
  2439  040B  3A03               	xorlw	3	; case 6
  2440  040C  1903               	skipnz
  2441  040D  2BCD               	goto	l1518
  2442  040E  3A01               	xorlw	1	; case 7
  2443  040F  1903               	skipnz
  2444  0410  2BD4               	goto	l1520
  2445  0411  3A0F               	xorlw	15	; case 8
  2446  0412  1903               	skipnz
  2447  0413  2BDB               	goto	l1522
  2448  0414  3A01               	xorlw	1	; case 9
  2449  0415  1903               	skipnz
  2450  0416  2BE2               	goto	l1524
  2451  0417  2BE9               	goto	l1526
  2452  0418                     l216:
  2453  0418  0008               	return
  2454  0419                     __end_of_num_ascii:
  2455                           
  2456                           	psect	text10
  2457  05A7                     __ptext10:	
  2458 ;; *************** function _conts *****************
  2459 ;; Defined at:
  2460 ;;		line 313 in file "mainMaster.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  data_in         1    wreg     unsigned char 
  2463 ;;  uni             1    3[COMMON] PTR unsigned char 
  2464 ;;		 -> cont_u(1), 
  2465 ;;  dec             1    4[COMMON] PTR unsigned char 
  2466 ;;		 -> cont_d(1), 
  2467 ;;  cent            1    5[COMMON] PTR unsigned char 
  2468 ;;		 -> cont_c(1), 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  data_in         1    7[COMMON] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2480 ;;      Params:         3       0       0       0       0
  2481 ;;      Locals:         1       0       0       0       0
  2482 ;;      Temps:          1       0       0       0       0
  2483 ;;      Totals:         5       0       0       0       0
  2484 ;;Total ram usage:        5 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    1
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_mostrar_dato
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           
  2495                           ;psect for function _conts
  2496  05A7                     _conts:
  2497                           
  2498                           ;incstack = 0
  2499                           ; Regs used in _conts: [wreg-fsr0h+status,2+status,0]
  2500                           ;conts@data_in stored from wreg
  2501  05A7  00F7               	movwf	conts@data_in
  2502  05A8                     l1536:
  2503                           
  2504                           ;mainMaster.c: 318:     while (data_in > 99) {
  2505  05A8  2DB4               	goto	l1540
  2506  05A9                     l1538:
  2507                           
  2508                           ;mainMaster.c: 319:         data_in = data_in - 100;
  2509  05A9  0877               	movf	conts@data_in,w
  2510  05AA  3E9C               	addlw	156
  2511  05AB  00F6               	movwf	??_conts
  2512  05AC  0876               	movf	??_conts,w
  2513  05AD  00F7               	movwf	conts@data_in
  2514                           
  2515                           ;mainMaster.c: 320:         aux++;
  2516  05AE  3001               	movlw	1
  2517  05AF  00F6               	movwf	??_conts
  2518  05B0  0876               	movf	??_conts,w
  2519  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2520  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2521  05B3  07B7               	addwf	_aux,f
  2522  05B4                     l1540:
  2523                           
  2524                           ;mainMaster.c: 318:     while (data_in > 99) {
  2525  05B4  3064               	movlw	100
  2526  05B5  0277               	subwf	conts@data_in,w
  2527  05B6  1803               	skipnc
  2528  05B7  2DB9               	goto	u541
  2529  05B8  2DBA               	goto	u540
  2530  05B9                     u541:
  2531  05B9  2DA9               	goto	l1538
  2532  05BA                     u540:
  2533  05BA                     l1542:
  2534                           
  2535                           ;mainMaster.c: 322:     *cent = aux;
  2536  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  2537  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  2538  05BC  0837               	movf	_aux,w
  2539  05BD  00F6               	movwf	??_conts
  2540  05BE  0875               	movf	conts@cent,w
  2541  05BF  0084               	movwf	4
  2542  05C0  0876               	movf	??_conts,w
  2543  05C1  1383               	bcf	3,7	;select IRP bank0
  2544  05C2  0080               	movwf	0
  2545  05C3                     l1544:
  2546                           
  2547                           ;mainMaster.c: 323:     aux = 0;
  2548  05C3  01B7               	clrf	_aux
  2549                           
  2550                           ;mainMaster.c: 325:     while (data_in > 9) {
  2551  05C4  2DCE               	goto	l1548
  2552  05C5                     l1546:
  2553                           
  2554                           ;mainMaster.c: 326:         data_in = data_in - 10;
  2555  05C5  0877               	movf	conts@data_in,w
  2556  05C6  3EF6               	addlw	246
  2557  05C7  00F6               	movwf	??_conts
  2558  05C8  0876               	movf	??_conts,w
  2559  05C9  00F7               	movwf	conts@data_in
  2560                           
  2561                           ;mainMaster.c: 327:         aux++;
  2562  05CA  3001               	movlw	1
  2563  05CB  00F6               	movwf	??_conts
  2564  05CC  0876               	movf	??_conts,w
  2565  05CD  07B7               	addwf	_aux,f
  2566  05CE                     l1548:
  2567                           
  2568                           ;mainMaster.c: 325:     while (data_in > 9) {
  2569  05CE  300A               	movlw	10
  2570  05CF  0277               	subwf	conts@data_in,w
  2571  05D0  1803               	skipnc
  2572  05D1  2DD3               	goto	u551
  2573  05D2  2DD4               	goto	u550
  2574  05D3                     u551:
  2575  05D3  2DC5               	goto	l1546
  2576  05D4                     u550:
  2577  05D4                     l1550:
  2578                           
  2579                           ;mainMaster.c: 329:     *dec = aux;
  2580  05D4  0837               	movf	_aux,w
  2581  05D5  00F6               	movwf	??_conts
  2582  05D6  0874               	movf	conts@dec,w
  2583  05D7  0084               	movwf	4
  2584  05D8  0876               	movf	??_conts,w
  2585  05D9  0080               	movwf	0
  2586                           
  2587                           ;mainMaster.c: 330:     *uni = data_in;
  2588  05DA  0877               	movf	conts@data_in,w
  2589  05DB  00F6               	movwf	??_conts
  2590  05DC  0873               	movf	conts@uni,w
  2591  05DD  0084               	movwf	4
  2592  05DE  0876               	movf	??_conts,w
  2593  05DF  0080               	movwf	0
  2594  05E0                     l1552:
  2595                           
  2596                           ;mainMaster.c: 331:     aux = 0;
  2597  05E0  01B7               	clrf	_aux
  2598  05E1                     l150:
  2599  05E1  0008               	return
  2600  05E2                     __end_of_conts:
  2601                           
  2602                           	psect	text11
  2603  069F                     __ptext11:	
  2604 ;; *************** function _Lcd_Write_String *****************
  2605 ;; Defined at:
  2606 ;;		line 132 in file "lcd.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  a               1    wreg     PTR unsigned char 
  2609 ;;		 -> STR_8(20), STR_7(12), STR_6(13), STR_5(10), 
  2610 ;;		 -> STR_4(16), STR_3(3), STR_2(3), STR_1(17), 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2613 ;;		 -> STR_8(20), STR_7(12), STR_6(13), STR_5(10), 
  2614 ;;		 -> STR_4(16), STR_3(3), STR_2(3), STR_1(17), 
  2615 ;;  i               2    0[BANK0 ] int 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2625 ;;      Params:         0       0       0       0       0
  2626 ;;      Locals:         0       3       0       0       0
  2627 ;;      Temps:          0       0       0       0       0
  2628 ;;      Totals:         0       3       0       0       0
  2629 ;;Total ram usage:        3 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    3
  2632 ;; This function calls:
  2633 ;;		_Lcd_Write_Char
  2634 ;; This function is called by:
  2635 ;;		_mostrar_titulo_lcd
  2636 ;;		_mostrar_dato
  2637 ;;		_Lcd_Credits
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           
  2642                           ;psect for function _Lcd_Write_String
  2643  069F                     _Lcd_Write_String:
  2644                           
  2645                           ;incstack = 0
  2646                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2647                           ;Lcd_Write_String@a stored from wreg
  2648  069F  1283               	bcf	3,5	;RP0=0, select bank0
  2649  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  2650  06A1  00A2               	movwf	Lcd_Write_String@a
  2651  06A2                     l2014:
  2652                           
  2653                           ;lcd.c: 133:     int i;;lcd.c: 134:     for (i = 0; a[i] != '\0'; i++)
  2654  06A2  01A0               	clrf	Lcd_Write_String@i
  2655  06A3  01A1               	clrf	Lcd_Write_String@i+1
  2656  06A4  2EBA               	goto	l2020
  2657  06A5                     l2016:
  2658                           
  2659                           ;lcd.c: 135:         Lcd_Write_Char(a[i]);
  2660  06A5  0820               	movf	Lcd_Write_String@i,w
  2661  06A6  0722               	addwf	Lcd_Write_String@a,w
  2662  06A7  0084               	movwf	4
  2663  06A8  120A  118A  2482  120A  118A  	fcall	stringdir
  2664  06AD  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_Char
  2665  06B2                     l2018:
  2666  06B2  3001               	movlw	1
  2667  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2668  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2669  06B5  07A0               	addwf	Lcd_Write_String@i,f
  2670  06B6  1803               	skipnc
  2671  06B7  0AA1               	incf	Lcd_Write_String@i+1,f
  2672  06B8  3000               	movlw	0
  2673  06B9  07A1               	addwf	Lcd_Write_String@i+1,f
  2674  06BA                     l2020:
  2675  06BA  0820               	movf	Lcd_Write_String@i,w
  2676  06BB  0722               	addwf	Lcd_Write_String@a,w
  2677  06BC  0084               	movwf	4
  2678  06BD  120A  118A  2482  120A  118A  	fcall	stringdir
  2679  06C2  3A00               	xorlw	0
  2680  06C3  1D03               	skipz
  2681  06C4  2EC6               	goto	u891
  2682  06C5  2EC7               	goto	u890
  2683  06C6                     u891:
  2684  06C6  2EA5               	goto	l2016
  2685  06C7                     u890:
  2686  06C7                     l287:
  2687  06C7  0008               	return
  2688  06C8                     __end_of_Lcd_Write_String:
  2689                           
  2690                           	psect	text12
  2691  0708                     __ptext12:	
  2692 ;; *************** function _Lcd_Write_Char *****************
  2693 ;; Defined at:
  2694 ;;		line 111 in file "lcd.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  a               1    wreg     unsigned char 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  a               1    5[COMMON] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0, pclath, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2708 ;;      Params:         0       0       0       0       0
  2709 ;;      Locals:         1       0       0       0       0
  2710 ;;      Temps:          1       0       0       0       0
  2711 ;;      Totals:         2       0       0       0       0
  2712 ;;Total ram usage:        2 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    2
  2715 ;; This function calls:
  2716 ;;		_Lcd_Port
  2717 ;; This function is called by:
  2718 ;;		_mostrar_dato
  2719 ;;		_Lcd_Write_String
  2720 ;;		_Lcd_Credits
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           
  2725                           ;psect for function _Lcd_Write_Char
  2726  0708                     _Lcd_Write_Char:
  2727                           
  2728                           ;incstack = 0
  2729                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2730                           ;Lcd_Write_Char@a stored from wreg
  2731  0708  00F5               	movwf	Lcd_Write_Char@a
  2732  0709                     l1982:
  2733                           
  2734                           ;lcd.c: 125:     RC1 = 1;
  2735  0709  1283               	bcf	3,5	;RP0=0, select bank0
  2736  070A  1303               	bcf	3,6	;RP1=0, select bank0
  2737  070B  1487               	bsf	7,1	;volatile
  2738  070C                     l1984:
  2739                           
  2740                           ;lcd.c: 126:     Lcd_Port(a);
  2741  070C  0875               	movf	Lcd_Write_Char@a,w
  2742  070D  120A  118A  252D  120A  118A  	fcall	_Lcd_Port
  2743  0712                     l1986:
  2744                           
  2745                           ;lcd.c: 127:     RC0 = 1;
  2746  0712  1283               	bcf	3,5	;RP0=0, select bank0
  2747  0713  1303               	bcf	3,6	;RP1=0, select bank0
  2748  0714  1407               	bsf	7,0	;volatile
  2749  0715                     l1988:
  2750                           
  2751                           ;lcd.c: 128:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2752  0715  301A               	movlw	26
  2753  0716  00F4               	movwf	??_Lcd_Write_Char
  2754  0717                     u1287:
  2755  0717  0BF4               	decfsz	??_Lcd_Write_Char,f
  2756  0718  2F17               	goto	u1287
  2757  0719  0000               	nop
  2758  071A                     l1990:
  2759                           
  2760                           ;lcd.c: 129:     RC0 = 0;
  2761  071A  1283               	bcf	3,5	;RP0=0, select bank0
  2762  071B  1303               	bcf	3,6	;RP1=0, select bank0
  2763  071C  1007               	bcf	7,0	;volatile
  2764  071D                     l281:
  2765  071D  0008               	return
  2766  071E                     __end_of_Lcd_Write_Char:
  2767                           
  2768                           	psect	text13
  2769  06C8                     __ptext13:	
  2770 ;; *************** function _Lcd_Set_Cursor *****************
  2771 ;; Defined at:
  2772 ;;		line 74 in file "lcd.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  a               1    wreg     unsigned char 
  2775 ;;  b               1    7[COMMON] unsigned char 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  a               1    1[BANK0 ] unsigned char 
  2778 ;;  temp            1    2[BANK0 ] unsigned char 
  2779 ;;  y               1    0        unsigned char 
  2780 ;;  z               1    0        unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0, pclath, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2790 ;;      Params:         1       0       0       0       0
  2791 ;;      Locals:         0       2       0       0       0
  2792 ;;      Temps:          0       1       0       0       0
  2793 ;;      Totals:         1       3       0       0       0
  2794 ;;Total ram usage:        4 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    3
  2797 ;; This function calls:
  2798 ;;		_Lcd_Cmd
  2799 ;; This function is called by:
  2800 ;;		_mostrar_titulo_lcd
  2801 ;;		_mostrar_dato
  2802 ;;		_Lcd_Credits
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           
  2807                           ;psect for function _Lcd_Set_Cursor
  2808  06C8                     _Lcd_Set_Cursor:
  2809                           
  2810                           ;incstack = 0
  2811                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2812                           ;Lcd_Set_Cursor@a stored from wreg
  2813  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2814  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2815  06CA  00A1               	movwf	Lcd_Set_Cursor@a
  2816  06CB                     l2002:
  2817                           
  2818                           ;lcd.c: 75:     char temp, z, y;;lcd.c: 76:     if (a == 1) {
  2819  06CB  0321               	decf	Lcd_Set_Cursor@a,w
  2820  06CC  1D03               	btfss	3,2
  2821  06CD  2ECF               	goto	u871
  2822  06CE  2ED0               	goto	u870
  2823  06CF                     u871:
  2824  06CF  2EDC               	goto	l2008
  2825  06D0                     u870:
  2826  06D0                     l2004:
  2827                           
  2828                           ;lcd.c: 77:         temp = 0x80 + b - 1;
  2829  06D0  0877               	movf	Lcd_Set_Cursor@b,w
  2830  06D1  3E7F               	addlw	127
  2831  06D2  00A0               	movwf	??_Lcd_Set_Cursor
  2832  06D3  0820               	movf	??_Lcd_Set_Cursor,w
  2833  06D4  00A2               	movwf	Lcd_Set_Cursor@temp
  2834  06D5                     l2006:
  2835                           
  2836                           ;lcd.c: 84:         Lcd_Cmd(temp);
  2837  06D5  0822               	movf	Lcd_Set_Cursor@temp,w
  2838  06D6  120A  118A  26EE  120A  118A  	fcall	_Lcd_Cmd
  2839                           
  2840                           ;lcd.c: 85:     } else if (a == 2) {
  2841  06DB  2EED               	goto	l275
  2842  06DC                     l2008:
  2843  06DC  3002               	movlw	2
  2844  06DD  0621               	xorwf	Lcd_Set_Cursor@a,w
  2845  06DE  1D03               	btfss	3,2
  2846  06DF  2EE1               	goto	u881
  2847  06E0  2EE2               	goto	u880
  2848  06E1                     u881:
  2849  06E1  2EED               	goto	l275
  2850  06E2                     u880:
  2851  06E2                     l2010:
  2852                           
  2853                           ;lcd.c: 86:         temp = 0xC0 + b - 1;
  2854  06E2  0877               	movf	Lcd_Set_Cursor@b,w
  2855  06E3  3EBF               	addlw	191
  2856  06E4  00A0               	movwf	??_Lcd_Set_Cursor
  2857  06E5  0820               	movf	??_Lcd_Set_Cursor,w
  2858  06E6  00A2               	movwf	Lcd_Set_Cursor@temp
  2859  06E7                     l2012:
  2860                           
  2861                           ;lcd.c: 93:         Lcd_Cmd(temp);
  2862  06E7  0822               	movf	Lcd_Set_Cursor@temp,w
  2863  06E8  120A  118A  26EE  120A  118A  	fcall	_Lcd_Cmd
  2864  06ED                     l275:
  2865  06ED  0008               	return
  2866  06EE                     __end_of_Lcd_Set_Cursor:
  2867                           
  2868                           	psect	text14
  2869  05E2                     __ptext14:	
  2870 ;; *************** function _map_var *****************
  2871 ;; Defined at:
  2872 ;;		line 286 in file "mainMaster.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;  v_in            1    wreg     unsigned char 
  2875 ;;  v_out           1   10[BANK0 ] PTR unsigned char 
  2876 ;;		 -> temp_m(1), 
  2877 ;;  inMin           1   11[BANK0 ] unsigned char 
  2878 ;;  inMax           1   12[BANK0 ] unsigned char 
  2879 ;;  outMin          1   13[BANK0 ] unsigned char 
  2880 ;;  outMax          1   14[BANK0 ] unsigned char 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  v_in            1   18[BANK0 ] unsigned char 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2892 ;;      Params:         0       5       0       0       0
  2893 ;;      Locals:         0       1       0       0       0
  2894 ;;      Temps:          0       3       0       0       0
  2895 ;;      Totals:         0       9       0       0       0
  2896 ;;Total ram usage:        9 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    2
  2899 ;; This function calls:
  2900 ;;		___awdiv
  2901 ;;		___wmul
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           
  2908                           ;psect for function _map_var
  2909  05E2                     _map_var:
  2910                           
  2911                           ;incstack = 0
  2912                           ; Regs used in _map_var: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2913                           ;map_var@v_in stored from wreg
  2914  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2915  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2916  05E4  00B2               	movwf	map_var@v_in
  2917  05E5                     l2090:
  2918                           
  2919                           ;mainMaster.c: 286: void map_var(uint8_t v_in, uint8_t *v_out, uint8_t inMin, uint8_t in
      +                          Max,;mainMaster.c: 287:         uint8_t outMin, uint8_t outMax) {;mainMaster.c: 288:    
      +                           *v_out = ((((v_in - inMin)*(outMax - outMin)) / (inMax - inMin)) + outMin);
  2920  05E5  082B               	movf	map_var@inMin,w
  2921  05E6  022C               	subwf	map_var@inMax,w
  2922  05E7  00A2               	movwf	___awdiv@divisor
  2923  05E8  01A3               	clrf	___awdiv@divisor+1
  2924  05E9  1C03               	skipc
  2925  05EA  03A3               	decf	___awdiv@divisor+1,f
  2926  05EB  082B               	movf	map_var@inMin,w
  2927  05EC  0232               	subwf	map_var@v_in,w
  2928  05ED  00F3               	movwf	___wmul@multiplier
  2929  05EE  01F4               	clrf	___wmul@multiplier+1
  2930  05EF  1C03               	skipc
  2931  05F0  03F4               	decf	___wmul@multiplier+1,f
  2932  05F1  082D               	movf	map_var@outMin,w
  2933  05F2  022E               	subwf	map_var@outMax,w
  2934  05F3  00F5               	movwf	___wmul@multiplicand
  2935  05F4  01F6               	clrf	___wmul@multiplicand+1
  2936  05F5  1C03               	skipc
  2937  05F6  03F6               	decf	___wmul@multiplicand+1,f
  2938  05F7  120A  118A  2674  120A  118A  	fcall	___wmul
  2939  05FC  0874               	movf	?___wmul+1,w
  2940  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  2941  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  2942  05FF  00A5               	movwf	___awdiv@dividend+1
  2943  0600  0873               	movf	?___wmul,w
  2944  0601  00A4               	movwf	___awdiv@dividend
  2945  0602  120A  118A  2419  120A  118A  	fcall	___awdiv
  2946  0607  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0608  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0609  0822               	movf	?___awdiv,w
  2949  060A  00AF               	movwf	??_map_var
  2950  060B  0823               	movf	?___awdiv+1,w
  2951  060C  00B0               	movwf	??_map_var+1
  2952  060D  082D               	movf	map_var@outMin,w
  2953  060E  072F               	addwf	??_map_var,w
  2954  060F  00B1               	movwf	??_map_var+2
  2955  0610  082A               	movf	map_var@v_out,w
  2956  0611  0084               	movwf	4
  2957  0612  0831               	movf	??_map_var+2,w
  2958  0613  1383               	bcf	3,7	;select IRP bank0
  2959  0614  0080               	movwf	0
  2960  0615                     l132:
  2961  0615  0008               	return
  2962  0616                     __end_of_map_var:
  2963                           
  2964                           	psect	text15
  2965  0674                     __ptext15:	
  2966 ;; *************** function ___wmul *****************
  2967 ;; Defined at:
  2968 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  multiplier      2    3[COMMON] unsigned int 
  2971 ;;  multiplicand    2    5[COMMON] unsigned int 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  product         2    0[BANK0 ] unsigned int 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  2    3[COMMON] unsigned int 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2983 ;;      Params:         4       0       0       0       0
  2984 ;;      Locals:         0       2       0       0       0
  2985 ;;      Temps:          0       0       0       0       0
  2986 ;;      Totals:         4       2       0       0       0
  2987 ;;Total ram usage:        6 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    1
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		_map_var
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           
  2998                           ;psect for function ___wmul
  2999  0674                     ___wmul:
  3000  0674                     l2022:	
  3001                           ;incstack = 0
  3002                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3003                           
  3004  0674  1283               	bcf	3,5	;RP0=0, select bank0
  3005  0675  1303               	bcf	3,6	;RP1=0, select bank0
  3006  0676  01A0               	clrf	___wmul@product
  3007  0677  01A1               	clrf	___wmul@product+1
  3008  0678                     l2024:
  3009  0678  1C73               	btfss	___wmul@multiplier,0
  3010  0679  2E7B               	goto	u901
  3011  067A  2E7C               	goto	u900
  3012  067B                     u901:
  3013  067B  2E84               	goto	l386
  3014  067C                     u900:
  3015  067C                     l2026:
  3016  067C  0875               	movf	___wmul@multiplicand,w
  3017  067D  1283               	bcf	3,5	;RP0=0, select bank0
  3018  067E  1303               	bcf	3,6	;RP1=0, select bank0
  3019  067F  07A0               	addwf	___wmul@product,f
  3020  0680  1803               	skipnc
  3021  0681  0AA1               	incf	___wmul@product+1,f
  3022  0682  0876               	movf	___wmul@multiplicand+1,w
  3023  0683  07A1               	addwf	___wmul@product+1,f
  3024  0684                     l386:
  3025  0684  3001               	movlw	1
  3026  0685                     u915:
  3027  0685  1003               	clrc
  3028  0686  0DF5               	rlf	___wmul@multiplicand,f
  3029  0687  0DF6               	rlf	___wmul@multiplicand+1,f
  3030  0688  3EFF               	addlw	-1
  3031  0689  1D03               	skipz
  3032  068A  2E85               	goto	u915
  3033  068B                     l2028:
  3034  068B  3001               	movlw	1
  3035  068C                     u925:
  3036  068C  1003               	clrc
  3037  068D  0CF4               	rrf	___wmul@multiplier+1,f
  3038  068E  0CF3               	rrf	___wmul@multiplier,f
  3039  068F  3EFF               	addlw	-1
  3040  0690  1D03               	skipz
  3041  0691  2E8C               	goto	u925
  3042  0692                     l2030:
  3043  0692  0873               	movf	___wmul@multiplier,w
  3044  0693  0474               	iorwf	___wmul@multiplier+1,w
  3045  0694  1D03               	btfss	3,2
  3046  0695  2E97               	goto	u931
  3047  0696  2E98               	goto	u930
  3048  0697                     u931:
  3049  0697  2E78               	goto	l2024
  3050  0698                     u930:
  3051  0698                     l2032:
  3052  0698  1283               	bcf	3,5	;RP0=0, select bank0
  3053  0699  1303               	bcf	3,6	;RP1=0, select bank0
  3054  069A  0821               	movf	___wmul@product+1,w
  3055  069B  00F4               	movwf	?___wmul+1
  3056  069C  0820               	movf	___wmul@product,w
  3057  069D  00F3               	movwf	?___wmul
  3058  069E                     l388:
  3059  069E  0008               	return
  3060  069F                     __end_of___wmul:
  3061                           
  3062                           	psect	text16
  3063  0419                     __ptext16:	
  3064 ;; *************** function ___awdiv *****************
  3065 ;; Defined at:
  3066 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  divisor         2    2[BANK0 ] int 
  3069 ;;  dividend        2    4[BANK0 ] int 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  quotient        2    8[BANK0 ] int 
  3072 ;;  sign            1    7[BANK0 ] unsigned char 
  3073 ;;  counter         1    6[BANK0 ] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  2    2[BANK0 ] int 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, status,0
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3083 ;;      Params:         0       4       0       0       0
  3084 ;;      Locals:         0       4       0       0       0
  3085 ;;      Temps:          1       0       0       0       0
  3086 ;;      Totals:         1       8       0       0       0
  3087 ;;Total ram usage:        9 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    1
  3090 ;; This function calls:
  3091 ;;		Nothing
  3092 ;; This function is called by:
  3093 ;;		_map_var
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           
  3098                           ;psect for function ___awdiv
  3099  0419                     ___awdiv:
  3100  0419                     l2036:	
  3101                           ;incstack = 0
  3102                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3103                           
  3104  0419  1283               	bcf	3,5	;RP0=0, select bank0
  3105  041A  1303               	bcf	3,6	;RP1=0, select bank0
  3106  041B  01A7               	clrf	___awdiv@sign
  3107  041C                     l2038:
  3108  041C  1FA3               	btfss	___awdiv@divisor+1,7
  3109  041D  2C1F               	goto	u941
  3110  041E  2C20               	goto	u940
  3111  041F                     u941:
  3112  041F  2C27               	goto	l2044
  3113  0420                     u940:
  3114  0420                     l2040:
  3115  0420  09A2               	comf	___awdiv@divisor,f
  3116  0421  09A3               	comf	___awdiv@divisor+1,f
  3117  0422  0AA2               	incf	___awdiv@divisor,f
  3118  0423  1903               	skipnz
  3119  0424  0AA3               	incf	___awdiv@divisor+1,f
  3120  0425                     l2042:
  3121  0425  01A7               	clrf	___awdiv@sign
  3122  0426  0AA7               	incf	___awdiv@sign,f
  3123  0427                     l2044:
  3124  0427  1FA5               	btfss	___awdiv@dividend+1,7
  3125  0428  2C2A               	goto	u951
  3126  0429  2C2B               	goto	u950
  3127  042A                     u951:
  3128  042A  2C34               	goto	l2050
  3129  042B                     u950:
  3130  042B                     l2046:
  3131  042B  09A4               	comf	___awdiv@dividend,f
  3132  042C  09A5               	comf	___awdiv@dividend+1,f
  3133  042D  0AA4               	incf	___awdiv@dividend,f
  3134  042E  1903               	skipnz
  3135  042F  0AA5               	incf	___awdiv@dividend+1,f
  3136  0430                     l2048:
  3137  0430  3001               	movlw	1
  3138  0431  00F7               	movwf	??___awdiv
  3139  0432  0877               	movf	??___awdiv,w
  3140  0433  06A7               	xorwf	___awdiv@sign,f
  3141  0434                     l2050:
  3142  0434  01A8               	clrf	___awdiv@quotient
  3143  0435  01A9               	clrf	___awdiv@quotient+1
  3144  0436                     l2052:
  3145  0436  0822               	movf	___awdiv@divisor,w
  3146  0437  0423               	iorwf	___awdiv@divisor+1,w
  3147  0438  1903               	btfsc	3,2
  3148  0439  2C3B               	goto	u961
  3149  043A  2C3C               	goto	u960
  3150  043B                     u961:
  3151  043B  2C73               	goto	l2072
  3152  043C                     u960:
  3153  043C                     l2054:
  3154  043C  01A6               	clrf	___awdiv@counter
  3155  043D  0AA6               	incf	___awdiv@counter,f
  3156  043E  2C4A               	goto	l2060
  3157  043F                     l2056:
  3158  043F  3001               	movlw	1
  3159  0440                     u975:
  3160  0440  1003               	clrc
  3161  0441  0DA2               	rlf	___awdiv@divisor,f
  3162  0442  0DA3               	rlf	___awdiv@divisor+1,f
  3163  0443  3EFF               	addlw	-1
  3164  0444  1D03               	skipz
  3165  0445  2C40               	goto	u975
  3166  0446                     l2058:
  3167  0446  3001               	movlw	1
  3168  0447  00F7               	movwf	??___awdiv
  3169  0448  0877               	movf	??___awdiv,w
  3170  0449  07A6               	addwf	___awdiv@counter,f
  3171  044A                     l2060:
  3172  044A  1FA3               	btfss	___awdiv@divisor+1,7
  3173  044B  2C4D               	goto	u981
  3174  044C  2C4E               	goto	u980
  3175  044D                     u981:
  3176  044D  2C3F               	goto	l2056
  3177  044E                     u980:
  3178  044E                     l2062:
  3179  044E  3001               	movlw	1
  3180  044F                     u995:
  3181  044F  1003               	clrc
  3182  0450  0DA8               	rlf	___awdiv@quotient,f
  3183  0451  0DA9               	rlf	___awdiv@quotient+1,f
  3184  0452  3EFF               	addlw	-1
  3185  0453  1D03               	skipz
  3186  0454  2C4F               	goto	u995
  3187  0455  0823               	movf	___awdiv@divisor+1,w
  3188  0456  0225               	subwf	___awdiv@dividend+1,w
  3189  0457  1D03               	skipz
  3190  0458  2C5B               	goto	u1005
  3191  0459  0822               	movf	___awdiv@divisor,w
  3192  045A  0224               	subwf	___awdiv@dividend,w
  3193  045B                     u1005:
  3194  045B  1C03               	skipc
  3195  045C  2C5E               	goto	u1001
  3196  045D  2C5F               	goto	u1000
  3197  045E                     u1001:
  3198  045E  2C66               	goto	l2068
  3199  045F                     u1000:
  3200  045F                     l2064:
  3201  045F  0822               	movf	___awdiv@divisor,w
  3202  0460  02A4               	subwf	___awdiv@dividend,f
  3203  0461  0823               	movf	___awdiv@divisor+1,w
  3204  0462  1C03               	skipc
  3205  0463  03A5               	decf	___awdiv@dividend+1,f
  3206  0464  02A5               	subwf	___awdiv@dividend+1,f
  3207  0465                     l2066:
  3208  0465  1428               	bsf	___awdiv@quotient,0
  3209  0466                     l2068:
  3210  0466  3001               	movlw	1
  3211  0467                     u1015:
  3212  0467  1003               	clrc
  3213  0468  0CA3               	rrf	___awdiv@divisor+1,f
  3214  0469  0CA2               	rrf	___awdiv@divisor,f
  3215  046A  3EFF               	addlw	-1
  3216  046B  1D03               	skipz
  3217  046C  2C67               	goto	u1015
  3218  046D                     l2070:
  3219  046D  3001               	movlw	1
  3220  046E  02A6               	subwf	___awdiv@counter,f
  3221  046F  1D03               	btfss	3,2
  3222  0470  2C72               	goto	u1021
  3223  0471  2C73               	goto	u1020
  3224  0472                     u1021:
  3225  0472  2C4E               	goto	l2062
  3226  0473                     u1020:
  3227  0473                     l2072:
  3228  0473  0827               	movf	___awdiv@sign,w
  3229  0474  1903               	btfsc	3,2
  3230  0475  2C77               	goto	u1031
  3231  0476  2C78               	goto	u1030
  3232  0477                     u1031:
  3233  0477  2C7D               	goto	l2076
  3234  0478                     u1030:
  3235  0478                     l2074:
  3236  0478  09A8               	comf	___awdiv@quotient,f
  3237  0479  09A9               	comf	___awdiv@quotient+1,f
  3238  047A  0AA8               	incf	___awdiv@quotient,f
  3239  047B  1903               	skipnz
  3240  047C  0AA9               	incf	___awdiv@quotient+1,f
  3241  047D                     l2076:
  3242  047D  0829               	movf	___awdiv@quotient+1,w
  3243  047E  00A3               	movwf	?___awdiv+1
  3244  047F  0828               	movf	___awdiv@quotient,w
  3245  0480  00A2               	movwf	?___awdiv
  3246  0481                     l539:
  3247  0481  0008               	return
  3248  0482                     __end_of___awdiv:
  3249                           
  3250                           	psect	text17
  3251  021A                     __ptext17:	
  3252 ;; *************** function _encabezado_usart *****************
  3253 ;; Defined at:
  3254 ;;		line 142 in file "mainMaster.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;		None
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0, pclath, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3268 ;;      Params:         0       0       0       0       0
  3269 ;;      Locals:         0       0       0       0       0
  3270 ;;      Temps:          2       0       0       0       0
  3271 ;;      Totals:         2       0       0       0       0
  3272 ;;Total ram usage:        2 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    2
  3275 ;; This function calls:
  3276 ;;		_usart_T_nl
  3277 ;;		_usart_T_virt
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           
  3284                           ;psect for function _encabezado_usart
  3285  021A                     _encabezado_usart:
  3286  021A                     l1642:	
  3287                           ;incstack = 0
  3288                           ; Regs used in _encabezado_usart: [wreg+status,2+status,0+pclath+cstack]
  3289                           
  3290                           
  3291                           ;mainMaster.c: 148:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3292  021A  3003               	movlw	3
  3293  021B  00F5               	movwf	??_encabezado_usart+1
  3294  021C  3097               	movlw	151
  3295  021D  00F4               	movwf	??_encabezado_usart
  3296  021E                     u1297:
  3297  021E  0BF4               	decfsz	??_encabezado_usart,f
  3298  021F  2A1E               	goto	u1297
  3299  0220  0BF5               	decfsz	??_encabezado_usart+1,f
  3300  0221  2A1E               	goto	u1297
  3301  0222  2A23               	nop2
  3302  0223                     l1644:
  3303                           
  3304                           ;mainMaster.c: 149:     usart_T_virt(83);
  3305  0223  3053               	movlw	83
  3306  0224  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3307  0229                     l1646:
  3308                           
  3309                           ;mainMaster.c: 150:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3310  0229  3003               	movlw	3
  3311  022A  00F5               	movwf	??_encabezado_usart+1
  3312  022B  3097               	movlw	151
  3313  022C  00F4               	movwf	??_encabezado_usart
  3314  022D                     u1307:
  3315  022D  0BF4               	decfsz	??_encabezado_usart,f
  3316  022E  2A2D               	goto	u1307
  3317  022F  0BF5               	decfsz	??_encabezado_usart+1,f
  3318  0230  2A2D               	goto	u1307
  3319  0231  2A32               	nop2
  3320                           
  3321                           ;mainMaster.c: 151:     usart_T_virt(49);
  3322  0232  3031               	movlw	49
  3323  0233  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3324  0238                     l1648:
  3325                           
  3326                           ;mainMaster.c: 152:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3327  0238  3003               	movlw	3
  3328  0239  00F5               	movwf	??_encabezado_usart+1
  3329  023A  3097               	movlw	151
  3330  023B  00F4               	movwf	??_encabezado_usart
  3331  023C                     u1317:
  3332  023C  0BF4               	decfsz	??_encabezado_usart,f
  3333  023D  2A3C               	goto	u1317
  3334  023E  0BF5               	decfsz	??_encabezado_usart+1,f
  3335  023F  2A3C               	goto	u1317
  3336  0240  2A41               	nop2
  3337  0241                     l1650:
  3338                           
  3339                           ;mainMaster.c: 153:     usart_T_virt(58);
  3340  0241  303A               	movlw	58
  3341  0242  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3342                           
  3343                           ;mainMaster.c: 154:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3344  0247  3003               	movlw	3
  3345  0248  00F5               	movwf	??_encabezado_usart+1
  3346  0249  3097               	movlw	151
  3347  024A  00F4               	movwf	??_encabezado_usart
  3348  024B                     u1327:
  3349  024B  0BF4               	decfsz	??_encabezado_usart,f
  3350  024C  2A4B               	goto	u1327
  3351  024D  0BF5               	decfsz	??_encabezado_usart+1,f
  3352  024E  2A4B               	goto	u1327
  3353  024F  2A50               	nop2
  3354  0250                     l1652:
  3355                           
  3356                           ;mainMaster.c: 155:     usart_T_virt(32);
  3357  0250  3020               	movlw	32
  3358  0251  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3359  0256                     l1654:
  3360                           
  3361                           ;mainMaster.c: 156:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3362  0256  3003               	movlw	3
  3363  0257  00F5               	movwf	??_encabezado_usart+1
  3364  0258  3097               	movlw	151
  3365  0259  00F4               	movwf	??_encabezado_usart
  3366  025A                     u1337:
  3367  025A  0BF4               	decfsz	??_encabezado_usart,f
  3368  025B  2A5A               	goto	u1337
  3369  025C  0BF5               	decfsz	??_encabezado_usart+1,f
  3370  025D  2A5A               	goto	u1337
  3371  025E  2A5F               	nop2
  3372                           
  3373                           ;mainMaster.c: 157:     usart_T_virt(32);
  3374  025F  3020               	movlw	32
  3375  0260  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3376  0265                     l1656:
  3377                           
  3378                           ;mainMaster.c: 158:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3379  0265  3003               	movlw	3
  3380  0266  00F5               	movwf	??_encabezado_usart+1
  3381  0267  3097               	movlw	151
  3382  0268  00F4               	movwf	??_encabezado_usart
  3383  0269                     u1347:
  3384  0269  0BF4               	decfsz	??_encabezado_usart,f
  3385  026A  2A69               	goto	u1347
  3386  026B  0BF5               	decfsz	??_encabezado_usart+1,f
  3387  026C  2A69               	goto	u1347
  3388  026D  2A6E               	nop2
  3389  026E                     l1658:
  3390                           
  3391                           ;mainMaster.c: 159:     usart_T_virt(32);
  3392  026E  3020               	movlw	32
  3393  026F  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3394                           
  3395                           ;mainMaster.c: 160:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3396  0274  3003               	movlw	3
  3397  0275  00F5               	movwf	??_encabezado_usart+1
  3398  0276  3097               	movlw	151
  3399  0277  00F4               	movwf	??_encabezado_usart
  3400  0278                     u1357:
  3401  0278  0BF4               	decfsz	??_encabezado_usart,f
  3402  0279  2A78               	goto	u1357
  3403  027A  0BF5               	decfsz	??_encabezado_usart+1,f
  3404  027B  2A78               	goto	u1357
  3405  027C  2A7D               	nop2
  3406  027D                     l1660:
  3407                           
  3408                           ;mainMaster.c: 164:     usart_T_virt(83);
  3409  027D  3053               	movlw	83
  3410  027E  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3411  0283                     l1662:
  3412                           
  3413                           ;mainMaster.c: 165:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3414  0283  3003               	movlw	3
  3415  0284  00F5               	movwf	??_encabezado_usart+1
  3416  0285  3097               	movlw	151
  3417  0286  00F4               	movwf	??_encabezado_usart
  3418  0287                     u1367:
  3419  0287  0BF4               	decfsz	??_encabezado_usart,f
  3420  0288  2A87               	goto	u1367
  3421  0289  0BF5               	decfsz	??_encabezado_usart+1,f
  3422  028A  2A87               	goto	u1367
  3423  028B  2A8C               	nop2
  3424                           
  3425                           ;mainMaster.c: 166:     usart_T_virt(50);
  3426  028C  3032               	movlw	50
  3427  028D  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3428  0292                     l1664:
  3429                           
  3430                           ;mainMaster.c: 167:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3431  0292  3003               	movlw	3
  3432  0293  00F5               	movwf	??_encabezado_usart+1
  3433  0294  3097               	movlw	151
  3434  0295  00F4               	movwf	??_encabezado_usart
  3435  0296                     u1377:
  3436  0296  0BF4               	decfsz	??_encabezado_usart,f
  3437  0297  2A96               	goto	u1377
  3438  0298  0BF5               	decfsz	??_encabezado_usart+1,f
  3439  0299  2A96               	goto	u1377
  3440  029A  2A9B               	nop2
  3441  029B                     l1666:
  3442                           
  3443                           ;mainMaster.c: 168:     usart_T_virt(58);
  3444  029B  303A               	movlw	58
  3445  029C  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3446                           
  3447                           ;mainMaster.c: 169:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3448  02A1  3003               	movlw	3
  3449  02A2  00F5               	movwf	??_encabezado_usart+1
  3450  02A3  3097               	movlw	151
  3451  02A4  00F4               	movwf	??_encabezado_usart
  3452  02A5                     u1387:
  3453  02A5  0BF4               	decfsz	??_encabezado_usart,f
  3454  02A6  2AA5               	goto	u1387
  3455  02A7  0BF5               	decfsz	??_encabezado_usart+1,f
  3456  02A8  2AA5               	goto	u1387
  3457  02A9  2AAA               	nop2
  3458  02AA                     l1668:
  3459                           
  3460                           ;mainMaster.c: 170:     usart_T_virt(32);
  3461  02AA  3020               	movlw	32
  3462  02AB  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3463  02B0                     l1670:
  3464                           
  3465                           ;mainMaster.c: 171:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3466  02B0  3003               	movlw	3
  3467  02B1  00F5               	movwf	??_encabezado_usart+1
  3468  02B2  3097               	movlw	151
  3469  02B3  00F4               	movwf	??_encabezado_usart
  3470  02B4                     u1397:
  3471  02B4  0BF4               	decfsz	??_encabezado_usart,f
  3472  02B5  2AB4               	goto	u1397
  3473  02B6  0BF5               	decfsz	??_encabezado_usart+1,f
  3474  02B7  2AB4               	goto	u1397
  3475  02B8  2AB9               	nop2
  3476                           
  3477                           ;mainMaster.c: 172:     usart_T_virt(32);
  3478  02B9  3020               	movlw	32
  3479  02BA  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3480  02BF                     l1672:
  3481                           
  3482                           ;mainMaster.c: 173:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3483  02BF  3003               	movlw	3
  3484  02C0  00F5               	movwf	??_encabezado_usart+1
  3485  02C1  3097               	movlw	151
  3486  02C2  00F4               	movwf	??_encabezado_usart
  3487  02C3                     u1407:
  3488  02C3  0BF4               	decfsz	??_encabezado_usart,f
  3489  02C4  2AC3               	goto	u1407
  3490  02C5  0BF5               	decfsz	??_encabezado_usart+1,f
  3491  02C6  2AC3               	goto	u1407
  3492  02C7  2AC8               	nop2
  3493  02C8                     l1674:
  3494                           
  3495                           ;mainMaster.c: 174:     usart_T_virt(32);
  3496  02C8  3020               	movlw	32
  3497  02C9  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3498                           
  3499                           ;mainMaster.c: 175:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3500  02CE  3003               	movlw	3
  3501  02CF  00F5               	movwf	??_encabezado_usart+1
  3502  02D0  3097               	movlw	151
  3503  02D1  00F4               	movwf	??_encabezado_usart
  3504  02D2                     u1417:
  3505  02D2  0BF4               	decfsz	??_encabezado_usart,f
  3506  02D3  2AD2               	goto	u1417
  3507  02D4  0BF5               	decfsz	??_encabezado_usart+1,f
  3508  02D5  2AD2               	goto	u1417
  3509  02D6  2AD7               	nop2
  3510  02D7                     l1676:
  3511                           
  3512                           ;mainMaster.c: 178:     usart_T_virt(83);
  3513  02D7  3053               	movlw	83
  3514  02D8  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3515  02DD                     l1678:
  3516                           
  3517                           ;mainMaster.c: 179:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3518  02DD  3003               	movlw	3
  3519  02DE  00F5               	movwf	??_encabezado_usart+1
  3520  02DF  3097               	movlw	151
  3521  02E0  00F4               	movwf	??_encabezado_usart
  3522  02E1                     u1427:
  3523  02E1  0BF4               	decfsz	??_encabezado_usart,f
  3524  02E2  2AE1               	goto	u1427
  3525  02E3  0BF5               	decfsz	??_encabezado_usart+1,f
  3526  02E4  2AE1               	goto	u1427
  3527  02E5  2AE6               	nop2
  3528                           
  3529                           ;mainMaster.c: 180:     usart_T_virt(51);
  3530  02E6  3033               	movlw	51
  3531  02E7  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3532  02EC                     l1680:
  3533                           
  3534                           ;mainMaster.c: 181:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3535  02EC  3003               	movlw	3
  3536  02ED  00F5               	movwf	??_encabezado_usart+1
  3537  02EE  3097               	movlw	151
  3538  02EF  00F4               	movwf	??_encabezado_usart
  3539  02F0                     u1437:
  3540  02F0  0BF4               	decfsz	??_encabezado_usart,f
  3541  02F1  2AF0               	goto	u1437
  3542  02F2  0BF5               	decfsz	??_encabezado_usart+1,f
  3543  02F3  2AF0               	goto	u1437
  3544  02F4  2AF5               	nop2
  3545  02F5                     l1682:
  3546                           
  3547                           ;mainMaster.c: 182:     usart_T_virt(58);
  3548  02F5  303A               	movlw	58
  3549  02F6  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3550                           
  3551                           ;mainMaster.c: 183:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3552  02FB  3003               	movlw	3
  3553  02FC  00F5               	movwf	??_encabezado_usart+1
  3554  02FD  3097               	movlw	151
  3555  02FE  00F4               	movwf	??_encabezado_usart
  3556  02FF                     u1447:
  3557  02FF  0BF4               	decfsz	??_encabezado_usart,f
  3558  0300  2AFF               	goto	u1447
  3559  0301  0BF5               	decfsz	??_encabezado_usart+1,f
  3560  0302  2AFF               	goto	u1447
  3561  0303  2B04               	nop2
  3562  0304                     l1684:
  3563                           
  3564                           ;mainMaster.c: 184:     usart_T_virt(32);
  3565  0304  3020               	movlw	32
  3566  0305  120A  118A  2768  120A  118A  	fcall	_usart_T_virt
  3567  030A                     l1686:
  3568                           
  3569                           ;mainMaster.c: 185:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3570  030A  3003               	movlw	3
  3571  030B  00F5               	movwf	??_encabezado_usart+1
  3572  030C  3097               	movlw	151
  3573  030D  00F4               	movwf	??_encabezado_usart
  3574  030E                     u1457:
  3575  030E  0BF4               	decfsz	??_encabezado_usart,f
  3576  030F  2B0E               	goto	u1457
  3577  0310  0BF5               	decfsz	??_encabezado_usart+1,f
  3578  0311  2B0E               	goto	u1457
  3579  0312  2B13               	nop2
  3580                           
  3581                           ;mainMaster.c: 186:     usart_T_nl();
  3582  0313  120A  118A  2774  120A  118A  	fcall	_usart_T_nl
  3583  0318                     l1688:
  3584                           
  3585                           ;mainMaster.c: 187:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3586  0318  3003               	movlw	3
  3587  0319  00F5               	movwf	??_encabezado_usart+1
  3588  031A  3097               	movlw	151
  3589  031B  00F4               	movwf	??_encabezado_usart
  3590  031C                     u1467:
  3591  031C  0BF4               	decfsz	??_encabezado_usart,f
  3592  031D  2B1C               	goto	u1467
  3593  031E  0BF5               	decfsz	??_encabezado_usart+1,f
  3594  031F  2B1C               	goto	u1467
  3595  0320  2B21               	nop2
  3596  0321                     l117:
  3597  0321  0008               	return
  3598  0322                     __end_of_encabezado_usart:
  3599                           
  3600                           	psect	text18
  3601  0768                     __ptext18:	
  3602 ;; *************** function _usart_T_virt *****************
  3603 ;; Defined at:
  3604 ;;		line 50 in file "USART.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  t_data          1    wreg     unsigned char 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  t_data          1    3[COMMON] unsigned char 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3618 ;;      Params:         0       0       0       0       0
  3619 ;;      Locals:         1       0       0       0       0
  3620 ;;      Temps:          0       0       0       0       0
  3621 ;;      Totals:         1       0       0       0       0
  3622 ;;Total ram usage:        1 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:    1
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_encabezado_usart
  3629 ;;		_mostrar_dato
  3630 ;;		_usart_T_string
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           
  3635                           ;psect for function _usart_T_virt
  3636  0768                     _usart_T_virt:
  3637                           
  3638                           ;incstack = 0
  3639                           ; Regs used in _usart_T_virt: [wreg]
  3640                           ;usart_T_virt@t_data stored from wreg
  3641  0768  00F3               	movwf	usart_T_virt@t_data
  3642  0769                     l1500:
  3643                           
  3644                           ;USART.c: 51:     if (1 == TXSTAbits.TRMT) {
  3645  0769  1683               	bsf	3,5	;RP0=1, select bank1
  3646  076A  1303               	bcf	3,6	;RP1=0, select bank1
  3647  076B  1C98               	btfss	24,1	;volatile
  3648  076C  2F6E               	goto	u531
  3649  076D  2F6F               	goto	u530
  3650  076E                     u531:
  3651  076E  2F73               	goto	l188
  3652  076F                     u530:
  3653  076F                     l1502:
  3654                           
  3655                           ;USART.c: 52:         TXREG = t_data;
  3656  076F  0873               	movf	usart_T_virt@t_data,w
  3657  0770  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0771  1303               	bcf	3,6	;RP1=0, select bank0
  3659  0772  0099               	movwf	25	;volatile
  3660  0773                     l188:
  3661  0773  0008               	return
  3662  0774                     __end_of_usart_T_virt:
  3663                           
  3664                           	psect	text19
  3665  0774                     __ptext19:	
  3666 ;; *************** function _usart_T_nl *****************
  3667 ;; Defined at:
  3668 ;;		line 56 in file "USART.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;		None
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      void 
  3675 ;; Registers used:
  3676 ;;		wreg
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3682 ;;      Params:         0       0       0       0       0
  3683 ;;      Locals:         0       0       0       0       0
  3684 ;;      Temps:          0       0       0       0       0
  3685 ;;      Totals:         0       0       0       0       0
  3686 ;;Total ram usage:        0 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:    1
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		_main
  3693 ;;		_encabezado_usart
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           
  3698                           ;psect for function _usart_T_nl
  3699  0774                     _usart_T_nl:
  3700  0774                     l1470:	
  3701                           ;incstack = 0
  3702                           ; Regs used in _usart_T_nl: [wreg]
  3703                           
  3704                           
  3705                           ;USART.c: 57:     if (1 == TXSTAbits.TRMT) {
  3706  0774  1683               	bsf	3,5	;RP0=1, select bank1
  3707  0775  1303               	bcf	3,6	;RP1=0, select bank1
  3708  0776  1C98               	btfss	24,1	;volatile
  3709  0777  2F79               	goto	u491
  3710  0778  2F7A               	goto	u490
  3711  0779                     u491:
  3712  0779  2F7E               	goto	l192
  3713  077A                     u490:
  3714  077A                     l1472:
  3715                           
  3716                           ;USART.c: 58:         TXREG = 13;
  3717  077A  300D               	movlw	13
  3718  077B  1283               	bcf	3,5	;RP0=0, select bank0
  3719  077C  1303               	bcf	3,6	;RP1=0, select bank0
  3720  077D  0099               	movwf	25	;volatile
  3721  077E                     l192:
  3722  077E  0008               	return
  3723  077F                     __end_of_usart_T_nl:
  3724                           
  3725                           	psect	text20
  3726  04E3                     __ptext20:	
  3727 ;; *************** function _Lcd_Init *****************
  3728 ;; Defined at:
  3729 ;;		line 97 in file "lcd.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;		None
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, status,2, status,0, pclath, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3743 ;;      Params:         0       0       0       0       0
  3744 ;;      Locals:         0       0       0       0       0
  3745 ;;      Temps:          0       2       0       0       0
  3746 ;;      Totals:         0       2       0       0       0
  3747 ;;Total ram usage:        2 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:    3
  3750 ;; This function calls:
  3751 ;;		_Lcd_Cmd
  3752 ;;		_Lcd_Port
  3753 ;; This function is called by:
  3754 ;;		_main
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           
  3759                           ;psect for function _Lcd_Init
  3760  04E3                     _Lcd_Init:
  3761  04E3                     l2080:	
  3762                           ;incstack = 0
  3763                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3764                           
  3765                           
  3766                           ;lcd.c: 98:     Lcd_Port(0x00);
  3767  04E3  3000               	movlw	0
  3768  04E4  120A  118A  252D  120A  118A  	fcall	_Lcd_Port
  3769  04E9                     l2082:
  3770                           
  3771                           ;lcd.c: 99:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3772  04E9  3034               	movlw	52
  3773  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  3774  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  3775  04EC  00A1               	movwf	??_Lcd_Init+1
  3776  04ED  30F1               	movlw	241
  3777  04EE  00A0               	movwf	??_Lcd_Init
  3778  04EF                     u1477:
  3779  04EF  0BA0               	decfsz	??_Lcd_Init,f
  3780  04F0  2CEF               	goto	u1477
  3781  04F1  0BA1               	decfsz	??_Lcd_Init+1,f
  3782  04F2  2CEF               	goto	u1477
  3783  04F3                     l2084:
  3784                           
  3785                           ;lcd.c: 100:     Lcd_Cmd(0x30);
  3786  04F3  3030               	movlw	48
  3787  04F4  120A  118A  26EE  120A  118A  	fcall	_Lcd_Cmd
  3788                           
  3789                           ;lcd.c: 101:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3790  04F9  300D               	movlw	13
  3791  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  3792  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  3793  04FC  00A1               	movwf	??_Lcd_Init+1
  3794  04FD  30FB               	movlw	251
  3795  04FE  00A0               	movwf	??_Lcd_Init
  3796  04FF                     u1487:
  3797  04FF  0BA0               	decfsz	??_Lcd_Init,f
  3798  0500  2CFF               	goto	u1487
  3799  0501  0BA1               	decfsz	??_Lcd_Init+1,f
  3800  0502  2CFF               	goto	u1487
  3801  0503                     l2086:
  3802                           
  3803                           ;lcd.c: 102:     Lcd_Cmd(0x30);
  3804  0503  3030               	movlw	48
  3805  0504  120A  118A  26EE  120A  118A  	fcall	_Lcd_Cmd
  3806  0509                     l2088:
  3807                           
  3808                           ;lcd.c: 103:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3809  0509  301D               	movlw	29
  3810  050A  1283               	bcf	3,5	;RP0=0, select bank0
  3811  050B  1303               	bcf	3,6	;RP1=0, select bank0
  3812  050C  00A1               	movwf	??_Lcd_Init+1
  3813  050D  3090               	movlw	144
  3814  050E  00A0               	movwf	??_Lcd_Init
  3815  050F                     u1497:
  3816  050F  0BA0               	decfsz	??_Lcd_Init,f
  3817  0510  2D0F               	goto	u1497
  3818  0511  0BA1               	decfsz	??_Lcd_Init+1,f
  3819  0512  2D0F               	goto	u1497
  3820  0513  0000               	nop
  3821                           
  3822                           ;lcd.c: 104:     Lcd_Cmd(0x30);
  3823  0514  3030               	movlw	48
  3824  0515  120A  118A  26EE  120A  118A  	fcall	_Lcd_Cmd
  3825                           
  3826                           ;lcd.c: 106:     Lcd_Cmd(0x38);
  3827  051A  3038               	movlw	56
  3828  051B  120A  118A  26EE  120A  118A  	fcall	_Lcd_Cmd
  3829                           
  3830                           ;lcd.c: 107:     Lcd_Cmd(0x0C);
  3831  0520  300C               	movlw	12
  3832  0521  120A  118A  26EE  120A  118A  	fcall	_Lcd_Cmd
  3833                           
  3834                           ;lcd.c: 108:     Lcd_Cmd(0x06);
  3835  0526  3006               	movlw	6
  3836  0527  120A  118A  26EE  120A  118A  	fcall	_Lcd_Cmd
  3837  052C                     l278:
  3838  052C  0008               	return
  3839  052D                     __end_of_Lcd_Init:
  3840                           
  3841                           	psect	text21
  3842  06EE                     __ptext21:	
  3843 ;; *************** function _Lcd_Cmd *****************
  3844 ;; Defined at:
  3845 ;;		line 62 in file "lcd.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  a               1    wreg     unsigned char 
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;  a               1    6[COMMON] unsigned char 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      void 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0, pclath, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3859 ;;      Params:         0       0       0       0       0
  3860 ;;      Locals:         1       0       0       0       0
  3861 ;;      Temps:          2       0       0       0       0
  3862 ;;      Totals:         3       0       0       0       0
  3863 ;;Total ram usage:        3 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; Hardware stack levels required when called:    2
  3866 ;; This function calls:
  3867 ;;		_Lcd_Port
  3868 ;; This function is called by:
  3869 ;;		_Lcd_Set_Cursor
  3870 ;;		_Lcd_Init
  3871 ;;		_Lcd_Clear
  3872 ;;		_Lcd_Shift_Right
  3873 ;;		_Lcd_Shift_Left
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           
  3878                           ;psect for function _Lcd_Cmd
  3879  06EE                     _Lcd_Cmd:
  3880                           
  3881                           ;incstack = 0
  3882                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3883                           ;Lcd_Cmd@a stored from wreg
  3884  06EE  00F6               	movwf	Lcd_Cmd@a
  3885  06EF                     l1992:
  3886                           
  3887                           ;lcd.c: 63:     RC1 = 0;
  3888  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  3889  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  3890  06F1  1087               	bcf	7,1	;volatile
  3891  06F2                     l1994:
  3892                           
  3893                           ;lcd.c: 64:     Lcd_Port(a);
  3894  06F2  0876               	movf	Lcd_Cmd@a,w
  3895  06F3  120A  118A  252D  120A  118A  	fcall	_Lcd_Port
  3896  06F8                     l1996:
  3897                           
  3898                           ;lcd.c: 65:     RC0 = 1;
  3899  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  3900  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  3901  06FA  1407               	bsf	7,0	;volatile
  3902  06FB                     l1998:
  3903                           
  3904                           ;lcd.c: 66:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3905  06FB  300B               	movlw	11
  3906  06FC  00F5               	movwf	??_Lcd_Cmd+1
  3907  06FD  3062               	movlw	98
  3908  06FE  00F4               	movwf	??_Lcd_Cmd
  3909  06FF                     u1507:
  3910  06FF  0BF4               	decfsz	??_Lcd_Cmd,f
  3911  0700  2EFF               	goto	u1507
  3912  0701  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3913  0702  2EFF               	goto	u1507
  3914  0703  0000               	nop
  3915  0704                     l2000:
  3916                           
  3917                           ;lcd.c: 67:     RC0 = 0;
  3918  0704  1283               	bcf	3,5	;RP0=0, select bank0
  3919  0705  1303               	bcf	3,6	;RP1=0, select bank0
  3920  0706  1007               	bcf	7,0	;volatile
  3921  0707                     l266:
  3922  0707  0008               	return
  3923  0708                     __end_of_Lcd_Cmd:
  3924                           
  3925                           	psect	text22
  3926  052D                     __ptext22:	
  3927 ;; *************** function _Lcd_Port *****************
  3928 ;; Defined at:
  3929 ;;		line 27 in file "lcd.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  a               1    wreg     unsigned char 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;  a               1    3[COMMON] unsigned char 
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3943 ;;      Params:         0       0       0       0       0
  3944 ;;      Locals:         1       0       0       0       0
  3945 ;;      Temps:          0       0       0       0       0
  3946 ;;      Totals:         1       0       0       0       0
  3947 ;;Total ram usage:        1 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; Hardware stack levels required when called:    1
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_Lcd_Cmd
  3954 ;;		_Lcd_Init
  3955 ;;		_Lcd_Write_Char
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           
  3960                           ;psect for function _Lcd_Port
  3961  052D                     _Lcd_Port:
  3962                           
  3963                           ;incstack = 0
  3964                           ; Regs used in _Lcd_Port: [wreg]
  3965                           ;Lcd_Port@a stored from wreg
  3966  052D  00F3               	movwf	Lcd_Port@a
  3967  052E                     l1964:
  3968                           
  3969                           ;lcd.c: 28:     if (a & 1)
  3970  052E  1C73               	btfss	Lcd_Port@a,0
  3971  052F  2D31               	goto	u791
  3972  0530  2D32               	goto	u790
  3973  0531                     u791:
  3974  0531  2D36               	goto	l247
  3975  0532                     u790:
  3976  0532                     l1966:
  3977                           
  3978                           ;lcd.c: 29:         RD0 = 1;
  3979  0532  1283               	bcf	3,5	;RP0=0, select bank0
  3980  0533  1303               	bcf	3,6	;RP1=0, select bank0
  3981  0534  1408               	bsf	8,0	;volatile
  3982  0535  2D39               	goto	l248
  3983  0536                     l247:	
  3984                           ;lcd.c: 30:     else
  3985                           
  3986                           
  3987                           ;lcd.c: 31:         RD0 = 0;
  3988  0536  1283               	bcf	3,5	;RP0=0, select bank0
  3989  0537  1303               	bcf	3,6	;RP1=0, select bank0
  3990  0538  1008               	bcf	8,0	;volatile
  3991  0539                     l248:
  3992                           
  3993                           ;lcd.c: 32:     if (a & 2)
  3994  0539  1CF3               	btfss	Lcd_Port@a,1
  3995  053A  2D3C               	goto	u801
  3996  053B  2D3D               	goto	u800
  3997  053C                     u801:
  3998  053C  2D3F               	goto	l249
  3999  053D                     u800:
  4000  053D                     l1968:
  4001                           
  4002                           ;lcd.c: 33:         RD1 = 1;
  4003  053D  1488               	bsf	8,1	;volatile
  4004  053E  2D40               	goto	l250
  4005  053F                     l249:	
  4006                           ;lcd.c: 34:     else
  4007                           
  4008                           
  4009                           ;lcd.c: 35:         RD1 = 0;
  4010  053F  1088               	bcf	8,1	;volatile
  4011  0540                     l250:
  4012                           
  4013                           ;lcd.c: 36:     if (a & 4)
  4014  0540  1D73               	btfss	Lcd_Port@a,2
  4015  0541  2D43               	goto	u811
  4016  0542  2D44               	goto	u810
  4017  0543                     u811:
  4018  0543  2D46               	goto	l251
  4019  0544                     u810:
  4020  0544                     l1970:
  4021                           
  4022                           ;lcd.c: 37:         RD2 = 1;
  4023  0544  1508               	bsf	8,2	;volatile
  4024  0545  2D47               	goto	l252
  4025  0546                     l251:	
  4026                           ;lcd.c: 38:     else
  4027                           
  4028                           
  4029                           ;lcd.c: 39:         RD2 = 0;
  4030  0546  1108               	bcf	8,2	;volatile
  4031  0547                     l252:
  4032                           
  4033                           ;lcd.c: 40:     if (a & 8)
  4034  0547  1DF3               	btfss	Lcd_Port@a,3
  4035  0548  2D4A               	goto	u821
  4036  0549  2D4B               	goto	u820
  4037  054A                     u821:
  4038  054A  2D4D               	goto	l253
  4039  054B                     u820:
  4040  054B                     l1972:
  4041                           
  4042                           ;lcd.c: 41:         RD3 = 1;
  4043  054B  1588               	bsf	8,3	;volatile
  4044  054C  2D4E               	goto	l254
  4045  054D                     l253:	
  4046                           ;lcd.c: 42:     else
  4047                           
  4048                           
  4049                           ;lcd.c: 43:         RD3 = 0;
  4050  054D  1188               	bcf	8,3	;volatile
  4051  054E                     l254:
  4052                           
  4053                           ;lcd.c: 44:     if (a & 16)
  4054  054E  1E73               	btfss	Lcd_Port@a,4
  4055  054F  2D51               	goto	u831
  4056  0550  2D52               	goto	u830
  4057  0551                     u831:
  4058  0551  2D54               	goto	l255
  4059  0552                     u830:
  4060  0552                     l1974:
  4061                           
  4062                           ;lcd.c: 45:         RD4 = 1;
  4063  0552  1608               	bsf	8,4	;volatile
  4064  0553  2D55               	goto	l256
  4065  0554                     l255:	
  4066                           ;lcd.c: 46:     else
  4067                           
  4068                           
  4069                           ;lcd.c: 47:         RD4 = 0;
  4070  0554  1208               	bcf	8,4	;volatile
  4071  0555                     l256:
  4072                           
  4073                           ;lcd.c: 48:     if (a & 32)
  4074  0555  1EF3               	btfss	Lcd_Port@a,5
  4075  0556  2D58               	goto	u841
  4076  0557  2D59               	goto	u840
  4077  0558                     u841:
  4078  0558  2D5B               	goto	l257
  4079  0559                     u840:
  4080  0559                     l1976:
  4081                           
  4082                           ;lcd.c: 49:         RD5 = 1;
  4083  0559  1688               	bsf	8,5	;volatile
  4084  055A  2D5C               	goto	l258
  4085  055B                     l257:	
  4086                           ;lcd.c: 50:     else
  4087                           
  4088                           
  4089                           ;lcd.c: 51:         RD5 = 0;
  4090  055B  1288               	bcf	8,5	;volatile
  4091  055C                     l258:
  4092                           
  4093                           ;lcd.c: 52:     if (a & 64)
  4094  055C  1F73               	btfss	Lcd_Port@a,6
  4095  055D  2D5F               	goto	u851
  4096  055E  2D60               	goto	u850
  4097  055F                     u851:
  4098  055F  2D62               	goto	l259
  4099  0560                     u850:
  4100  0560                     l1978:
  4101                           
  4102                           ;lcd.c: 53:         RD6 = 1;
  4103  0560  1708               	bsf	8,6	;volatile
  4104  0561  2D63               	goto	l260
  4105  0562                     l259:	
  4106                           ;lcd.c: 54:     else
  4107                           
  4108                           
  4109                           ;lcd.c: 55:         RD6 = 0;
  4110  0562  1308               	bcf	8,6	;volatile
  4111  0563                     l260:
  4112                           
  4113                           ;lcd.c: 56:     if (a & 128)
  4114  0563  1FF3               	btfss	Lcd_Port@a,7
  4115  0564  2D66               	goto	u861
  4116  0565  2D67               	goto	u860
  4117  0566                     u861:
  4118  0566  2D69               	goto	l261
  4119  0567                     u860:
  4120  0567                     l1980:
  4121                           
  4122                           ;lcd.c: 57:         RD7 = 1;
  4123  0567  1788               	bsf	8,7	;volatile
  4124  0568  2D6A               	goto	l263
  4125  0569                     l261:	
  4126                           ;lcd.c: 58:     else
  4127                           
  4128                           
  4129                           ;lcd.c: 59:         RD7 = 0;
  4130  0569  1388               	bcf	8,7	;volatile
  4131  056A                     l263:
  4132  056A  0008               	return
  4133  056B                     __end_of_Lcd_Port:
  4134                           
  4135                           	psect	text23
  4136  0647                     __ptext23:	
  4137 ;; *************** function _isr *****************
  4138 ;; Defined at:
  4139 ;;		line 337 in file "mainMaster.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;		None
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;		None
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      void 
  4146 ;; Registers used:
  4147 ;;		wreg
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4153 ;;      Params:         0       0       0       0       0
  4154 ;;      Locals:         0       0       0       0       0
  4155 ;;      Temps:          3       0       0       0       0
  4156 ;;      Totals:         3       0       0       0       0
  4157 ;;Total ram usage:        3 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		Interrupt level 1
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           
  4167                           ;psect for function _isr
  4168  0647                     _isr:
  4169  0647                     i1l1854:
  4170                           
  4171                           ;mainMaster.c: 338:     GIE = 0;
  4172  0647  138B               	bcf	11,7	;volatile
  4173                           
  4174                           ;mainMaster.c: 339:     if (1 == SSPIF) {
  4175  0648  1283               	bcf	3,5	;RP0=0, select bank0
  4176  0649  1303               	bcf	3,6	;RP1=0, select bank0
  4177  064A  1D8C               	btfss	12,3	;volatile
  4178  064B  2E4D               	goto	u72_21
  4179  064C  2E4E               	goto	u72_20
  4180  064D                     u72_21:
  4181  064D  2E6C               	goto	i1l1872
  4182  064E                     u72_20:
  4183  064E                     i1l1856:
  4184                           
  4185                           ;mainMaster.c: 340:         if (0 == PORTBbits.RB7) {
  4186  064E  1B86               	btfsc	6,7	;volatile
  4187  064F  2E51               	goto	u73_21
  4188  0650  2E52               	goto	u73_20
  4189  0651                     u73_21:
  4190  0651  2E58               	goto	i1l156
  4191  0652                     u73_20:
  4192  0652                     i1l1858:
  4193                           
  4194                           ;mainMaster.c: 341:             PORTBbits.RB7 = 1;
  4195  0652  1786               	bsf	6,7	;volatile
  4196  0653                     i1l1860:
  4197                           
  4198                           ;mainMaster.c: 342:             pot = SSPBUF;
  4199  0653  0813               	movf	19,w	;volatile
  4200  0654  00F0               	movwf	??_isr
  4201  0655  0870               	movf	??_isr,w
  4202  0656  00BF               	movwf	_pot
  4203                           
  4204                           ;mainMaster.c: 343:         } else if (0 == PORTBbits.RB6) {
  4205  0657  2E6B               	goto	i1l1870
  4206  0658                     i1l156:
  4207  0658  1B06               	btfsc	6,6	;volatile
  4208  0659  2E5B               	goto	u74_21
  4209  065A  2E5C               	goto	u74_20
  4210  065B                     u74_21:
  4211  065B  2E62               	goto	i1l158
  4212  065C                     u74_20:
  4213  065C                     i1l1862:
  4214                           
  4215                           ;mainMaster.c: 344:             PORTBbits.RB6 = 1;
  4216  065C  1706               	bsf	6,6	;volatile
  4217  065D                     i1l1864:
  4218                           
  4219                           ;mainMaster.c: 345:             cont = SSPBUF;
  4220  065D  0813               	movf	19,w	;volatile
  4221  065E  00F0               	movwf	??_isr
  4222  065F  0870               	movf	??_isr,w
  4223  0660  00BE               	movwf	_cont
  4224                           
  4225                           ;mainMaster.c: 346:         } else if (0 == PORTBbits.RB5) {
  4226  0661  2E6B               	goto	i1l1870
  4227  0662                     i1l158:
  4228  0662  1A86               	btfsc	6,5	;volatile
  4229  0663  2E65               	goto	u75_21
  4230  0664  2E66               	goto	u75_20
  4231  0665                     u75_21:
  4232  0665  2E6B               	goto	i1l1870
  4233  0666                     u75_20:
  4234  0666                     i1l1866:
  4235                           
  4236                           ;mainMaster.c: 347:             PORTBbits.RB5 = 1;
  4237  0666  1686               	bsf	6,5	;volatile
  4238  0667                     i1l1868:
  4239                           
  4240                           ;mainMaster.c: 348:             temp = SSPBUF;
  4241  0667  0813               	movf	19,w	;volatile
  4242  0668  00F0               	movwf	??_isr
  4243  0669  0870               	movf	??_isr,w
  4244  066A  00B8               	movwf	_temp
  4245  066B                     i1l1870:
  4246                           
  4247                           ;mainMaster.c: 350:         SSPIF = 0;
  4248  066B  118C               	bcf	12,3	;volatile
  4249  066C                     i1l1872:
  4250                           
  4251                           ;mainMaster.c: 352:     GIE = 1;
  4252  066C  178B               	bsf	11,7	;volatile
  4253  066D                     i1l161:
  4254  066D  0872               	movf	??_isr+2,w
  4255  066E  008A               	movwf	10
  4256  066F  0E71               	swapf	??_isr+1,w
  4257  0670  0083               	movwf	3
  4258  0671  0EFE               	swapf	btemp,f
  4259  0672  0E7E               	swapf	btemp,w
  4260  0673  0009               	retfie
  4261  0674                     __end_of_isr:
  4262  007E                     btemp	set	126	;btemp
  4263  007E                     wtemp0	set	126
  4264                           
  4265                           	psect	intentry
  4266  0004                     __pintentry:	
  4267                           ;incstack = 0
  4268                           ; Regs used in _isr: [wreg]
  4269                           
  4270  0004                     interrupt_function:
  4271  007E                     saved_w	set	btemp
  4272  0004  00FE               	movwf	btemp
  4273  0005  0E03               	swapf	3,w
  4274  0006  00F1               	movwf	??_isr+1
  4275  0007  080A               	movf	10,w
  4276  0008  00F2               	movwf	??_isr+2
  4277  0009  120A  118A  2E47   	ljmp	_isr
  4278                           
  4279                           	psect	config
  4280                           
  4281                           ;Config register CONFIG1 @ 0x2007
  4282                           ;	Oscillator Selection bits
  4283                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  4284                           ;	Watchdog Timer Enable bit
  4285                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4286                           ;	Power-up Timer Enable bit
  4287                           ;	PWRTE = OFF, PWRT disabled
  4288                           ;	RE3/MCLR pin function select bit
  4289                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4290                           ;	Code Protection bit
  4291                           ;	CP = OFF, Program memory code protection is disabled
  4292                           ;	Data Code Protection bit
  4293                           ;	CPD = OFF, Data memory code protection is disabled
  4294                           ;	Brown Out Reset Selection bits
  4295                           ;	BOREN = OFF, BOR disabled
  4296                           ;	Internal External Switchover bit
  4297                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4298                           ;	Fail-Safe Clock Monitor Enabled bit
  4299                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4300                           ;	Low Voltage Programming Enable bit
  4301                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4302                           ;	In-Circuit Debugger Mode bit
  4303                           ;	DEBUG = 0x1, unprogrammed default
  4304  2007                     	org	8199
  4305  2007  20D1               	dw	8401
  4306                           
  4307                           ;Config register CONFIG2 @ 0x2008
  4308                           ;	Brown-out Reset Selection bit
  4309                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4310                           ;	Flash Program Memory Self Write Enable bits
  4311                           ;	WRT = OFF, Write protection off
  4312  2008                     	org	8200
  4313  2008  3FFF               	dw	16383

Data Sizes:
    Strings     91
    Constant    0
    Data        2
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     23      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_8(CODE[20]), STR_7(CODE[12]), STR_6(CODE[13]), STR_5(CODE[10]), 
		 -> STR_4(CODE[16]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[17]), 

    num_ascii@code	PTR unsigned char  size(1) Largest target is 1
		 -> sdata(COMMON[1]), 

    conts@uni	PTR unsigned char  size(1) Largest target is 1
		 -> cont_u(COMMON[1]), 

    conts@dec	PTR unsigned char  size(1) Largest target is 1
		 -> cont_d(COMMON[1]), 

    conts@cent	PTR unsigned char  size(1) Largest target is 1
		 -> cont_c(BANK0[1]), 

    voltaje@volt_d2	PTR unsigned char  size(1) Largest target is 1
		 -> pot_d2(BANK0[1]), 

    voltaje@volt_d1	PTR unsigned char  size(1) Largest target is 1
		 -> pot_d1(BANK0[1]), 

    voltaje@volt_u	PTR unsigned char  size(1) Largest target is 1
		 -> pot_u(BANK0[1]), 

    map_var@v_out	PTR unsigned char  size(1) Largest target is 1
		 -> temp_m(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_voltaje
    _mostrar_titulo_lcd->_Lcd_Set_Cursor
    _mostrar_dato->_Lcd_Set_Cursor
    _mostrar_dato->_conts
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _map_var->___awdiv
    ___awdiv->___wmul
    _encabezado_usart->_usart_T_virt
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_map_var
    _mostrar_titulo_lcd->_Lcd_Set_Cursor
    _mostrar_titulo_lcd->_Lcd_Write_String
    _mostrar_dato->_Lcd_Set_Cursor
    _mostrar_dato->_Lcd_Write_String
    _map_var->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8253
                                             19 BANK0      4     4      0
                           _Lcd_Init
                   _encabezado_usart
                            _map_var
                       _mostrar_dato
                 _mostrar_titulo_lcd
                              _setup
                          _spi_count
                            _spi_pot
                           _spi_temp
                         _usart_T_nl
                            _voltaje
 ---------------------------------------------------------------------------------
 (1) _voltaje                                              5     2      3     406
                                              3 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (1) _spi_temp                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spi_pot                                              1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spi_count                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _usart_conf
 ---------------------------------------------------------------------------------
 (2) _usart_conf                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mostrar_titulo_lcd                                   0     0      0    1888
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _mostrar_dato                                         3     3      0    3771
                                              3 BANK0      3     3      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _conts
                          _num_ascii
                       _usart_T_virt
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            4     3      1     948
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _conts                                                5     2      3     634
                                              3 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     697
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0     279
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1191
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _map_var                                              9     4      5    1639
                                             10 BANK0      9     4      5
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _encabezado_usart                                     2     2      0      22
                                              4 COMMON     2     2      0
                         _usart_T_nl
                       _usart_T_virt
 ---------------------------------------------------------------------------------
 (2) _usart_T_virt                                         1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _usart_T_nl                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     527
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     279
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     248
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _encabezado_usart
     _usart_T_nl
     _usart_T_virt
   _map_var
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _mostrar_dato
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _conts
     _num_ascii
     _usart_T_virt
   _mostrar_titulo_lcd
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _setup
     _usart_conf
   _spi_count
   _spi_pot
   _spi_temp
   _usart_T_nl
   _voltaje

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     17      20       5       40.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B      12        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 12:01:07 2021

                          pc 0002           usart_T_virt@t_data 0073                 ___awdiv@sign 0027  
                         fsr 0004          ___wmul@multiplicand 0075                          l111 0646  
                        l120 0219                          l105 0331                          l114 073D  
                        l123 0759                          l132 0615                          l117 0321  
                        l141 05A6                          l150 05E1                          l126 0767  
                        l216 0418                          l129 074B                          l250 0540  
                        l251 0546                          l260 0563                          l252 0547  
                        l261 0569                          l253 054D                          l254 054E  
                        l263 056A                          l255 0554                          l247 0536  
                        l256 0555                          l248 0539                          l192 077E  
                        l184 072E                          l257 055B                          l249 053F  
                        l281 071D                          l258 055C                          l266 0707  
                        l259 0562                          l275 06ED                          l188 0773  
                        l278 052C                          l287 06C7                          l386 0684  
                        l539 0481                          l388 069E                          _GIE 005F  
                        _RC0 0038                          _RC1 0039                          _RD0 0040  
                        _RD1 0041                          _RD2 0042                          _RD3 0043  
                        _RD4 0044                          _RD5 0045                          _RD6 0046  
                        _RD7 0047                          u530 076F                          u531 076E  
                        u540 05BA                          u700 057E                          u541 05B9  
                        u701 057D                          u550 05D4                          u710 0598  
                        u551 05D3                          u711 0597                          u800 053D  
                        u801 053C                          u810 0544                          u490 077A  
                        u811 0543                          u491 0779                          u820 054B  
                        u900 067C                          u821 054A                          u901 067B  
                        u830 0552                          u831 0551                          u840 0559  
                        u841 0558                          u850 0560                          u930 0698  
                        u851 055F                          u931 0697                          u915 0685  
                        u860 0567                          u940 0420                          u861 0566  
                        u941 041F                          u925 068C                          u790 0532  
                        u950 042B                          u870 06D0                          u791 0531  
                        u951 042A                          u871 06CF                          u960 043C  
                        u880 06E2                          u961 043B                          u881 06E1  
                        u890 06C7                          u891 06C6                          u980 044E  
                        u981 044D                          u975 0440                          u995 044F  
                        _aux 0037                          _isr 0647                          _pot 003F  
                        fsr0 0004                          indf 0000        __size_of_usart_T_virt 000C  
                       l2000 0704                         l2010 06E2                         l2002 06CB  
                       l2012 06E7                         l2004 06D0                         l2020 06BA  
                       l2100 003D                         l2030 0692                         l2022 0674  
                       l2006 06D5                         l2014 06A2                         l2110 005F  
                       l2102 0043                         l2040 0420                         l2032 0698  
                       l2024 0678                         l2008 06DC                         l2016 06A5  
                       l2120 009D                         l2112 0069                         l2104 0049  
                       l2200 0322                         l2050 0434                         l2042 0425  
                       l2026 067C                         l2018 06B2                         l2130 00C3  
                       l2122 00A3                         l2114 0081                         l2106 0053  
                       l2210 0361                         l2202 0336                         l1500 0769  
                       l2060 044A                         l2052 0436                         l2044 0427  
                       l2036 0419                         l2028 068B                         l2140 00FD  
                       l2132 00C9                         l2124 00AD                         l2116 008B  
                       l2108 0059                         l2212 037A                         l2204 0341  
                       l1502 076F                         l2070 046D                         l2062 044E  
                       l2054 043C                         l2046 042B                         l2038 041C  
                       l1510 03B1                         l2150 0137                         l2142 0115  
                       l2134 00D9                         l2126 00B3                         l2118 0097  
                       l2214 038E                         l2206 0351                         l2080 04E3  
                       l2064 045F                         l2056 043F                         l2072 0473  
                       l2048 0430                         l1520 03D4                         l1512 03B8  
                       l1504 03A2                         l2160 016F                         l2152 0141  
                       l2144 011F                         l2136 00DF                         l2128 00B9  
                       l2216 0393                         l2208 0356                         l2082 04E9  
                       l2074 0478                         l2066 0465                         l2058 0446  
                       l2090 05E5                         l1522 03DB                         l1514 03BF  
                       l1506 03A3                         l1530 03F0                         l2170 01A9  
                       l2162 0179                         l2154 0159                         l2146 012B  
                       l2138 00E9                         l2084 04F3                         l2076 047D  
                       l2068 0466                         l1540 05B4                         l1524 03E2  
                       l1516 03C6                         l1508 03AA                         l2180 01E1  
                       l2172 01AF                         l2164 017F                         l2156 0163  
                       l2148 0131                         l2092 072F                         l1620 0636  
                       l1612 0616                         l1700 0764                         l2086 0503  
                       l1470 0774                         l1550 05D4                         l1542 05BA  
                       l1526 03E9                         l1518 03CD                         l2190 0209  
                       l2182 01ED                         l2174 01B5                         l2166 0189  
                       l2158 0169                         l2094 0737                         l1630 0644  
                       l1622 063A                         l1614 0629                         l1702 073E  
                       l1710 056C                         l2088 0509                         l1472 077A  
                       l1552 05E0                         l1544 05C3                         l1536 05A8  
                       l2192 020F                         l2184 01F3                         l2176 01BF  
                       l2168 019D                         l2096 0029                         l1624 063B  
                       l1616 062E                         l1704 0741                         l1720 0589  
                       l1712 056D                         l1650 0241                         l1642 021A  
                       l1546 05C5                         l1538 05A9                         l2186 01F9  
                       l2178 01D7                         l2098 0031                         l1474 071E  
                       l1626 063C                         l1618 0632                         l1706 0748  
                       l1722 0592                         l1714 0578                         l1660 027D  
                       l1652 0250                         l1644 0223                         l1548 05CE  
                       l2188 0203                         l1476 0722                         l1628 0640  
                       l1724 0598                         l1716 057E                         l1670 02B0  
                       l1662 0283                         l1654 0256                         l1646 0229  
                       l1478 0723                         l1726 05A5                         l1718 0587  
                       l1680 02EC                         l1672 02BF                         l1664 0292  
                       l1656 0265                         l1648 0238                         l1682 02F5  
                       l1674 02C8                         l1666 029B                         l1658 026E  
                       l2298 03F8                         l1690 074C                         l1684 0304  
                       l1676 02D7                         l1668 02AA                         l1692 074F  
                       l1686 030A                         l1678 02DD                         l1694 0756  
                       l1688 0318                         l1696 075A                         l1970 0544  
                       l1698 075D                         l1980 0567                         l1972 054B  
                       l1964 052E                         l1974 0552                         l1966 0532  
                       l1990 071A                         l1982 0709                         l1976 0559  
                       l1968 053D                         l1992 06EF                         l1984 070C  
                       l1978 0560                         l1994 06F2                         l1986 0712  
                       l1996 06F8                         l1988 0715                         l1998 06FB  
                       ?_isr 0070                         STR_1 049C                         STR_2 04E0  
                       STR_3 04E0                         STR_4 04AD                         STR_5 04D6  
                       STR_6 04BD                         STR_7 04CA                         STR_8 0488  
                       u1000 045F                         u1001 045E                         u1020 0473  
                       u1021 0472                         u1005 045B                         u1030 0478  
                       u1031 0477                         u1015 0467                         u1107 0751  
                       u1117 075F                         u1207 013D                         u1127 004F  
                       u1217 015F                         u1137 0065                         u1307 022D  
                       u1227 0175                         u1147 0087                         u1067 033C  
                       u1317 023C                         u1237 0185                         u1157 00A9  
                       u1077 034C                         u1407 02C3                         u1327 024B  
                       u1247 01BB                         u1167 00BF                         u1087 035C  
                       u1417 02D2                         u1337 025A                         u1257 01DD  
                       u1177 00D5                         u1097 0743                         u1507 06FF  
                       u1427 02E1                         u1347 0269                         u1267 01FF  
                       u1187 00E5                         u1437 02F0                         u1357 0278  
                       u1277 0215                         u1197 011B                         u1447 02FF  
                       u1367 0287                         u1287 0717                         u1457 030E  
                       u1377 0296                         u1297 021E                         u1467 031C  
                       u1387 02A5                         u1477 04EF                         u1397 02B4  
                       u1487 04FF                         _PIE1 008C                         u1497 050F  
          ?_Lcd_Write_String 0070                         _cont 003E                         _main 0322  
                       _temp 0038                         btemp 007E                         start 000C  
         ??_Lcd_Write_String 0076              __end_of_Lcd_Cmd 0708                        ??_isr 0070  
                      ?_main 0070              __end_of___awdiv 0482                        _ANSEL 0188  
            ___awdiv@divisor 0022                 _usart_T_virt 0768                        i1l161 066D  
                      i1l156 0658                        i1l158 0662              ___awdiv@counter 0026  
                      _RCREG 001A                        _RCSTA 0018                        _SPBRG 0099  
                      _PORTA 0005                        _PORTB 0006                        _PORTC 0007  
                      _PORTD 0008                        u72_20 064E                        u72_21 064D  
                      u73_20 0652                        u73_21 0651      __size_of_Lcd_Set_Cursor 0026  
                      _TRISA 0085                        _TRISB 0086                        _TRISC 0087  
                      _TRISD 0088                        u74_20 065C                        _SSPIF 0063  
                      u74_21 065B                        u75_20 0666                        u75_21 0665  
                      _TXREG 0019                        _TXSTA 0098              __end_of_map_var 0616  
                      _conts 05A7    __size_of_encabezado_usart 0108                        _sdata 0078  
                      _pot_u 003D                        _setup 0616                        pclath 000A  
            __end_of_spi_pot 075A                        status 0003                        wtemp0 007E  
            __end_of_voltaje 05A7             __end_of_Lcd_Init 052D             __end_of_Lcd_Port 056B  
            __initialization 000F                 __end_of_main 03A1                  map_var@v_in 0032  
               conts@data_in 0077                       ??_main 0033                       ?_conts 0073  
           ___awdiv@dividend 0024                       ?_setup 0070                       _ANSELH 0189  
                     i1l1860 0653                       i1l1862 065C                       i1l1870 066B  
                     i1l1854 0647                       i1l1864 065D                       i1l1856 064E  
                     i1l1872 066C                       i1l1866 0666                       i1l1858 0652  
                     i1l1868 0667                       _INTCON 000B                    ??_Lcd_Cmd 0074  
                     _SPBRGH 009A      __size_of_Lcd_Write_Char 0016                       _SSPCON 0014  
                     _SSPBUF 0013           _mostrar_titulo_lcd 072F                       ___wmul 0674  
                  ??___awdiv 0077                       _cont_c 0039                       _cont_d 0079  
                     _cont_u 007A          ?_mostrar_titulo_lcd 0070             ___awdiv@quotient 0028  
                     _pot_d1 003C                       _pot_d2 003B                       _temp_m 003A  
                  ??_map_var 002F                       saved_w 007E             __end_of_spi_temp 074C  
                  ??_spi_pot 0073                    ??_voltaje 0076              Lcd_Set_Cursor@a 0021  
            Lcd_Set_Cursor@b 0077         ??_mostrar_titulo_lcd 0078      __end_of__initialization 0025  
             __pcstackCOMMON 0070                 __pidataBANK0 077F                __end_of_conts 05E2  
               map_var@inMax 002C                 map_var@inMin 002B                __end_of_setup 0647  
               map_var@v_out 002A               _Lcd_Set_Cursor 06C8                    ?_Lcd_Init 0070  
                  ?_Lcd_Port 0070                      ??_conts 0076             _encabezado_usart 021A  
                    ??_setup 0073                   __pbssBANK0 0037                   __pmaintext 0322  
                    ?___wmul 0073                   __pintentry 0004                      _BAUDCTL 0187  
  __size_of_Lcd_Write_String 0029       __end_of_Lcd_Set_Cursor 06EE           __size_of_num_ascii 0078  
         __size_of_spi_count 000E                   ??_Lcd_Init 0020                   ??_Lcd_Port 0073  
                    _SSPCON2 0091                      _SSPSTAT 0094                   __stringtab 0482  
             _Lcd_Write_Char 0708                      _Lcd_Cmd 06EE                      ___awdiv 0419  
                  ?_spi_temp 0070              __size_of___wmul 002B              ?_Lcd_Set_Cursor 0077  
                    __ptext1 056B                      __ptext2 073E                      __ptext3 074C  
                    __ptext4 075A                      __ptext5 0616                      __ptext6 071E  
                    __ptext7 072F                      __ptext8 0029                      __ptext9 03A1  
                    _map_var 05E2                 __size_of_isr 002D                      _spi_pot 074C  
                    _voltaje 056B       __end_of_Lcd_Write_Char 071E         end_of_initialization 0025  
              ?_mostrar_dato 0070            __end_of_num_ascii 0419            __end_of_spi_count 0768  
                 ??_spi_temp 0073                    Lcd_Port@a 0073                    _PORTBbits 0006  
            ?_Lcd_Write_Char 0070            Lcd_Write_String@a 0022            Lcd_Write_String@i 0020  
             ??_mostrar_dato 0023                   _usart_T_nl 0774                    _TXSTAbits 0098  
                 _usart_conf 071E     __end_of_encabezado_usart 0322               __end_of___wmul 069F  
             voltaje@data_in 0077             _Lcd_Write_String 069F          start_initialization 000F  
              map_var@outMax 002E                map_var@outMin 002D                  __end_of_isr 0674  
             voltaje@volt_d1 0074               voltaje@volt_d2 0075            __size_of_Lcd_Init 004A  
          __size_of_Lcd_Port 003E  __size_of_mostrar_titulo_lcd 000F                     ??___wmul 0077  
                __pdataBANK0 003E              Lcd_Write_Char@a 0075                ?_usart_T_virt 0070  
                __pbssCOMMON 0078                    ___latbits 0002                __pcstackBANK0 0020  
                   ?_Lcd_Cmd 0070                  ?_usart_T_nl 0070                  ?_usart_conf 0070  
           ??_Lcd_Set_Cursor 0020                     ?___awdiv 0022            __size_of_spi_temp 000E  
             ??_usart_T_virt 0073                    __pstrings 0482         __end_of_mostrar_dato 021A  
                   ?_map_var 002A               num_ascii@value 0076                     ?_spi_pot 0070  
             __size_of_conts 003B                     ?_voltaje 0073               __size_of_setup 0031  
          interrupt_function 0004               ___wmul@product 0020                     Lcd_Cmd@a 0076  
                   _PIR1bits 000C                    _num_ascii 03A1                    _spi_count 075A  
                __stringbase 0487            ___wmul@multiplier 0073          __size_of_usart_T_nl 000B  
           ??_Lcd_Write_Char 0074          __size_of_usart_conf 0011                    conts@cent 0075  
                   _Lcd_Init 04E3                     _Lcd_Port 052D     __end_of_Lcd_Write_String 06C8  
              voltaje@volt_u 0073             __size_of_Lcd_Cmd 001A                   ?_num_ascii 0073  
          ?_encabezado_usart 0070                   ?_spi_count 0070             __size_of___awdiv 0069  
         ??_encabezado_usart 0074           __end_of__stringtab 0488             __size_of_map_var 0034  
                   __ptext10 05A7                     __ptext11 069F                     __ptext20 04E3  
                   __ptext12 0708                     __ptext21 06EE                     __ptext13 06C8  
                   __ptext22 052D                     __ptext14 05E2                     __ptext23 0647  
                   __ptext15 0674                     __ptext16 0419                     __ptext17 021A  
                   __ptext18 0768                     __ptext19 0774             __size_of_spi_pot 000E  
              num_ascii@code 0073             __size_of_voltaje 003C                __size_of_main 007F  
       __end_of_usart_T_virt 0774        __size_of_mostrar_dato 01F1                     _spi_temp 073E  
                   conts@dec 0074                     conts@uni 0073   __end_of_mostrar_titulo_lcd 073E  
                   intlevel1 0000                 ??_usart_T_nl 0073                 _mostrar_dato 0029  
               ??_usart_conf 0073                    stringcode 0482                  ??_num_ascii 0074  
                ??_spi_count 0073           Lcd_Set_Cursor@temp 0022           __end_of_usart_T_nl 077F  
                   stringdir 0482                     stringtab 0482           __end_of_usart_conf 072F  
